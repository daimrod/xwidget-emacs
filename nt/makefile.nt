#
#  Top level makefile for building GNU Emacs on Windows NT
#
#  This file is part of GNU Emacs.
#  
#  GNU Emacs is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2, or (at your option)
#  any later version.
#  
#  GNU Emacs is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with GNU Emacs; see the file COPYING.  If not, write to
#  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */
#
#   Geoff Voelker (voelker@cs.washington.edu)	11-20-93
#						  9-6-94
!include makefile.def

ALL		= $(BLD)\addpm.exe

.c{$(BLD)}.obj:
		  $(CC) $(CFLAGS) -Fo$@ $<

addpm:		  $(BLD) $(BLD)\addpm.exe
$(BLD)\addpm.obj: addpm.c
$(BLD)\addpm.exe: $(BLD)\addpm.obj
		  $(LINK) -out:$@ -subsystem:console -entry:mainCRTStartup \
		  $(SYS_LDFLAGS) $** $(BASE_LIBS) user32.lib

# Since Windows 95 does not support multiple commands on one command line
# (e.g., in for loops), we cannot use for loops any more.
# SUBDIRS	      = lib-src src lisp

#
# Build emacs
#
BUILD_CMD	= $(MAKE) -f makefile.nt all
all:		$(BLD) $(ALL)
		cd ..\lib-src
		$(BUILD_CMD)
		cd ..\src
		$(BUILD_CMD)
		cd ..\lisp
		$(BUILD_CMD)
		cd ..\nt


emacs.bat:	emacs.bat.in
		echo @echo off > emacs.bat
		echo REM !!! Warning: This file automatically generated !!! >> emacs.bat
		echo set emacs_dir=$(INSTALL_DIR)>> emacs.bat
		type emacs.bat.in >> emacs.bat

#
# Build and install emacs in INSTALL_DIR
#
INSTALL_CMD	= $(MAKE) -f makefile.nt install
install:	all emacs.bat
		- mkdir $(INSTALL_DIR)
		cd ..\lib-src
		$(INSTALL_CMD)
		cd ..\src
		$(INSTALL_CMD)
		cd ..\lisp
		$(INSTALL_CMD)
		cd ..\nt		
		- $(CP) emacs.bat $(INSTALL_DIR)\bin
		- $(ADDPM) $(INSTALL_DIR)\bin\emacs.bat $(EMACS_ICON_PATH)
		- del /q ..\same-dir.tst
		- del /q $(INSTALL_DIR)\same-dir.tst
		echo SameDirTest > ..\same-dir.tst
		if not exist $(INSTALL_DIR)\same-dir.tst $(MAKE) -f makefile.nt real_install
		- del /q ..\same-dir.tst
		- del /q $(INSTALL_DIR)\same-dir.tst

#
# This installs executables from ..\bin into the installation directory
# without building anything.
#
fast_install:
		- mkdir $(INSTALL_DIR)\data
		$(CP) ..\lib-src\DOC $(INSTALL_DIR)\etc
		- mkdir $(INSTALL_DIR)\bin
		- $(CP) emacs.bat $(INSTALL_DIR)\bin
		- del /q ..\same-dir.tst
		- del /q $(INSTALL_DIR)\same-dir.tst
		echo SameDirTest > ..\same-dir.tst
		if not exist $(INSTALL_DIR)\same-dir.tst $(CP) ..\bin\emacs.exe $(INSTALL_DIR)\bin
		if not exist $(INSTALL_DIR)\same-dir.tst $(CP) ..\bin\etags.exe $(INSTALL_DIR)\bin
		if not exist $(INSTALL_DIR)\same-dir.tst $(CP) ..\bin\ctags.exe $(INSTALL_DIR)\bin
		if not exist $(INSTALL_DIR)\same-dir.tst nmake -f $(MAKE) real_install
		- del /q ..\same-dir.tst
		- del /q $(INSTALL_DIR)\same-dir.tst

real_install:
		- del /q ..\same-dir.tst
		- del /q $(INSTALL_DIR)\same-dir.tst
		echo SameDirTest > ..\same-dir.tst
		- mkdir $(INSTALL_DIR)\etc
		- mkdir $(INSTALL_DIR)\info
		- mkdir $(INSTALL_DIR)\lock
		- mkdir $(INSTALL_DIR)\data
		if not exist $(INSTALL_DIR)\nt\same-dir.tst $(CP_DIR) ..\etc $(INSTALL_DIR)\etc
		if not exist $(INSTALL_DIR)\nt\same-dir.tst $(CP_DIR) ..\info $(INSTALL_DIR)\info
		- del /q ..\same-dir.tst
		- del /q $(INSTALL_DIR)\same-dir.tst

#
# Maintenance
# 
CLEAN_CMD	= $(MAKE) -f makefile.nt clean
clean:;		- del /q /s *~
		- $(DEL_TREE) deleted
		- $(DEL_TREE) obj
		- $(DEL_TREE) ..\bin
		cd ..\lib-src
		$(CLEAN_CMD)
		cd ..\src
		$(CLEAN_CMD)
		cd ..\lisp
		$(CLEAN_CMD)
		cd ..\nt
