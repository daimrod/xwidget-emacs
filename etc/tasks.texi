\input texinfo @c -*-texinfo-*-
@c %**start of header
@setfilename tasks.info
@settitle GNU Task List
@c UPDATE THIS DATE WHENEVER YOU MAKE CHANGES!
@set lastupdate 18 July 1997
@c %**end of header

@setchapternewpage off

@titlepage
@title GNU Task List
@author Free Software Foundation
@author last updated @value{lastupdate}
@end titlepage

@ifinfo
@node Top, Intro, (dir), (dir)
@top GNU Task List

This file is updated automatically from @file{tasks.texi}, which was
last updated on @value{lastupdate}.
@end ifinfo

@menu
* Intro::
* Highest Priority::
* Documentation::
* Unix-Related Projects::
* Kernel Projects::
* Extensions::
* X Windows Projects::
* Encryption Projects::
* Other Projects::
* Compilers::
* Games and Recreations::
@end menu

@node Intro
@chapter About the GNU Task List

If you did not obtain this file directly from the GNU project and
recently, please check for a newer version.  You can ftp the task list
from any GNU FTP host in directory @file{/pub/gnu/tasks/}.  The task
list is available there in several different formats: @file{tasks.text},
@file{tasks.texi}, @file{tasks.info}, and @file{tasks.dvi}.  The GNU
HURD task list is also there in file @file{tasks.hurd}.
@c to fix an overfill, join the paragraphs -len
The task list is also available on the GNU World Wide Web server:
@url{http://www.gnu.ai.mit.edu/prep/tasks_toc.html}.

If you start working steadily on a project, please let @code{gnu@@prep}
know.  We might have information that could help you; we'd also like to
send you the GNU coding standards.

Because of the natural tendency for most volunteers to write programming
tools or programming languages, we have a comparative shortage of
applications useful for non-programmer users.  Therefore, we ask you to
consider writing such a program.

Typically, a new program that does a completely new job advances
the GNU project, and the free software community, more than an
improvement to an existing program.

Typically, new features or new programs advance the free software
community more, in the long run, than porting existing programs.  One
reason is that portable new features and programs benefit people on many
platforms, not just one.  At the same time, there tend to be many
volunteers for porting---so your help will be more valuable in other
areas, where volunteers are more scarce.

Typically, it is more useful to extend a program in functionality than
to improve performance.  Users who use the new functionality will
appreciate it very much, if they use it; but even when they benefit from
a performance improvement, they may not consider it very important.

@node Highest Priority
@chapter Highest Priority

This task list mentions a large number of tasks that would be more or
less useful.  With luck, at least one of them will inspire you to start
writing.  It's better for you to work on any task that inspires you than
not write free software at all.

But if you would like to work on what we need most, here is a list of
high priority projects.

@itemize @bullet
@item
If you are good at writing documentation, please do.

@item
If you are very good at C programming and interested in kernels, you can
help develop the GNU HURD, the kernel for the GNU system.  Please have a
look at @url{http://www.gnu.ai.mit.edu/software/hurd/hurd.html}, and
then get a copy of the latest HURD task list from:

@itemize @bullet

@item
@url{http://www.gnu.ai.mit.edu/prep/tasks.hurd.html}, via the World Wide
Web.

@item
@url{ftp://prep.ai.mit.edu/pub/gnu/tasks/tasks.hurd}, via anonymous FTP.

@item
@email{gnu@@prep.ai.mit.edu} via e-mail.

@end itemize

@item
If you are a Scheme fan, you can help develop Guile.  Please have a look
at the URL @url{http://www.gnu.ai.mit.edu:/software/guile/guile.html}
and then contact @email{guile@@gnu.ai.mit.edu}.

@item
Help develop the GNU web browser, E-scape.

@item
Help develop Windows NT emulation for GNU systems---for example, WINE.

@item
Implement the Kermit data transfer protocol.  (See below.)

@item
Develop a free compatible replacement for Qt, a graphics toolkit
library.

@item
Develop a substitute, which runs on GNU systems, for some very popular
or very important application that many non-programmers use on Windows,
and which has no comparable free equivalent now.
@end itemize

@node Documentation
@chapter Documentation

We very urgently need documentation for some parts of the system
that already exist or will exist very soon:

@itemize @bullet
@item
A C reference manual.  (RMS made a try at one, which you could start
with).

@item
A manual for Ghostscript.

@item
A manual for TCSH.

@item
A manual for PIC (the graphics formatting language).

@item
A manual for Oleo.

@item
A book on how GCC works and why various machine descriptions
are written as they are.

@item
A manual for programming X-window applications.

@item
Manuals for various X window managers.

@item
Reference cards for those manuals that don't have them: C
Compiler, Make, Texinfo, Termcap, and maybe the C Library.

@item
Many utilities need documentation, including @code{grep} and others.
@end itemize

@node Unix-Related Projects
@chapter Unix-Related Projects

@itemize @bullet
@item
An improved version of the POSIX utility @code{pax}.  There is one on
Usenet, but it is said to be poorly written.  Talk with
@code{thomas@@gnu.ai.mit.edu} about this project.

@ignore
@item
Modify the GNU @code{dc} program to use the math routines of GNU
@code{bc}.
@end ignore

@item
A @code{grap} preprocessor program for @code{troff}.

@item
Various other libraries.

@item
An emulation of SCCS that works using RCS.

@item
Less urgent: @code{diction}, @code{explain}, and @code{style}, or
something to do the same kind of job.  Compatibility with Unix is not
especially important for these programs.
@end itemize

@node Kernel Projects
@chapter Kernel-Related Projects

@itemize @bullet
@item
An over-the-ethernet debugger stub that will allow the kernel to be
debugged from GDB running on another machine.

This stub needs its own self-contained implementation of all protocols
to be used, since the GNU system will use user processes to implement
all but the lowest levels, and the stub won't be able to use those
processes.  If a simple self-contained implementation of IP and TCP is
impractical, it might be necessary to design a new, simple protocol
based directly on ethernet.  It's not crucial to support high speed or
communicating across gateways.

It might be possible to use the Mach ethernet driver code, but it would
need some changes.

@item
A shared memory X11 server to run under MACH is very desirable.  The
machine specific parts should be kept well separated.

@item
An implementation of CIFS, the ``Common Internet File System,'' for the
HURD.  This protocol is an offshoot of SMB.
@end itemize

@node Extensions
@chapter Extensions to Existing GNU Software

@itemize @bullet
@item
Enhance GCC.  See files @file{PROJECTS} and @file{PROBLEMS} in the GCC
distribution.

@item
Interface GDB to Guile, so that users can write debugging commands in
Scheme.  This would also make it possible to write, in Scheme, a
graphical interface that uses Tk and is tightly integrated into GDB.

@item
Rewrite GNU @code{sed} completely, to make it cleaner.

@item
Rewrite Automake and Deja-GNU in Scheme, so they can run in Guile.
Right now they are written in Perl and TCL, respectively.  There are
also other programs, not terribly long, which we would also like
to have rewritten in Scheme.

@item
Finish the partially-implemented C interpreter project.

@item
Help with the development of GNUStep, a GNU implementation of the
OpenStep specification.

@item
Add features to GNU Make to record the precise rule with which each file
was last recompiled; then recompile any file if its rule in the makefile
has changed.

@item
Add a few features to GNU @code{diff}, such as handling large input
files without reading entire files into core.

@item
An @code{nroff} macro package to simplify @code{texi2roff}.

@item
A queueing system for the mailer Smail that groups pending work by
destination rather than by original message.  This makes it possible
to schedule retries coherently for each destination.  Talk to
@code{tron@@veritas.com} about this.

Smail also needs a new chief maintainer.

@item
Enhanced cross-reference browsing tools.  (We now have something at
about the level of @code{cxref}.)  We also could use something like
@code{ctrace}.  (Some people are now working on this project.)
@end itemize

@node X Windows Projects
@chapter X Windows Projects

@itemize @bullet
@item
An emulator for Macintosh graphics calls on top of X Windows.

@item
A music playing and editing system.  This should work with LilyPond, a
free program for music typesetting.

@item
A program to edit dance notation (such as labanotation) and display
dancers moving on the screen.

@item
Port the Vibrant toolkit to work on X without using Motif.

@item
A program to display and edit Hypercard stacks.

@item
A paint program, supporting both bitmap-oriented operations and
component-oriented operations.  @code{xpaint} exists, but isn't very
usable.

@item
A vector-based drawing program in the spirit of Adobe Illustrator
and Corel Draw.

@item
An interactive 3D modeling utility with rendering/raytracing capabilities.

@item
A program for graphic morphing of scanned photographs.
@end itemize

@node Encryption Projects
@chapter Encryption Projects

These projects need to be written outside the US by people who are not
US citizens, to avoid problems with US export control law.

@itemize @bullet
@item
A free library for public-key encryption.

This library should use the Diffie-Helman algorithm for public key
encryption, not the RSA algorithm, because the Diffie-Helman patent in
the US will expire in 1997.

@item
A free program for sended encrypted mail using public-key encryption.

This program should use the library described above for the public-key
encryption.  It should use triple-DES, not IDEA, for block encryption,
because IDEA is patented in many countries and the patents will not
expire soon.

In other respects, it should be like PGP.  If the new version of PGP
no longer uses RSA and IDEA, compatibility with it may be feasible.

There is a suggestion that the Blowfish algorithm might be a good choice
for the non-public-key block encryption.  I'm not an encryption expert
so I don't have an opinion about that.

Many people believe that PGP is free software, but that is not actually
true.  The distribution terms do not allow everyone to use and
redistribute it.  We used to think that these restrictions had been
imposed by the patent holders for the RSA and IDEA algorithms, and that
PGP could be free software if these algorithms were replaced by
alternatives.  But we have since learned that the owners of PGP are
themselves unwilling to make it free software.  Writing a new program is
the only way to get free software for this job.

@item
A free secure telnet program more or less like ssh/sshd.  Since this
requires a public key encryption algorithm, it is closely related to the
preceding item.

This program should follow the draft standard for ssh.  As always, it
cannot implement the RSA algorithm, but must instead support the
alternatives that will be patent-free in late 1997.  It cannot support
IDEA, but can use triple-DES and/or Blowfish or other non-patented
alternatives.

@item
Free software for doing secure commercial transactions on the web.
This too needs public key encryption.
@end itemize

@node Other Projects
@chapter Other Projects

If you think of others that should be added, please
send them to @code{gnu@@prep.ai.mit.edu}.

@itemize @bullet
@item
A free program that can transfer files on a serial line
using the same protocol that Kermit uses.

@item
An imitation of Page Maker or Ventura Publisher.

@item
An imitation of @code{dbase2} or @code{dbase3} (How dbased!)

@item
A bulletin board system.  There are a few free ones, but they don't have
all the features that people want in such systems.  It would make sense
to start with an existing one and add the other features.

@item
A general ledger program, including support for accounts payable, 
account receivables, payroll, inventory control, order processing, etc.

@item
A teleconferencing program which does the job of CU-SeeMe (which is,
alas, not free software).

@item
A program to typeset C code for printing.
For ideas on what to do, see the book,

@display
Human Factors and Typography for More Readable Programs,
Ronald M. Baecker and Aaron Marcus,
Addison-Wesley, ISBN 0-201-10745-7
@end display

(I don't quite agree with a few of the details they propose.)

@item
A program to convert Microsoft Word documents to text/enriched, TeX,
LaTeX, Texinfo, or some other format that free software can edit.

@item
A free replacement for the semi-free Qt library.

@item
High-quality music compression software.
(Talk with phr@@netcom.com for relevant suggestions.)

@item
A program to play sound distributed in ``Real Audio'' format.

@item
A program to generate ``Real Audio'' format from audio input.

@item
An MPEG III audio encoder/decoder (but it is necessary to check, first,
whether patents make this impossible).

@item
Speech-generation programs (there is a program from Brown U that you
could improve).

@item
Speech-recognition programs (single-speaker, disconnected speech is sufficient).

@item
More scientific mathematical subroutines.
(A clone of SPSS is being written already.)

@item
Statistical tools.

@item
A scientific data collection and processing tool,
perhaps something like Scientific Workbench and/or Khoros,

@item
Software to replace card catalogues in libraries.

@item
A project-scheduling package that accepts a list of project sub-tasks
with their interdependencies, and generates Gantt charts and Pert charts
and all the other standard project progress reports.

@item
Grammar and style checking programs.

@item
An implementation of the S language (an interpreted language used for
statistics).

@item
A translator from Scheme to C.

@item
A fast emulator for the i386 which works by translating
machine instructions into the machine language of the host machine.
(Support for emulation of other machines would enhance the program
but might make it much more difficult.)

@item
A map display or geographic information system.

@item
Optical character recognition programs; especially if suitable for
scanning documents with multiple fonts and capturing font info as well
as character codes.  Work is being done on this, but more help is needed.

@item
A program to scan a line drawing and convert it to Postscript.

@item
A program to recognize handwriting.

@item
A pen based interface.

@item
CAD software, such as a vague imitation of Autocad.

@item
A program to receive data from a serial-line tap to facilitate the
reverse-engineering of communication protocols.
@end itemize

@node Compilers
@chapter Compilers for Other Batch Languages

Volunteers are needed to write parsers/front ends for languages such as
Algol 60, Algol 68, PL/I, Cobol, Fortran 90, Eiffel, or whatever, to be
used with the code generation phases of the GNU C compiler.

@c Fortran status is here so gnu@prep and the volunteer coordinators
@c don't have to answer the question -len
You can get the status of the Fortran front end with this command:

@example
finger -l fortran@@gnu.ai.mit.edu
@end example

@node Games and Recreations
@chapter Games and Recreations

Video-oriented games that work with the X window system.

@itemize @bullet
@item
A Doom-compatible display game engine, for running the many free
levels people have written for Doom.

@item
Empire (there is a free version but it needs upgrading)

@item
An ``empire builder'' system that makes it easy to write various kinds of
simulation games.

@item
Improve GnuGo, which is not yet very sophisticated.

@item
Imitations of popular video games:

@itemize -
@item
Space war, Asteroids, Pong, Columns.
@item
Defending cities from missiles.
@item
Plane shoots at lots of other planes, tanks, etc.
@item
Wizard fights fanciful monster.
@item
A golf game.
@item
Program a robot by sticking building blocks together,
then watch it explore a world.
@item
Biomorph evolution (as in Scientific American and @cite{The Blind
Watchmaker}).
@item
A program to display effects of moving at relativistic speeds.
@end itemize

@item
Intriguing screen-saver programs to make interesting pictures.
Other such programs that are simply entertaining to watch.
For example, an aquarium.
@end itemize

We do not need @code{rogue}, as we have @code{hack}.

@contents

@bye
