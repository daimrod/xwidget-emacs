			-*- coding: utf-8; -*-
GOAL
----

The ultimate goal of this branch is to implement support for opening
multiple, different tty devices and simultaneous X and tty frames from
a single Emacs session.

WHO IS DOING IT
---------------

I'm Károly Lőrentey.  My address: lorentey@elte.hu.

Patches or suggestions are welcome!

Retrieving the latest version of the branch:

	tla register-archive lorentey@elte.hu--2004 http://lorentey.web.elte.hu/arch/2004/
	tla get lorentey@elte.hu--2004/emacs--multi-tty--0 <directory>

(I use tla 1.1.)


STATUS
------

Basic multi-tty support is there; there are some rough edges, but it
already seems to be usable.  Emacsclient has been extended to support
opening a new terminal frame.

To try it out, compile Emacs with the following commands

   	mkdir +build
	cd +build
	../configure --with-x-toolkit=no --without-x
	make bootstrap

then start up the emacs server (src/emacs, M-x server-start), and then
(from a shell prompt on another terminal) start emacsclient with

	lib-src/emacsclient -h

You'll hopefully have two fully working frames on separate terminals.
If you exit emacs, both terminals should be restored to their previous
states.  You can close the newly opened frame and return to the shell
without exiting Emacs with C-x 5 0, i.e., delete-frame.



X, Mac, Windows and DOS support is broken, probably doesn't even
compile -- this will be solved later.

Tested under GNU/Linux only.

NEWS
----

For the NEWS file:

** Support for multiple terminal devices has been added.  You can
   specify a terminal device (`tty' parameter) and a terminal type
   (`tty-type' parameter) to `make-terminal-frame'. `tty' must be a
   terminal device created by the updated emacsclient, or there will
   be problems with terminal input and window resizes.  (The kernel
   notifies processes about pending input or terminal resizes only on
   the controlling terminal, so we need emacsclient to sit on the real
   terminal device, create SIGIO signals upon terminal input, and
   forward SIGWINCH signals to us.)

   You can test for the presence of multiple terminal support by
   testing for the `multi-tty' feature.

** A make-frame-on-tty function has been added to make it easier to
   create frames on new terminals.

** Emacsclient has been extended to support opening a new terminal
   frame.

CHANGELOG
---------

See arch logs.


DIARY OF CHANGES
----------------

(ex-TODO items with explanations.)

-- Introduce a new abstraction for terminal devices.  

   (Done, see struct tty_output.  The abstraction is not yet
   complete.)

-- Change the bootstrap procedure to initialize tty_list.

   (Done, but needs review.)

-- Change make-terminal-frame to support specifying another tty.

   (Done, new frame parameters: `tty' and `tty-type'.)

-- Implement support for reading from multiple terminals.

   (Done, read_avail_input tries to read from each terminal, until one
   succeeds.  MULTIKBOARD is not used.  Secondary terminals don't send
   SIGIO!)

-- other-frame should cycle through the frames on the `current'
   terminal only.  

   (Done, by trivially modifiying next_frame and prev_frame.)

-- Support different terminal sizes.
   
   (Done, no problem.)

-- Make sure terminal resizes are handled gracefully.  (Could be
   problematic.)

   (Done.  We don't get automatic SIGWINCH for additional ttys,
   though.)

-- Extend emacsclient to automatically open a new tty when it connects
   to Emacs.
   
   (Done.  It's an ugly hack, needs more work.)

-- Redisplay must refresh the topmost frame on *all* terminals, not
   just the initial terminal.
   
   (Done, but introduced an ugly redisplay problems.  Ugh.)

-- Fix redisplay problems.

   (Done; it turned out that the entire Wcm structure must be moved
   inside tty_output.  Why didn't I catch this earlier?)

-- Provide a way for emacsclient to tell Emacs that the tty has been
   resized.

   (Done, simply forward the SIGWINCH signal.)

-- Each keypress should automatically select the frame corresponding
   to the terminal that it was coming from.  This means that Emacs
   must know from which terminal the last keyboard event came from.

   (Done, it was quite simple, the input event system already
   supported multiple frames.)

-- Fix SIGIO issue with secondary terminals.

   (Done, emacsclient signals Emacs after writing to the proxy pseudo
   terminal.  Note that this means that multi-tty does not work with
   raw ttys!)

-- Make make-terminal-frame look up the `tty' and `tty-type' frame
   parameters from the currently selected terminal before the global
   default.

   (Done.)

-- Put all cached terminal escape sequences into struct tty_output.
   Currently, they are still stored in global variables, so we don't
   really support multiple terminal types.

   (Done.  It was not fun.)

-- Implement sane error handling after initialization.  (Currently
   emacs exits if you specify a bad terminal type.)  The helpful error
   messages must still be provided when Emacs starts.

   (Done.)

-- Implement terminal deletion, i.e., deleting local frames, closing
   the tty device and restoring its previous state without exiting
   Emacs.

   (Done, but at the moment only called when an error happens during
   initialization.  There is a memory corruption error around this
   somewhere.)

-- Implement automatic deletion of terminals when the last frame on
   that terminal is closed.

   (Done.)


THINGS TO DO
------------

** Fix mysterious memory corruption error with tty deletion.  To
   trigger it, try the following shell command:

	while true; do TERM=no-such-terminal-definition emacsclient -h; done

   Emacs usually dumps core after a few dozen iterations.  (The bug
   seems to be related to the xfree()ing or bzero()ing of
   tty_output.Wcm or some other tty_output part.  Maybe there are
   outside references to struct Wcm?  Why were these vars collected
   into a struct before multi-tty support?)

   The bug does not seem to happen if the error occurs before terminal
   initialization or if I comment out all xfree()s in delete_frame.
   Update: yes it does, although it is much rarer.  Or maybe it's
   another bug.

** Change emacsclient/server.el to support the -h argument better,
   i.e. automatically close the socket when the frame is closed.

** Export delete_tty to the Lisp environment, for emacsclient.

** Restore tty screen after closing the terminal.

** 'TERM=dumb src/emacs' does not restore the terminal state.

** C-g should work on secondary terminals.

** Make parts of struct tty_output accessible from Lisp.  The device
   name and the type is sufficient.

** Find out why does Emacs abort when it wants to close its
   controlling tty.

** Implement support for starting an interactive Emacs session without
   an initial frame.  (The user would connect to it and open frames
   later, with emacsclient.)  Not necessarily a good idea.

** Support raw secondary terminals.  (This one is tricky, SIGIO works
   only on the controlling terminal.  The emacsclient solution works
   nicely, so this is not that important anyway.)

** What does interrupt_input do?  I tried to disable it for raw
   secondary tty support, but it does not seem to do anything useful.

** Move optimalization parameters (costs) from union output_data to
   a backend-neutral per-device structure.

** Find out the best way to support suspending Emacs with multiple
   ttys.

** Do tty output through term_hooks, like all other display backends.

** Fix X support.

** Allow simultaneous X and tty frames.

** Fix Mac support (I can't do this myself).

** Fix W32 support (I can't do this myself).

** Fix DOS support (I can't do this myself).



;;; arch-tag: 8da1619e-2e79-41a8-9ac9-a0485daad17d
