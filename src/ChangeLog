2000-09-05  Gerd Moellmann  <gerd@gnu.org>

	* buffer.c (Fother_buffer): Consider buffers as invisible when
	they are displayed in a window on an invisible frame.

	* window.c (window_loop) <GET_LARGEST_WINDOW>: Fix bug making
	get-largest-window always return nil.

2000-09-04  Gerd Moellmann  <gerd@gnu.org>

	* lread.c (syms_of_lread): Make Vbytecomp_version_regexp a Lisp
	variable; recognize Emacs 19 elc files.

2000-09-04  Miles Bader  <miles@gnu.org>

	* xmenu.c (xmenu_show): Call x_set_menu_resources_from_menu_face
	before initially popping up the menu, so the menu doesn't flash
	when the face settings are significantly different from the
	defaults.

2000-09-04  Stefan Monnier  <monnier@cs.yale.edu>

	* regex.c (WIDE_CHAR_SUPPORT): New macro.
	(btowc, iswctype, wctype) [_LIBC]: Redefine to __<fun>.
	(BIT_ALPHA, BIT_ALNUM, BIT_ASCII, BIT_NONASCII, BIT_GRAPH, BIT_PRINT)
	(BIT_UNIBYTE): Remove.
	(re_match_2_internal): Delete corresponding code and streamline the
	BIT_MULTIBYTE case to not bother checking ISUNIBYTE.
	(CHAR_CLASS_MAX_LENGTH) [!WIDE_CHAR_SUPPORT]: Set to 9 rather than 6.
	(re_wctype_t): New type.
	(re_wctype, re_iswctype, re_wctype_to_bit): New functions.
	(regex_compile): Use them and fix handling of overly long char classes.

2000-09-03  Andrew Innes  <andrewi@gnu.org>

	* makefile.w32-in: Change to DOS line endings.

	* s/ms-w32.h (ORDINARY_LINK): New define.

	* w32.c (_ANONYMOUS_UNION) [__GNUC__]: New define
	(_ANONYMOUS_STRUCT) [__GNUC__]: New define.

	* makefile.w32-in (clean): Don't delete config.h and epaths.h.
	(distclean): Delete them here instead.

	* w32proc.c (compare_env): Convert to uppercase for comparison,
	not lowercase, to match how the native Windows shell works.

2000-09-03  Jason Rumney  <jasonr@gnu.org>

	* ChangeLog: Remove -unix from coding. Let Emacs autodetect, as
	CVS changes the line-ends when checking in/out on DOS/Windows.

	* makefile.nt (emacs): Do not change directory to run temacs, as
	the load-path is set relative to current directory.

2000-09-03  Miles Bader  <miles@gnu.org>

	* xterm.c (x_alloc_lighter_color_for_widget): New function.

2000-09-02  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (redisplay_mode_lines): New function.
	(display_mode_lines): Return number of mode lines displayed.
	(echo_area_display): Use redisplay_mode_lines to draw garbaged
	mode lines.  Don't temporarily bind redisplay-dont-pause to t.

	* emacs.c, callint.c, doc.c, editfns.c: Remove includes of
	string.h and strings.h.
	(index) [HAVE_INDEX]: Add prototype.

	* unexelf.c (SHT_PROGBITS) [__NetBSD__ && !PT_LOAD]: Don't define.
	(SHT_MIPS_DEBUG, HDRR) [__NetBSD__ && __mips__]: Define.

	* s/netbsd.h [!NO_C_SOURCE]: Include <signal.h>.
	(GC_SETJMP_WORKS, GC_MARK_STACK): Define.

2000-09-01  Gerd Moellmann  <gerd@gnu.org>

	* lread.c (read1): Accept `?' as symbol constituent, for
	compatiblity with XEmacs.

2000-08-31  Stefan Monnier  <monnier@cs.yale.edu>

	* regex.h (RE_NO_NEWLINE_ANCHOR): New syntax flag.
	(struct re_pattern_buffer): Remove newline_anchor.
	* regex.c: Keep namespace clean for GNU libc by renaming <fun>
	to __<fun> and using `weak_alias (__<fun>, <fun>)'.
	(re_max_failures, fail_stack): Use size_t rather than unsigned.
	(regex_compile): For ^ and $, choose between buffer and line (beg|end)
	depending on the new RE_NO_NEWLINE_ANCHOR syntax flag.
	(print_compiled_pattern, re_search_2, mutually_exclusive_p)
	(re_match_2_internal, re_compile_pattern, re_comp, regcomp):
	Get rid of references to newline_anchor.
	(regcomp): Allocate and precompute a fastmap.

2000-08-31  Gerd Moellmann  <gerd@gnu.org>

	* lread.c (openp): GCPRO local variable `filename'.

2000-08-30  Stefan Monnier  <monnier@cs.yale.edu>

	* regex.h (struct re_pattern_buffer): Use size_t for used/allocated.

	* regex.c: Merge some changes from GNU libc.  Add prototypes.
	(bcopy, bcmp, REGEX_REALLOCATE, re_match_2_internal):
	Use memcmp and memcpy instead of bcopy and bcmp.
	(init_syntax_once): Use ISALNUM.
	(PUSH_FAILURE_POINT, re_match_2_internal): Remove failure_id.
	(REG_UNSET_VALUE): Remove.  Use NULL instead.
	(REG_UNSET, re_match_2_internal): Use NULL.
	(SET_HIGH_BOUND, MOVE_BUFFER_POINTER, ELSE_EXTEND_BUFFER_HIGH_BOUND):
	New macros.
	(EXTEND_BUFFER): Use them (to work with BOUNDED_POINTERS).
	(GET_UNSIGNED_NUMBER): Don't use ISDIGIT.
	(regex_compile): In handle_interval, return an error rather than try to
	unfetch the interval if we can't find the closing brace.
	Obey the RE_NO_GNU_OPS syntax bit.
	(TOLOWER): New macro.
	(regcomp): Use it.
	(regexec): Allocate regs.start and regs.end as one block.

2000-08-30  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (echo_area_display): Check display_completed instead
	of calling detect_input_pending.

	* dispnew.c (update_frame): Only set display_completed here; move
	the update_begin and update_end calls here from update_frame_1.
	(update_frame_1): Don't set display_completed here, don't call
	update_begin/update_end.

	* xfaces.c (set_font_frame_param): Use Fmodify_frame_parameters
	instead of store_frame_param.

2000-08-29  Gerd Moellmann  <gerd@gnu.org>

	* dispnew.c (build_frame_matrix_from_leaf_window): If a row of a
	desired window matrix hasn't been displayed, use the current row
	instead.  Make sure that only those frame rows are updated for
	which there exists a corresponding enabled desired row.
	
2000-08-29  Miles Bader  <miles@gnu.org>

	* xfaces.c (default_face_vector): New function.
	(Finternal_merge_in_global_face): Use it instead of merge_face_vectors.

2000-08-29  Gerd Moellmann  <gerd@gnu.org>

	* lread.c (openp): Prevent temporary string passed to
	Ffile_readable_p from being garbage collected.

2000-08-28  Dave Love  <fx@gnu.org>

	* keymap.c (store_in_keymap): Add `static' to declaration.

2000-08-28  Gerd Moellmann  <gerd@gnu.org>

	* emacs.c, callint.c, doc.c, editfns.c
	(toplevel) [HAVE_STRING_H]: Include string.h.
	(toplevel) [HAVE_STRINGS_H]: Include strings.h.
	(index): Remove prototypes which might conflict with non-standard
	definitions of index/strchr.

	* s/usg5-3.h (index): Define only if not HAVE_INDEX.
	(rindex): Define only if !HAVE_RINDEX.

	* s/sco5.h (bcopy, bzero, bcmp): Don't define.

	* config.in (HAVE_INDEX, HAVE_RINDEX, HAVE_STRINGS_H): Add undefs.

2000-08-28  Miles Bader  <miles@gnu.org>

	* xfaces.c (merge_face_vectors): Clear TO's :font attribute if
	made inconsistent by a font-related attribute in FROM.
	(merge_face_inheritance): Add function comment.

2000-08-28  Kenichi Handa  <handa@etl.go.jp>

	* keyboard.c (read_char_minibuf_menu_prompt): Call read_char with
	the 4th arg (PREV_EVENT) Qt to suppress input method.

2000-08-27  Stefan Monnier  <monnier@cs.yale.edu>

	* regex.c: Indent cpp directives and remove parens after `defined'.
	(PTR_TO_OFFSET, POS_AS_IN_BUFFER): Move to a better place.
	(ISDIGIT, ISCNTRL, ISXDIGIT) [!emacs]: Remove duplicate definition.
	(regex_compile): Use RE_FRUGAL instead of RE_ALL_GREEDY.
	(re_compile_pattern): Use size_t for length.
	(init_syntax_once): Move to a better place.
	* regex.h: Merge changes from GNU libc.  Indent cpp directives.
	(RE_FRUGAL): Replaces RE_ALL_GREEDY (inverted meaning).

	* syntax.c (back_comment): Detect cases where a comment-starter is
	actually inside another comment as in:   /* a // b */ c // d \n.
	Make it clear that `comstart_pos' is unused for nested comments.

	* keymap.c (store_in_keymap, fix_submap_inheritance): New prototypes.
	(KEYMAPP): New macro.
	(Fkeymap_parent, Fset_keymap_parent): Use it.
	(fix_submap_inheritance): Mark it static.
	(define_as_prefix, describe_buffer_bindings, describe_command)
	(describe_translation, describe_map): Complete prototypes.

	* lisp.h (store_in_keymap, fix_submap_inheritance): Remove.

	* keyboard.c (menu_bar_item): Detect duplicate entries for all items
	to better match the key-lookup behavior.

2000-08-27  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (lface_fully_specified_p): Handle :inherit.
	(Finternal_set_lisp_face_attribute): Fix typo in error message.

2000-08-27  Eli Zaretskii  <eliz@is.elta.co.il>

	* Makefile.in (dispnew.o, indent.o, fontset.o, minibuf.o)
	(process.o, scroll.o, sysdep.o): Depend on keyboard.h.
	(xterm.o): Depend on coding.h

2000-08-26  Kenichi Handa  <handa@etl.go.jp>

	* cmds.c (internal_self_insert): Delete '#ifdef HAVE_FACES' and
	the corresponding '#endif'.

2000-08-26  Miles Bader  <miles@gnu.org>

	* dispextern.h (enum lface_attribute_index): Add LFACE_INHERIT_INDEX.
	* xfaces.c (QCinherit): New variable.
	(syms_of_xfaces): Initialize it.
	(LFACE_INHERIT): New macro.
	(Finternal_get_lisp_face_attribute)
	(merge_face_vector_with_property) 
	(Finternal_set_lisp_face_attribute): Deal with :inherit attribute.
	(check_lface_attrs): Allow new types of face height.  Check
	inherit attribute.
	(CYCLE_CHECK): New macro.
	(merge_face_inheritance): New function.
	(merge_face_vectors): Merge inherited faces too.  Add F and
	CYCLE_CHECK arguments.
	(merge_face_vector_with_property, Finternal_merge_in_global_face)
	(lookup_named_face, lookup_derived_face, realize_named_face)
	(face_at_string_position, face_at_buffer_position):  Supply
	new F and CYCLE_CHECK arguments to merge_face_vectors.
	(merge_face_heights): New function.
	(merge_face_vectors, merge_face_vector_with_property) 
	(Finternal_set_lisp_face_attribute): Call merge_face_heights to
	handle relative face heights.
	(lface_same_font_attributes_p): Compare heights using EQ.

2000-08-26  Kenichi Handa  <handa@etl.go.jp>

	* charset.c (char_to_string): Check the character validity.
	(char_valid_p): If C is not less than MAX_CHAR, be sure to return
	0.

2000-08-25  Stefan Monnier  <monnier@cs.yale.edu>

	* regex.c (PUSH_FAILURE_COUNT): New macro.
	(POP_FAILURE_REG_OR_COUNT): Renamed from POP_FAILURE_REG.
	Handle popping of a register's or a counter's data.
	(POP_FAILURE_POINT): Use the new name.
	(re_match_2_internal): Push counter data on the stack for succeed_n,
	jump_n and set_number_at and remove misleading dead code in succeed_n.

2000-08-25  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (redisplay_internal): If considering all windows on all
	frames, update the display for each frame as soon as possible,
	instead of first building all desired matrices for all frames, and
	then updating them all.
	(try_cursor_movement): Handle case that last_cursor.vpos is -1.

2000-08-24  Gerd Moellmann  <gerd@gnu.org>

	* bytecode.c (mark_byte_stack): Add a comment.

	* frame.h (FRAME_FLAGS_AREA_COLS, FRAME_FLAGS_AREA_WIDTH) 
	(FRAME_LEFT_FLAGS_AREA_WIDTH): Return 0 unless frame is 
	a graphical frame.

2000-08-24  Kenichi Handa  <handa@etl.go.jp>

	* minibuf.c (do_completion): Always use compare-string, not
	string-equal because the latter doesn't pay attention to
	multibyteness of strings.

	* process.c (create_process): Don't setup raw-text coding here.
	(Fopen_network_stream): Don't set coding->src_multibyte and
	coding->dst_multibyte here.
	(read_process_output): For process filter, return unibyte string
	if default-enable-multibyte-characters is nil.
	(send_process): If OBJECT is multibyte text, be sure to encoded it
	by the specified coding system for the process.  Otherwise, setup
	raw-text coding.
	(init_process): Don't initialize default-process-coding-system
	here.

2000-08-23  Eli Zaretskii  <eliz@is.elta.co.il>

	* buffer.c (syms_of_buffer) <scroll-up-aggressively>: Doc fix.
	<scroll-down-aggressively>: Likewise.

2000-08-23  Kenichi Handa  <handa@etl.go.jp>

	* coding.c (encode_eol): Fix bug for the case of dst_bytes being
	zero.  Set coding->produced_char correctly.

2000-08-22  Andrew Innes  <andrewi@gnu.org>

	* makefile.w32-in: New file.

	* unexw32.c (unexec): Ignore old_name, and use the actual location
	of the current executable instead.  Base new_name on this.

	* w32proc.c (create_child): Remove reference to security
	descriptor, which isn't needed and doesn't compile with mingw32.

	* w32term.c [USE_CRT_DLL]: Remove unnecessary extern, which screws
	up dllimport attributes.
	(x_update_window_end): Update prototype.

	* unexec.c (write_segment) [USE_CRT_DLL]: Remove unnecessary
	extern, which screws up dllimport attributes.

	* sysdep.c [USE_CRT_DLL]: Remove unnecessary extern, which screws
	up dllimport attributes.

	* strftime.c [USE_CRT_DLL]: Remove unnecessary extern, which
	screws up dllimport attributes.

	* process.c [USE_CRT_DLL]: Remove unnecessary extern, which screws
	up dllimport attributes.
	(create_process) [USE_CRT_DLL]: Remove unnecessary extern, which
	screws up dllimport attributes.

	* lread.c [USE_CRT_DLL]: Remove unnecessary extern, which screws
	up dllimport attributes.

	* keyboard.c [USE_CRT_DLL]: Remove unnecessary extern, which
	screws up dllimport attributes.

	* floatfns.c [USE_CRT_DLL]: Remove unnecessary extern, which
	screws up dllimport attributes.

	* fileio.c [USE_CRT_DLL]: Remove unnecessary extern, which screws
	up dllimport attributes.

	* emacs.c (malloc_initialize_hook) [USE_CRT_DLL]: Remove
	unnecessary extern, which screws up dllimport attributes.
	(main): Ditto.

	* editfns.c [USE_CRT_DLL]: Remove unnecessary extern, which screws
	up dllimport attributes.

	* dispnew.c (window_change_signal) [USE_CRT_DLL]: Remove
	unnecessary extern, which screws up dllimport attributes.

	* callproc.c [USE_CRT_DLL]: Remove unnecessary extern, which
	screws up dllimport attributes.

	* buffer.c [USE_CRT_DLL]: Remove unnecessary extern, which screws
	up dllimport attributes.

	* w32proc.c (IsValidLocale): Extern missing from mingw32 headers.

	* w32bdf.c (search_file_line): 
	(set_bdf_font_info): 
	(seek_char): 
	(w32_get_bdf_glyph): 
	(w32_BDF_to_x_font): Fix compile warnings.

	* w32menu.c: Include keyboard.h before frame.h.  Fix compile
	warnings.

	* w32select.c: Include keyboard.h before frame.h.

	* w32fns.c (max): Define macro.
	(JOHAB_CHARSET): Define if not known.
	(MOD_ALT, MOD_CONTROL, MOD_SHIFT, MOD_WIN): Define if not known.
	(Fx_show_tip): Synch with X version.

	* w32xfns.c: Include keyboard.h before frame.h.

	* w32fns.c: Include keyboard.h before frame.h.

	* w32term.c: Include keyboard.h before frame.h.

	* fontset.c: Include keyboard.h before frame.h.

	* w32inevt.c: Include keyboard.h before frame.h.
	(MOUSE_MOVED): Define if not known.

	* minibuf.c: Include keyboard.h before frame.h.

	* keyboard.c: Include keyboard.h before frame.h.

	* indent.c: Include keyboard.h before frame.h.

	* dispnew.c: Include keyboard.h before frame.h.

	* buffer.c: Include keyboard.h before frame.h.

	* alloc.c: Include keyboard.h before frame.h.

	* print.c: Include keyboard.h before frame.h.

	* process.c: Include keyboard.h before frame.h.

	* scroll.c: Include keyboard.h before frame.h.

	* sysdep.c: Include keyboard.h before frame.h.

	* term.c: Include keyboard.h before frame.h.

	* window.c: Include keyboard.h before frame.h.

	* xdisp.c: Include keyboard.h before frame.h.
	Separate GLYPH_DEBUG and DEBUG_TRACE_MOVE.

	* frame.c: Include keyboard.h before frame.h.

	* w32heap.h: Undefine min, max.

	* w32gui.h: Undefine min, max.

	* unexw32.c: Change PUCHAR to PCHAR.
	(PTR_TO_OFFSET): Cast ptr to unsigned char *.
	(relocate_offset): 
	(get_section_info): 
	(copy_executable_and_dump_data): Remove unnecessary static defs.
	(copy_executable_and_dump_data): Fix compile warnings.

	* sysdep.c (NULL) [WINDOWSNT]: Define NULL if not defined.

	* w32console.c (min): Define macro.
	(clear_frame, write_glyphs): Fix compile warning.

	* w32proc.c (compare_env): 
	(find_child_console): Fix compile warning.

	* w32.c (sys_strerror): Use sys_nerr instead of _sys_nerr.  Use
	sys_errlist instead of _sys_errlist.
	(get_emacs_configuration_options): New function.

	* s/ms-w32.h (sys_nerr): Provide default definition.
	(strdup, strupr, strnicmp, stricmp, tzset, tzname): Map to same
	name with _ prepended.
	(NSIG): Define if not known.
	(get_emacs_configuration): Provide extern declaration.
	(get_emacs_configuration_options): Provide extern declaration.
	(EMACS_CONFIG_OPTIONS): Call get_emacs_configuration_options.

	* w32.c (gettimeofday): Use struct timeb, not struct _timeb.
	(map_w32_filename): 
	(read_unc_volume): Fix compile warning.

	* s/ms-w32.h (_WINSOCK_H): Define to prevent normal winsock
	definitions from being used.

	* lisp.h [WINDOWSNT]: Don't declare externs for getenv, ctime and getwd.

	* w32.c (unc_volume_file_attributes): 
	(open_unc_volume): Make arg const.

	* sysdep.c [WINDOWSNT]: Remove extern decl of errno.
	(read_input_waiting): Remove excess parameter.

	* w32.c (init_environment): Call _access.
	(check_windows_init_file): Call _close.
	(init_user_info): Call _putenv.
	(init_environment): Call _putenv and _strdup.
	(init_ntproc): Reset volume info cache on startup.

	* s/ms-w32.h (malloc, free, realloc, calloc): Rename if
	USE_CRT_DLL is defined, so Emacs can use GNU malloc even though it
	cannot override the CRT malloc.

	* makefile.nt (LOCAL_FLAGS): Define USE_CRT_DLL if requested.
	(LINK_FLAGS): Append to original value of LINK_FLAGS.

	* w32heap.c [!USE_CRT_DLL]: Don't define _heap_init and _heap_term
	unless we are linking with a static CRT.
	(RVA_TO_PTR): Cast result to unsigned char*.

	* w32.c (GetCachedVolumeInformation): Use xmalloc, xfree and xstrdup.
	(add_volume_info): Use xstrdup.

2000-08-22  Stefan Monnier  <monnier@cs.yale.edu>

	* minibuf.c (Vcompletion_auto_help): Renamed from `auto_help'.
	(do_completion, Fminibuffer_complete_word): Use it.
	(syms_of_minibuf): Turn completion-auto-help into a proper Lisp
	var so it can take non-boolean values.

2000-08-21  Gerd Moellmann  <gerd@gnu.org>

	* editfns.c (find_field): Formatting changes.
	(toplevel): Some old-style function forward declarations 
	changed to prototypes, some new protypes added, some functions
	made static.

	* lisp.h (set_time_zone_rule): Add prototype.
	(use_dialog_box): External declaration.

	* keyboard.c (gen_help_event): Add parameter SIZE.
	(kbd_buffer_events_waiting): Slightly rewritten.
	(clear_event): New function.
	(kbd_buffer_get_event): Use it, and clear the input_events of
	HELP_EVENTs.
	(init_keyboard): Remove duplicate creation of kbd_buffer_gcpro and
	don't fill the newly created array with nils.
	(toplevel): Convert some old-style function forward declarations
	to prototypes.

	* keyboard.h (gen_help_event): Change prototype.

	* xterm.c (XTread_socket): Change calls to gen_help_event.

	* w32term.c (w32_read_socket): Change calls to gen_help_event.

	* eval.c (Fmacroexpand): Doc fix.

2000-08-20  Jason Rumney  <jasonr@gnu.org>

	* w32term.h (x_display_info_for_display): Remove as this function
	does not exist on W32.

	* w32term.c (help_echo_window): New variable.
	(syms_of_w32term): staticpro it.
	(note_mode_line_highlight): Set it.
	(XTextExtents16): Removed as there is no equivalent on W32.
	(x_compute_glyph_string_overhangs): Incomplete body removed, as
	the X way of doing this will not work for W32.
	(w32_intersect_rectangles): Removed. Use IntersectRect API call.
	(x_draw_image_foreground):  Avoid drawing outside of the clip area
	when image doesn't have a mask.
	(note_mouse_highlight): Process overlays in the right order of
	priority. Set help_echo_window.
	(x_draw_bar_cursor): If cursor is on an image, draw a box cursor
	because that's more visible for large images.

	* w32menu.c (keymap_panes): Pass the keymap's prompt as the pane
	name to single_keymap_panes.
	(w32_menu_show): Set wv->title when dealing with titles.
	(w32_menu_display_help): Call show_help_echo with OBJECT and POS.

2000-08-21  Miles Bader  <miles@gnu.org>

	* minibuf.c (do_completion): Try again if we rewrite the input
	string, but no completion was done, so that any completion message
	will be correct.

2000-08-20  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (lface_equal_p): Compare strings differently.
	(Qtty_color_alist, Vtty_defined_color_alist): New variables.
	(realize_tty_face): Use them.
	(syms_of_xfaces): Initialize new variables.
	(map_tty_color): New function, extracted from realize_tty_face.
	(map_tty_color) [MSDOS || WINDOWSNT]: If using the frame's default
	foreground or background color, store the new color name in the
	realized face; previous code trying to do this had no effect.
	(realize_tty_face): Use map_tty_color.
	(Fclear_face_cache): Set face_change_count and ensure thorough
	redisplay.

2000-08-19  Gerd Moellmann  <gerd@gnu.org>

	* undo.c (record_first_change, record_marker_adjustment): Don't
	use XBUFFER on last_undo_buffer which might not be a buffer.

2000-08-18  Kenichi Handa  <handa@etl.go.jp>

	* coding.c (decode_coding_string): Set members consumed,
	consumed_char, produced, produced_char of *coding correctly.  If
	decode_coding doesn't consume any byte, don't try anymore.
	(encode_coding_string): Likewise.

2000-08-18  Gerd Moellmann  <gerd@gnu.org>

	* lisp.h (CHECK) [ENABLE_CHECKING]: Make both sides of the
	conditional have void type, for Standard C compilers.

	* xdisp.c (redisplay_internal): Compare windows for equality with
	EQ, instead of applying XWINDOW to something that might not
	be a window.
	
2000-08-18  Kenichi Handa  <handa@etl.go.jp>

	* fontset.c (Finternal_char_font): Search only the selected frame
	for a window of the current buffer.

2000-08-18  Gerd Moellmann  <gerd@gnu.org>

	* minibuf.c (do_completion): Use EQ instead of `!=' to compare
	Lisp_Objects.

	* keyboard.c (kbd_buffer_get_event): Handle the case that the
	second half of a HELP_EVENT is found at the start of kbd_buffer.

2000-08-18  Miles Bader  <miles@gnu.org>

	* lisp.h (Lisp_String): Replace DECLARE_INTERVALS with real decl.

	* editfns.c (save_restriction_save): Rewrite to use markers.
	(save_restriction_restore): Rewrite to understand new form of data
	saved by save_restriction_save.
	(Fsave_restriction): Remove cautionary note in doc-string.

2000-08-17  Gerd Moellmann  <gerd@gnu.org>

	* fileio.c (build_annotations): Add a comment explaining the
	return value of format-annotate-function.  Replace a spurious call
	to Flength with a CONSP test.  Call format-annotate-function with
	a fifth arg specifying how many times the function is been called
	in a row, to let it choose temporary buffers appropriately.

2000-08-17  Dave Love  <fx@gnu.org>

	* lisp.h: Remove DECLARE_INTERVALS, INITIALIZE_INTERVAL.  Don't
	declare make_temp_name twice.

	* lread.c: Prototype readevalloop, load_unwind,
	load_descriptor_unwind.
	(unreadpure): Give it an arg.

	* unexalpha.c: Prototype fatal_unexec, mark_x,
	update_dynamic_symbols.  Declare unexec as void.

	* cm.c [HAVE_TERMCAP_H]: Include <termcap.h>.
	[!HAVE_TERMCAP_H]: Prototype tputs, tgoto.

	* alloc.c (lisp_malloc): Declare with POINTER_TYPE.
	[SYSTEM_MALLOC]: Make decls in malloc.h conditional on
	DOUG_LEA_MALLOC.

	* alloca.c: Use #error.
	[POINTER_TYPE]: Use it.

	* eval.c (Fdefvar): Doc fix.

	* buffer.c (Fget_buffer_create, Fmake_indirect_buffer): Avoid
	INITIALIZE_INTERVAL.

	* buffer.h: Avoid DECLARE_INTERVALS.

	* config.in: Add size_t.

2000-08-17  Eli Zaretskii  <eliz@is.elta.co.il>

	* w16select.c (set_clipboard_data): If there's not enough memory
	to put text into clipboard, return 1, as Fw16_set_clipboard_data
	expects.  In case of other failures, return 3.
	(system_error_msg): New error message.
	(Fw16_set_clipboard_data): If set_clipboard_data returns 3, print
	system_error_msg.

2000-08-16  Gerd Moellmann  <gerd@gnu.org>

	* term.c (write_glyphs): Also turn off inverse video after turning
	off other appearances in case TS_exit_attribute_mode is not equal
	to TS_end_standout_mode.
	(insert_glyphs): Turn inverse video on/off for each run of glyphs
	with the same face.
	(turn_off_face): Reset standout_mode only if
	TS_exit_attribute_mode has been output and TS_exit_attribute_mode
	is equal to TS_end_standout_mode.

2000-08-16  Kenichi Handa  <handa@etl.go.jp>

	* coding.c (encode_coding): Fix the bug of not flushing ISO escape
	sequence at the end of the source block.

	* ccl.c (Fccl_program_p): Docstring modified.
	(Fccl_execute): Likewise.
	(Fccl_execute_on_string): Likewise.

2000-08-16  Eli Zaretskii  <eliz@is.elta.co.il>

	* msdos.c (IT_write_glyphs): Convert cbp to unsigned char *.

2000-08-16  Kenichi Handa  <handa@etl.go.jp>

	The following changes are mainly to fix bugs of
	encode/decode-coding-string failing if encoding/decoding return
	CODING_FINISH_INSUFFICIENT_DST.  In addition, delete the global
	variable conversion_buffer.

	* ccl.c (CCL_WRITE_CHAR): If CH is eight-bit-control char,
	decrement dst_end to avoid buffer overflow in the later call of
	string_as_multibyte

	* coding.h (conversion_buffer_size, conversion_buffer)
	(get_conversion_buffer): Extern deleted.

	* coding.c (MINIMUM_CONVERSION_BUFFER_SIZE): Macro deleted.
	(conversion_buffer, conversion_buffer_size): Variables deleted.
	(get_conversion_buffer): Function deleted.
	(struct conversion_buffer): New structure.
	(MAX_ALLOCA): New macro.
	(allocate_conversion_buffer): New macro.
	(extend_conversion_buffer, free_conversion_buffer): New functions.
	(ccl_coding_driver): Set coding->result.
	(decode_coding): Set coding->result to CODING_FINISH_NORMAL if
	this is the last block of source.
	(encode_coding): Likewise.  Handle the source block as the last
	one only when the whole source text is consumed.
	(decode_coding_string): Handle the case that the output buffer is
	too small to decode the whole source text.  Use
	allocate_conversion_buffer, extend_conversion_buffer and
	free_conversion_buffer, not get_conversion_buffer.
	(encode_coding_string): Likewise.
	(init_coding): Function deleted.
	(init_coding_once): Delete code to initialize
	conversion_buffer_size.

	* emacs.c (main): Don't call init_coding.

	* msdos.c (IT_write_glyphs): Use a locally declared
	conversion_buffer.

	* term.c (write_glyphs): Use a locally declared conversion_buffer.
	(insert_glyphs): Likewise.

	* w32console.c (write_glyphs): Use a locally declared
	conversion_buffer.

2000-08-15  Eli Zaretskii  <eliz@is.elta.co.il>

	* msdos.c (IT_update_begin): Don't crash if mouse_face_mouse_frame
	member of display_info is NULL.

2000-08-15  Gerd Moellmann  <gerd@gnu.org>

	* alloc.c (compact_small_strings): Use safe_bcopy, add an
	assertion.

	* term.c (turn_off_face): Reset standout_mode when resetting
	appearances with capability `me'.
	(write_glyphs): Switch on inverse video before each face change.

2000-08-14  Dave Love  <fx@gnu.org>

	* alloc.c [HAVE_UNISTD_H]: Include unistd.h; don't declare sbrk.
	[!HAVE_UNISTD_H]: Use POINTER_TYPE to declare sbrk.
	(lisp_free): Declare and make static.

	* window.c: Fix embedded comment.
	(syms_of_window): Fix doc string.

2000-08-14  Gerd Moellmann  <gerd@gnu.org>

	* keymap.c (push_key_description): If C without modifiers is < 32, 
	make sure to print `C-' before `M-', like in the manual.

2000-08-11  Gerd Moellmann  <gerd@gnu.org>

	* fns.c (hashfn_eq, hashfn_eql): Don't handle strings specially
	since they aren't relocated anymore.
	(sxhash_string): Make sure returned hash code fits in a Lisp
	integer.

	* xdisp.c (try_cursor_movement): Fix handling of cursor in
	partially visible line which is smaller than the window's
	height.

2000-08-11  Kenichi Handa  <handa@etl.go.jp>

	* ccl.c (CCL_READ_CHAR): If source is multibyte, pay attention to
	the multibyte form of eight-bit-control characters. 
	(Fccl_execute_on_string): Initialize ccl->multibyte.

	* ccl.h (struct ccl_program): New member multibyte.

	* coding.c (ccl_coding_driver): Initialize ccl->multibyte.

2000-08-11  Kenichi Handa  <handa@etl.go.jp>

	* regex.c (regex_compile) <normal_char>: Pay attention to
	multibyteness.
	(analyse_first) <exactn>: Setup fastmap correctly for
	eight-bit-control characters.

2000-08-11  Kenichi Handa  <handa@etl.go.jp>

	* termhooks.h (enum event_kind): New member
	multibyte_char_keystroke.

	* keyboard.c (make_lispy_event): Handle the new event type
	multibyte_char_keystroke.

	* xterm.c: Include coding.h.
	(XTread_socket): Work around a bug of XmbLookupString.  If the
	input is from XIM, decode it according to the current locale.  In
	that case, generate multibyte_char_keystroke events.

2000-08-11  Kenichi Handa  <handa@etl.go.jp>

	* xdisp.c (TRACE_MOVE) [GLYPH_DEBUG]: Delete the last semicolon.
	(TRACE_MOVE) [not GLYPH_DEBUG]: Define dummy.

2000-08-10  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (trace_move) [GLYPH_DEBUG]: New variable.
	(TRACE_MOVE) [GLYPH_DEBUG]: New macro.
	(move_it_in_display_line_to): Record iterator's ascent and descent
	before producing glyphs, and restore them when we know the glyph
	doesn't fit on the line.
	(move_it_to): Restructured so that it's easier to debug.  If
	moving to a vpos, and not moving to an x or character position,
	stop as soon as the specified vpos is reached; don't move further
	into that line because that might change the computed line height.
	(try_cursor_movement): New function, extracted from the cursor
	movement branch of redisplay_window.  If ending on a partially
	visible line, don't try to scroll if the cursor line is taller
	than the window.
	(redisplay_window): Use try_cursor_movement.

	* window.c (Fwindow_end): Rewritten to not use Fvertical_motion,
	because that function doesn't cope with variable-height lines.

	* xterm.c (x_draw_bar_cursor): If cursor is on an image, draw a
	box cursor because that's better visible for large images.
	
2000-08-10  Miles Bader  <miles@gnu.org>

	* w32term.c (note_mouse_highlight): Update calls to overlays_at.

2000-08-10  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (Vmessages_buffer_name): New variable.
	(message_dolog): Use it.
	(syms_of_xdisp): Initialize it.

2000-08-10  Eli Zaretskii  <eliz@is.elta.co.il>

	* msdos.c (IT_note_mouse_highlight): Update the calls to
	overlays_at.
	(toplevel) <kbd_buffer_store_event>: Remove prototype, it's
	redundant now that keyboard.h is included.

2000-08-09  Eli Zaretskii  <eliz@is.elta.co.il>

	* keyboard.c (kbd_buffer_events_waiting): New function.

	* keyboard.h (kbd_buffer_events_waiting): Add prototype.

	* msdos.c: Include keyboard.h.
	(XMenuActivate): Empty no_event events from the event buffer.  If
	no events are left after that, call clear_input_pending.
	(mouse_clear_clicks): New function, code moved from mouse_init.
	(mouse_init, XMenuActivate): Call mouse_clear_clicks to force the
	mouse driver to ``forget'' any past clicks.

	* Makefile.in (msdos.o): Depend on keyboard.h.

2000-08-09  Gerd Moellmann  <gerd@gnu.org>

	* lisp.h (input_pending): External declaration.

	* dispextern.h (Qredisplay_dont_pause): Declare extern.
	
	* xdisp.c (echo_area_display): Display thoroughly if input is
	pending.  Bind redisplay-dont-pause to t during the redisplay.
	in case input is pending.

	* dispnew.c (Qredisplay_dont_pause): New variable.
	(syms_of_display): Initialize and staticpro it.
	(update_frame_1): Don't interrupt the display for pending input if
	redisplay_dont_pause is set.
	
	* dispnew.c (mode_line_string): Declare parameter MODE_LINE_P.

	* xfaces.c (Ftty_suppress_bold_inverse_default_colors): Doc fix.

2000-08-09  Miles Bader  <miles@lsi.nec.co.jp>

	* callproc.c (Fcall_process): Terminate the unwind-protect around
	the post-read-conversion of coding system.

	* buffer.c (overlays_at): Add CHANGE_REQ parameter.
	(Foverlays_at, Fnext_overlay_change, Fprevious_overlay_change): Use it.
	* buffer.h (overlays_at): Update prototype.
	* xdisp.c (next_overlay_change): Update call to overlays_at.
	* xfaces.c (face_at_buffer_position): Likewise.
	* textprop.c (Fget_char_property): Likewise.
	* xterm.c (note_mouse_highlight): Likewise.

	* minibuf.c (do_completion): Don't consider a simple change of
	case as `completion'.

2000-08-08  Ken Raeburn  <raeburn@gnu.org>

	* keyboard.c (syms_of_keyboard): Initialize
	last_point_position_buffer.
	* undo.c (record_delete): Make sure last_point_position_buffer is
	a buffer before comparing pointers.

	* coding.h (decode_coding_string): Declare.

	* intervals.h (Fprevious_single_char_property_change): Declare.

	* textprop.c (Fprevious_single_char_property_change): Don't do
	arithmetic directly on lisp objects.

	* editfns.c (find_field): Use EQ, not ==, to compare Lisp
	objects.

	* keyboard.h (menu_item_eval_property): Declare.

	* xdisp.c (message_dolog): Save and protect string "*Messages*" to
	reuse as buffer name, instead of recreating (and discarding) every
	time a message is logged.
	(with_echo_area_buffer): Make callback arg A2 a lisp object.
	(current_message_1, truncate_message_1, set_message_1)
	(display_echo_area_1, resize_mini_window_1): Signatures changed.
	(current_message, truncate_echo_area, display_echo_area)
	(resize_echo_area_axactly): Changed calls.

	* coding.c (find_safe_codings): CHAR_TABLE_SET index must be a
	Lisp object.
	(Ffind_coding_systems_region_internal): First argument to Fappend
	must be an integer, not a Lisp object.

2000-08-08  Kenichi Handa  <handa@etl.go.jp>

	* charset.c (Fchar_width): Doc fix.

2000-08-08  Gerd Moellmann  <gerd@gnu.org>

	* charset.c (Fstring_width): Doc fix.

2000-08-07  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (start_display): When starting display on a continuation
	line, clear ascent and descent members of the iterator structure;
	the height of the continued line does not affect the height of the
	continuation line.
	(make_cursor_line_fully_visible): Do nothing if cursor is on a
	line taller than the window.
	(redisplay_window) <forced window start>: Handle case that the
	middle of the window is not found in any row.
	(dump_glyph_row): Show more information.
	(compute_line_metrics): Use MATRIX_FIRST_TEXT_ROW to determine the
	first text line in a glyph matrix.

	* xterm.c (x_draw_image_foreground): Avoid drawing outside
	of the clip area when image doesn't have a mask.

	* fns.c (sweep_weak_table): Fix survival conditions for
	key-or-value and key-and-value weakness.

	* .gdbinit (xhashtable): New command.

	* fns.c (sweep_weak_hash_tables): Fix the code taking unmarked
	tables out of the list of all weak hash tables.

	* xdisp.c (ensure_echo_area_buffers): If a buffer was killed, and
	a new buffer is created, make sure echo_area_buffer[] references
	the new buffer.

2000-08-07  Eli Zaretskii  <eliz@is.elta.co.il>

	* msdos.c (Fmsdos_set_mouse_buttons): Add missing backslashes in
	the doc string.

2000-08-07  Kenichi Handa  <handa@etl.go.jp>

	* syntax.c (skip_chars): Fix previous change.  Make the handling
	of unibyte string consistent with that of regex search.

2000-08-05  Gerd Moellmann  <gerd@gnu.org>

	* xmenu.c (popup_get_selection): Use xfree instead of free.

	* fileio.c (Finsert_file_contents): Use xfree instead of free.

	* editfns.c (Ftranspose_regions): Use xfree instead of free.

	* callproc.c (child_setup): Use xfree instead of free.

	* sysdep.c (opendir, GetTempDirName, run_mac_command): Use xmalloc
	instead of malloc.
	(run_mac_command, closedir): Use `xfree' instead of `free'.

	* keymap.c (current_minor_maps): Use xmalloc instead of malloc.

	* eval.c (error): Use xfree instead of free.

	* xfaces.c, xfns.c, w32fns.c: Replace `illegal' with `invalid'.

	* fns.c: Replace `illegal' with `invalid'.
	(Fmake_hash_table, make_hash_table): Allow table size of 0.

2000-08-05  Kenichi Handa  <handa@etl.go.jp>

	* syntax.c (skip_chars): Fix handling of multibyte<->unibyte
	conversion.

2000-08-04  Noah Friedman  <friedman@splode.com>

	* fns.c (Fmake_hash_table): Add missing `\n\' to end of line in
	docstring.

2000-08-04  Gerd Moellmann  <gerd@gnu.org>

	* syntax.c (skip_chars): Fix typo in error message.

2000-08-04  Andreas Schwab  <schwab@suse.de>

	* m/ia64.h: Moved from s/ia64.h.

2000-08-04  Kenichi Handa  <handa@etl.go.jp>

	* process.c (read_process_output): Big simplification.  Handle
	composition and post-read-conversion of coding system correctly.
	(send_process): Handle composition correctly.

	* callproc.c (Fcall_process): Handle post-read-conversion of
	coding system if any.

	* coding.c (decode_coding_iso2022): More strict check for handling
	single shifting.
	(coding_restore_composition): Pay attention to the case that
	cmp_data is not set properly (because of invalid code in the
	source text).
	(run_pre_post_conversion_on_str): Include text properties in the
	resulting string.
	(decode_coding_string): Set members of coding correctly.

2000-08-03  Gerd Moellmann  <gerd@gnu.org>

	* s/ia64.h: New file.

	* widget.c (set_frame_size, update_wm_hints, EmacsFrameSetValues):
	Use NULL instead of 0 at the end of variable argument list of
	XtVaGetValues and XtVaSetValues, because 0 fails on systems where
	sizeof (int) < sizeof (void *).

	* xmenu.c (update_frame_menubar): Use NULL instead of 0 at the end
	of variable argument lists of XtVaGetValues and XtVaSetValues.

	* xfns.c (Fx_file_dialog): Use NULL instead of 0 at the end of
	variable argument lists of XtVaGetValues and XtVaSetValues.

2000-08-02  Gerd Moellmann  <gerd@gnu.org>

	* alloc.c (lisp_malloc, lisp_free): Use size_t and POINTER_TYPE.
	(xrealloc, xmalloc): Use size_t.  Some callers adjusted.

	* lisp.h (Fsingle_key_description, xmalloc, xrealloc): Change
	prototype.

	* keyboard.c (read_char_minibuf_menu_prompt): Add new parameter
	in call to Fsingle_key_description.

	* keymap.c (Fsingle_key_description): Add parameter NO_ANGLES.
	Callers changed.

2000-08-02  Colin Walters <walters@cis.ohio-state.edu>

	* window.c (display_buffer_reuse_frames): New variable.
	(Fdisplay_buffer): If display_buffer_reuse_frames is set, reuse
	frames displaying BUFFER.
	(syms_of_window): Define Lisp variable
	display-buffer-reuse-frames.

2000-08-01  Miles Bader  <miles@gnu.org>

	* editfns.c (Fconstrain_to_field): Fix the conditions for deciding
	when to constrain NEW_POS (they were pretty screwed up before).

2000-07-31  Eli Zaretskii  <eliz@is.elta.co.il>

	* msdos.c (run_msdos_command): Save and restore the master
	environment, for the case that child_setup signals an error.
	When mirroring slashes in DOS shell commands, don't fail when
	argv[2] has embedded blanks.
	(Fmsdos_set_mouse_buttons, mouse_setup_buttons): New functions.
	(syms_of_msdos): Defsubr Fmsdos_set_mouse_buttons.
	(dos_ttraw): Call mouse_setup_buttons.

	* callproc.c (child_setup) [MSDOS]: malloc pwd_var instead of
	using alloca; free it after run_msdos_command returns.

2000-07-27  Dave Love  <fx@gnu.org>

	* s/irix6-5.h (IRIX_FORCE_32_BITS, LD_SWITCH_SYSTEM): Don't
	define.
	[_MIPS_SZLONG == 64]: Set up for 64-bit mode -- not currently
	working.

	* m/iris4d.h (XUINT, XSET, XUNMARK) [_LP64]: Don't define.

2000-07-27  Eli Zaretskii  <eliz@is.elta.co.il>

	* editfns.c (lisp_time_argument): Fix last change.

2000-07-27  Gerd Moellmann  <gerd@gnu.org>

	* fns.c (Fdelete): Make it work on vectors and strings in addition
	to lists.

	* fns.c (Qkey_or_value, Qkey_and_value): New variables.
	(syms_of_fns): Initialize new variables.
	(sweep_weak_table): Handle weakness `key-or-value' and
	`key-and-value'.
	(Fmake_hash_table): Recognize `key-and-value' and `key-or-value'
	weakness, with t meaning the same as `key-and-value'.

2000-07-27  Kenichi Handa  <handa@etl.go.jp>

	* coding.h (struct coding_system): Member safe_charset deleted.

	* coding.c (Qsafe_charsets): This variable deleted.
	(Qsafe_chars, Vchar_coding_system_table, Qchar_coding_system): New
	variables.
	(coding_safe_chars): New function.
	(CODING_SAFE_CHAR_P): New macro.
	(CHARSET_OK): New arg C.  Call CODING_SAFE_CHAR_P instead of
	checking safe_charsets member of the coding system.  Caller
	changed.
	(detect_coding_iso2022): New local variable safe_chars.
	(DECODE_DESIGNATION): Call CODING_SAFE_CHAR_P instead of checking
	safe_charsets member of the coding system.
	(decode_coding_iso2022): New local variable safe_chars.
	(ENCODE_ISO_CHARACTER_DIMENSION1): Don't check unsafe chars here.
	(ENCODE_ISO_CHARACTER_DIMENSION2): Likewise.
	(ENCODE_ISO_CHARACTER): Arguments changed.  Caller changed.
	(ENCODE_UNSAFE_CHARACTER): New macro.
	(encode_coding_iso2022): New local variable safe_chars.  Check
	unsafe chars.
	(setup_coding_system): Delete the code to initialize
	coding->safe_charses
	(intersection, find_safe_codings): New functions.
	(Ffind_coding_systems_region_internal): New function.
	(syms_of_coding): Defsubr it.  Initialize Qsafe_chars,
	Qsafe_cding_system.  Make Vchar_coding_system_table a Lisp
	variable and initialize it.

	* fns.c (char_table_ref_and_index): New function.

	* lisp.h (char_table_ref_and_index): Add prototype.

2000-07-26  Sam Steingold  <sds@gnu.org>

	* editfns.c (lisp_time_argument): Added third argument `usec'.
	(Ffloat_time): New built-in Lisp function.

2000-07-26  Gerd Moellmann  <gerd@gnu.org>

	* dispextern.h (GLYPH_FROM_CHAR_GLYPH): Use CHARACTERBITS bits
	for the character code.

	* config.in (HAVE_SOUND): Define only for FreeBSD, NetBSD and
	GNU/Linux.

	* xmenu.c (menu_highlight_callback): Call show_help_echo directly
	if called for a popup menu.
	(xmenu_show): Store help string in widget values.

2000-07-26  Dave Love  <fx@gnu.org>

	* syswait.h: Move some definitions.
	(HAVE_SYS_WAIT_H): Undef for HPUX7, Convex.
	[!HAVE_SYS_WAIT_H]: Define things unconditionally.   More
	perspicuous definitions.
	(WTERMSIG): Fix bit pattern used.

2000-07-26  Kenichi Handa  <handa@etl.go.jp>

	* print.c (print_object): If vector printing is truncated, print
	"..." to indicate it as well as the case of list printing.

2000-07-25  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (next_element_from_display_vector): Improve comments.

	* lisp.h (GLYPH_MASK_CHAR, GLYPH_MASK_FACE): Use 19 bits
	for the character code, and the rest for the face id as in 20.x.
	(FAST_GLYPH_FACE, FAST_MAKE_GLYPH): Changed accordingly.

	* window.c (window_display_table): Cleaned up.

	* syntax.c (Fforward_word): Add last arg nil in call of
	Fconstrain_to_field.

2000-07-25  Eli Zaretskii  <eliz@is.elta.co.il>

	* fileio.c (Frename_file) [DOS_NT]: If the file names are
        identical but for the letter-case, don't call
        barf_or_query_if_file_exists.

2000-07-25  Miles Bader  <miles@gnu.org>

	* editfns.c (find_field): Honor special `boundary' fields.
	(Qboundary): New variables.
	(syms_of_editfns): Initialize Qboundary.
	(Fconstrain_to_field): Add the INHIBIT-CAPTURE-PROPERTY argument.
	Use scan_buffer instead of find_before_next_newline, because it
	allows us to detect the boundary case where there's a newline at
	the search limit.
	* lisp.h (Fconstrain_to_field): Update external declaration.

2000-07-24  Gerd Moellmann  <gerd@gnu.org>

	* print.c (temp_output_buffer_setup): Don't call1 Vrun_hooks
	if that is nil.

2000-07-24  Dave Love  <fx@gnu.org>

	* s/sunos4-0.h, s/sol2.h:
	(LIBS_TERMCAP): Move from m/sparc.h.

	* m/sparc.h (TERMINFO): Moved to system files (probably only
	relevant for sunos4 judging by its vintage).
	(BITS_PER_LONG, BITS_PER_EMACS_INT, _LP64): Define conditional on
	__arch64__.

2000-07-24  Eli Zaretskii  <eliz@is.elta.co.il>

	* xmenu.c (keymap_panes): Pass the keymap's prompt as the pane
	name to single_keymap_panes.

2000-07-24  Andreas Schwab  <schwab@suse.de>

	* fns.c (Fmakehash): Pass Qeql to Fmake_hash_table if TEST is nil.

2000-07-24  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (with_echo_area_buffer): Take additional EMACS_INT
	parameters instead of using int parameters.  Expect FN to accept
	EMACS_INT parameters.
	(display_echo_area, resize_echo_area_axactly, current_message)
	(truncate_echo_area, set_message_1): Call with_echo_area_buffer
	with new argument list.
	(resize_mini_window_1): New callback function.
	(current_message_1, truncate_message_1, set_message_1): Change
	parameter lists to the new format expected by
	with_echo_area_buffer.

2000-07-24  Kenichi Handa  <handa@etl.go.jp>

	* fontset.c (fontset_ref): Remove INLINE declaration.
	(fontset_ref_via_base): Likewise.
	(Fset_fontset_font): Convert FAMILY and REGISTRY specifications
	to downcase.

2000-07-23  Eli Zaretskii  <eliz@is.elta.co.il>

	* msdos.c (IT_note_mouse_highlight): Process overlays in the
	correct order of priority.  If help echo was found in an overlay,
	use that overlay as the object in which the help echo was found.

2000-07-22  Miles Bader  <miles@gnu.org>

	* textprop.c (Fprevious_single_char_property_change): The initial
	property value should be from the position preceding POSITION, not
	following it.

2000-07-22  Eli Zaretskii  <eliz@is.elta.co.il>

	* coding.c (syms_of_coding): Doc fix for
	inhibit-iso-escape-detection.

2000-07-21  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (note_mouse_highlight): Process overlays in the right
	order of priority.

	* keyboard.c (show_help_echo, gen_help_event): Extend comments.

	* xterm.c (note_mouse_highlight): If help-echo was found in an
	overlay, use that overlay as the object in which the help was
	found.

	* window.c (foreach_window_1): Fix typo reversing an if-condition.

	* window.c (foreach_window): Instead of a fake variable argument
	list, take one USER_DATA argument.
	(foreach_window_1): Likewise, and call callback functions with two
	args, the window and USER_DATA.
	(struct check_window_data): New struct.
	(check_window_containing): Use it.
	(window_from_coordinates): Set up a struct check_window_data for
	foreach_window.
	(add_window_to_list, freeze_window_start): Change parameters
	according to new calling convention.

	* window.h (foreach_window): Change prototype.

	* buffer.c (Fprevious_overlay_change): Avoid memory leak.

2000-07-21  Eli Zaretskii  <eliz@is.elta.co.il>

	* xmenu.c (menu_help_callback): Call show_help_echo with
	additional arguments OBJECT and POS.

2000-07-21  Kenichi Handa  <handa@etl.go.jp>

	* data.c (Faset): Allow storing any multibyte character in a
	string.  Convert unibyte string to multibyte if necessary.

	* xfns.c (x_encode_text): New function.
	(x_set_name): Use x_encode_text.
	(x_set_title): Likewise.

	* xselect.c (lisp_data_to_selection_data): Use x_encode_text.

	* xterm.h (x_encode_text): Add prototype.

2000-07-20  Dave Love  <fx@gnu.org>

	* ccl.c (Fccl_execute_on_string): Don't check xmalloc return.  Use
	xfree, not free.

2000-07-20  Eli Zaretskii  <eliz@is.elta.co.il>

	* msdos.c (help_echo_window): New variable.
	(syms_of_msdos): Initialize and staticpro it.
	(IT_note_mode_line_highlight): Set help_echo_window.
	(IT_note_mouse_highlight): Ditto.
	(dos_rawgetc): Store help_echo_window in the second event produced
	for HELP_EVENTs.

	* msdos.c (IT_note_mode_line_highlight, IT_note_mouse_highlight):
	Record the object that generated the help echo and the position of
	that object in help_echo_object and help_echo_pos.  Record that
	some glyphs in a row are displayed in mouse-face.
	(IT_update_begin): Don't clear mouse highlight unless one of the
	enabled glyph rows is marked as being displayed in mouse-face.
	(dos_rawgetc): Generate 2 events for HELP_EVENT.  Pass the object
	and position recorded in help_echo_object and help_echo_pos to the
	event queue.
	(IT_menu_display): Accept a new argument PN: the pane number of
	the current menu pane.  Record the pane number and the item
	number of the item which has associated help string.
	(XMenuActivate): Update the prototype for help_callback in
	function declaration.  Call IT_menu_display with the current menu
	pane number as an additional argument.  Call help_callback with
	two additional arguments: the pane number and the item number of
	the menu item associated with the help text.
	(help_echo_object, help_echo_pos): New variables.
	(syms_of_msdos): Initialize them and staticpro help_echo_object.

	* msdos.h (XMenuActivate): Update prototype.

2000-07-19  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (with_echo_area_buffer): Call FN with more arguments.
	Add some more prototypes.

	* xterm.c, xterm.h: Add some more prototypes.

	* lisp.h (Fnext_single_char_property_change): Add prototype.

	* dispnew.c (direct_output_for_insert): Remove confusing
	outer local variable mouse_face_overwritten_p.
	(glyph_row_slice_p): Put in #ifdef GLYPH_DEBUG.

	* alloc.c (allocate_string_data): Don't copy old string contents.

2000-07-19  Kenichi Handa  <handa@etl.go.jp>

	* coding.c (code_convert_region): Delete text properties before
	shrinking the conversion region.

2000-07-18  Gerd Moellmann  <gerd@gnu.org>

	* dispnew.c (update_text_area): Write the whole row if it
	has mouse-face in it.

	* xfaces.c (face-alternative-font-family-alist): Remove
	DEFVAR_LISP; staticpro instead.

	* xmenu.c (menu_help_callback): Call show_help_echo with
	new arguments.

	* keyboard.c (show_help_echo): Add parameter WINDOW.
	(read_char): Call show_help_echo with window extracted from Lisp
	help event.
	(gen_help_event): Add parameter WINDOW.

	* keyboard.h (show_help_echo, gen_help_event): Change prototypes.

	* xterm.c (help_echo_window): New variable.
	(note_mouse_highlight, note_tool_bar_highlight): Set
	help_echo_window.
	(XTread_socket): Pass help_echo_window to gen_help_event.
	(syms_of_xterm): Initialize and staticpro help_echo_window.

2000-07-18  Dave Love  <fx@gnu.org>

	* Makefile.in: Fix dependencies of blockinput.h on atimer.h,
	systime.h.

2000-07-18  Gerd Moellmann  <gerd@gnu.org>

	* alloc.c (allocate_string_data): If string had already data
	assigned, copy old contents to new string data.

	* coding.c (syms_of_coding): Fix typo in spelling of variable
	`inhibit-iso-escape-detection'.

	* alloca.c (free) [emacs && EMACS_FREE]: Define as EMACS_FREE.

	* Makefile.in: Add dependencies on dispextern.h.
	(alloca.o): Don't define malloc and define EMACS_FREE instead of
	`free'; both can conflict with system header files.

2000-07-18  Kenichi Handa  <handa@etl.go.jp>

	* charset.h (MAKE_CHAR): Return reasonable code even if CHARSET is
	undefined.

2000-07-18  Dave Love  <fx@gnu.org>

	* window.c (Fwindow_list): Declare arg `window'.

2000-07-18  Kenichi Handa  <handa@etl.go.jp>

	* coding.c (setup_coding_system): Don't override the explicitly
	specified designations.

2000-07-15  Miles Bader  <miles@gnu.org>

	* editfns.c (char_property_eq, char_property_stickiness): Renamed
	from `text_property_eq' and `text_property_stickiness', respectively.
	(find_field, Fconstrain_to_field, char_property_eq)
	(char_property_stickiness): Changed to call char-property functions
	instead of text-property-only ones.

	* textprop.c (Fnext_single_char_property_change): Made a subr (was
	`next_single_char_property_change').  Do more error checking, and
	cleanup limit behavior.
	(Fprevious_single_char_property_change): New function.
	(syms_of_textprop): Initialize new subrs.

	* xdisp.c (display_prop_end, invisible_text_between_p):
	Call Fnext_single_char_property_change instead of
	next_single_char_property_change.

2000-07-15  Jason Rumney  <jasonr@gnu.org>

	* w32menu.c (w32_menu_show): Call free_menubar_widget_value_tree
	after menu is finished with.
	(add_menu_item): Only consider wv->title as a menu title.
	(w32_menu_display_help): Add OBJECT and POS to show_help_echo.

	* w32fns.c (w32_wnd_proc) [WM_DRAW_ITEM]: Do not try to draw a
	null title.
	(FONT_REGEXP): Remove unused macro, and its sub-components.
	(syms_of_w32fns): Replace underscore in w32-enable-synthesized-fonts.

	* w32term.c (help_echo_object, help_echo_pos): New variables.
	(note_mode_line_highlight): Store additional information about the
	help-echo in help_echo_object and help_echo_pos.  Check both
	`local-map' and `keymap' properties for changing the cursor
	(note_mouse_highlight): Store additional information about the
	help-echo in help_echo_object and help_echo_pos.
	(note_tool_bar_highlight): Set help_echo_object to nil and
	help_echo_pos to -1.
	(w32_read_socket): Use gen_help_event instead of filling
	input_events manually.
	(syms_of_w32term): Staticpro help_echo_object.
	(x_update_window_end): Add parameter MOUSE_FACE_OVERWRITTEN_P. If
	set, arrange for a mouse-highlight redisplay in
	XTframe_up_to_date.
	(x_clear_mouse_face): New function.
	(w32_redisplay_interface): Add pointer to x_clear_mouse_face.
	(x_update_window_begin): No need to turn off the mouse
	highlight here.
	(show_mouse_face): Set the mouse_face_p flag of glyph rows
	depending on whether they contain glyphs highlighted in
	mouse-face.
	(x_fill_stretch_glyph_string): Consume runs of stretch
	glyphs instead of a single one.
	(BUILD_STRETCH_GLYPH_STRING): Call x_fill_stretch_glyph_string
	with new argument list.
	(x_set_glyph_string_gc): Make sure the face's GC is valid.
	(x_append_glyph, x_append_composite_glyph)
	(x_produce_image_glyph, x_append_stretch_glyph): Accomodate to
	changes in struct glyph starting 1999-12-27. See comments for
	xterm.c on 2000-07-05.

2000-07-14  Sam Steingold  <sds@gnu.org>

	* xfaces.c (realize_x_face): Fix the last patch:
	check `default_face' before dereferencing.

2000-07-14  Dave Love  <fx@gnu.org>

	* syntax.c (back_comment): Add null default in switch (for pcc).

2000-07-14  Kenichi Handa  <handa@etl.go.jp>

	* xfaces.c (realize_x_face): Make fontset using the base of the
	default_face's fontset, not using the default fontset.

	* coding.c (inhibit_iso_escape_detection): New variable.
	(syms_of_coding): Make it a Lisp variable.
	(detect_coding_iso2022): If inhibit_iso_escape_detection is
	nonzero, ignore ISO2022's escape sequence.

2000-07-14  Gerd Moellmann  <gerd@gnu.org>

	* alloca.c (malloc) [emacs]: Define as xmalloc.

	* xfns.c (Fx_show_tip): If frame parameters contain a position,
	use that instead of the mouse position.  Add parameters DX and DY.

	* dispextern.h (Fx_show_tip): Adjust number of parameters
	in prototype.

	* keyboard.c (show_help_echo): Add parameters OBJECT and POS.
	if HELP is a function, call it with OBJECT and POS as parameters
	to get the help to display.
	(gen_help_event, kbd_buffer_store_help_event): New functions.
	(kbd_buffer_get_event): Construct the Lisp help-event differently.
	(read_char): Call show_help_echo with new parameters.

	* keyboard.h (gen_help_event, kbd_buffer_store_help_event):
	Add prototypes.

	* xterm.c (help_echo_object, help_echo_pos): New variables.
	(note_mode_line_highlight): Store additional information about the
	help-echo in help_echo_object and help_echo_pos.  Check both
	`local-map' and `keymap' properties for changing the cursor
	(note_mouse_highlight): Store additional information about the
	help-echo in help_echo_object and help_echo_pos.
	(note_tool_bar_highlight): Set help_echo_object to nil and
	help_echo_pos to -1.
	(XTread_socket): Use gen_help_event instead of filling
	input_events manually.
	(syms_of_xterm): Staticpro help_echo_object.

	* xmenu.c (menu_highlight_callback): Use
	kbd_buffer_store_help_event instead of setting up and input_event
	structure manually.

	* xdisp.c (eval_form): GCPRO argument sexpr.
	(call_function): New function.
	(handle_single_display_prop): Use call_function and FUNCTIONP
	instead of checking whether if font_height is a symbol and
	using eval_form.

	* eval.c (internal_condition_case_2): New function.

	* lisp.h (FUNCTIONP): New macro.
	(internal_condition_case_2, call_function): Add prototypes.

	* xterm.c (construct_mouse_click, x_scroll_bar_to_input_event)
	(x_scroll_bar_handle_click, SET_SAVED_MENU_EVENT, XTread_socket):
	Always set `arg' member of input_events.
	(construct_menu_click): Unused function removed.

	* msdos.c (dos_rawgetc): Always set `arg' member of input_events.

	* w32term.c (construct_mouse_click, construct_mouse_wheel)
	(construct_drag_n_drop, x_scroll_bar_handle_click)
	(w32_read_socket): Always set `arg' member of input_events.

	* keyboard.c (show_help_echo): Use eval_form.  Add comment.

	* lisp.h (eval_form): Add prototype.

	* xdisp.c (eval_form): Make it externally visible.

2000-07-13  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_handle_tool_bar_click): Store the frame in the
	frame_or_window slot of TOOL_BAR_EVENT input events instead of
	consing.  For prefix events, store the frame in the `arg' slot of
	the event, otherwise store the key there.
	(XTread_socket): Instead of consing, use the frame_or_window slot
	of HELP_EVENTs for the frame, and the `arg' slot for the help
	string.

	* xmenu.c (menu_highlight_callback): Store help string in the
	`arg' member of the input event; don't cons.
	(menubar_selection_callback): Use the `arg' slot of input events
	to queue additional information, instead of consing.

	* msdos.c (dos_rawgetc): Adapt to change of HELP_EVENTs.

	* w32term.c (w32_handle_tool_bar_click): Adapt to changes in
	TOOL_BAR_EVENTs.
	(w32_read_socket): Adapt to changes in HELP_EVENTs.

	* w32menu.c (menubar_selection_callback): Use the `arg' slot of
	input events to queue additional information, instead of consing.

	* keyboard.c (kbd_buffer_gcpro): Renamed from
	kbd_buffer_frame_or_window.  Now used for all Lisp objects
	referenced from the input queue.
	(kbd_buffer_store_event): Always use structure assignment for
	copying input events.  Record all Lisp objects referenced from
	events in kbd_buffer_gcpro.
	(kbd_buffer_get_event): Construct Lisp `help-echo' events
	differently from input events.  Test for prefix menu_bar_events
	and TOOL_BAR_EVENTs differently.  Reset all slots used by an input
	event in kbd_buffer_gcpro to nil.
	(make_lispy_event) <TOOL_BAR_EVENT>: Treat an input event whose
	frame_or_window is equal to its arg member as prefix events.
	(stuff_buffered_input): Reset all slots in kbd_buffer_gcpro
	used by an input event to nil.
	(init_keyboard): Use two times the size of the input queue
	for kbd_buffer_gcpro.
	(syms_of_keyboard): Likewise.

	* emacs.c (handle_USR2_signal, handle_USR1_signal): Use
	USER_SIGNAL_EVENT.

	* termhooks.h (struct input_event): Add member `arg'.
	(MENU_BAR_EVENT): Renamed from menu_bar_event.
	(USER_SIGNAL_EVENT): Renamed from user_signal.

	* xfaces.c (ASET): Remove definition.

	* lisp.h (AREF, ASET, ASIZE): New macros.

	* fontset.c (AREF, ASIZE): Remove definitions.

	* fns.c (AREF): Remove definition.

	* composite.c (AREF): Remove definition.

2000-07-12  Gerd Moellmann  <gerd@gnu.org>

	* dispnew.c (redraw_overlapped_rows): Add missing local.
	(scrolling_window): Remove debug code.

	* xdisp.c (try_window_reusing_current_matrix, try_window_id):
	Before scrolling, turn off a mouse-highlight in the window
	being scrolled.

	* xterm.c (x_update_window_end): Add parameter
	MOUSE_FACE_OVERWRITTEN_P.  If set, arrange for a mouse-highlight
	redisplay in XTframe_up_to_date.
	(x_clear_mouse_face): New function.
	(x_redisplay_interface): Add pointer to x_clear_mouse_face.

	* dispnew.c (make_current): Preserve the mouse_face_p flag of the
	current glyph row.
	(update_window_line): Add parameter MOUSE_FACE_OVERWRITTEN_P.  Set
	it when any row is written to that contains glyphs highlighted in
	mouse-face.
	(update_window): Call the window update end hook with new
	parameter MOUSE_FACE_OVERWRITTEN_P.
	(direct_output_for_insert): Give up if row contains mouse-face.

	* dispextern.h (struct redisplay_interface): Add parameter
	MOUSE_FACE_OVERWRITTEN_P to update_window_end_hook function.
	(clear_mouse_face): New function pointer member.

2000-07-11  Stefan Monnier  <monnier@cs.yale.edu>

	* syntax.c (back_comment): Use one switch rather than a few `if's.
	Obey open_paren_in_column_0_is_defun_start.
	When reverting to the `slow' method, try to nicely handle the case
	of nested comments by checking that the comment-starter we found
	does indeed match the comment-ender.
	(scan_sexps_forward, scan_sexps_forward):
	Ignore excessive opening parenthesis rather than throwing an error.

2000-07-11  Gerd Moellmann  <gerd@gnu.org>

	* doc.c (Fsubstitute_command_keys): Handle case that a GC
	in Fwhere_is_internal or get_keymap_1 relocates string contents.

	* dispnew.c (direct_output_forward_char): Give up if currently
	displaying a message instead of the minibuffer contents.

	* xterm.c (x_update_window_begin): No need to turn off the mouse
	highlight here.
	(show_mouse_face): Set the mouse_face_p flag of glyph rows
	depending on whether they contain glyphs highlighted in
	mouse-face.

	* dispnew.c (row_equal_p): Add parameter MOUSE_FACE_P.  If set,
	compare the mouse_face_p flags of both rows.

	* dispextern.h (struct glyph_row): Add flag mouse_face_p.

2000-07-11  Eli Zaretskii  <eliz@is.elta.co.il>

	* keyboard.c (show_help_echo): Accept additional parameter
	ok_to_overwrite_keystroke_echo.
	(read_char): Call show_help_echo with a zero
	ok_to_overwrite_keystroke_echo argument.
	* keyboard.h (show_help_echo): Update prototype of
	show_help_echo.
	* xmenu.c (menu_help_callback): Call show_help_echo with non-zero
	ok_to_overwrite_keystroke_echo argument.
	* w32menu.c (w32_menu_display_help): Call show_help_echo with
	non-zero ok_to_overwrite_keystroke_echo argument.

2000-07-10  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (try_window_id): If changes are all below what is
	displayed in the window, and point is in the window, we still
	might have to find point on the display.

	* xterm.c (x_fill_stretch_glyph_string): Consume runs of stretch
	glyphs instead of a single one.
	(BUILD_STRETCH_GLYPH_STRING): Call x_fill_stretch_glyph_string
	with new argument list.
	(x_set_glyph_string_gc): Make sure the face's GC is valid.

	* keymap.c (get_keymap_1): Add comment that this function can GC.
	(where_is_internal_2, where_is_internal_1): Add GCPROs, add
	comment that functions can GC.
	(Fset_keymap_parent): GCPRO arg KEYMAP.

2000-07-10  Eli Zaretskii  <eliz@is.elta.co.il>

	* msdos.c (XMenuActivate): After exiting the menu, restore the
	echo area message and erase it.

2000-07-10  Kenichi Handa  <handa@etl.go.jp>

	* fontset.c (Ffontset_info): Make the return value more compatible
	with that of Emacs 20.

2000-07-07  Gerd Moellmann  <gerd@gnu.org>

	* eval.c (Fsignal): Handle case that backtrace_list is null.

2000-07-07  Kenichi Handa  <handa@etl.go.jp>

	* ccl.c (Fccl_execute): Typo fixed.

2000-07-06  Gerd Moellmann  <gerd@gnu.org>

	* window.c (window_loop): Add missing gcpro1 local variable.

	* window.c (Fwindow_list): Reverse list at the end.
	(candidate_window_p): Add parameter OWINDOW.  ALL_FRAMES nil
	means allow windows on OWINDOW's frame, only.
	(window_loop): Simplified; use Fwindow_list.

	* Makefile.in (TAGS-LISP): Don't pass `$(lispsource)' to make.

2000-07-05  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (XTread_socket): Increment handling_signal at the start,
	decrement it at the end.

	* eval.c (handling_signal): New variable.
	(Fsignal): Abort if handling_signal is non-zero.

	* lisp.h (handling_signal): External declaration.

	* s/freebsd.h (WAITTYPE, WRETCODE): Put in #if 0.

2000-07-05  Ken Raeburn  <raeburn@gnu.org>

	Sound support for NetBSD through "Linux emulation" support:
	* config.in (HAVE_SOUNDCARD_H): Undef.
	(HAVE_SOUND): Define if HAVE_SOUNDCARD_H.
	* Makefile.in (LIBSOUND): New variable.
	(LIBES): Include it.
	* sound.c [HAVE_SOUNDCARD_H]: Include <sys/ioctl.h> and
	<soundcard.h>.
	(DEFAULT_SOUND_DEVICE): Define to "/dev/dsp" if not defined
	elsewhere.
	(vox_open): Use DEFAULT_SOUND_DEVICE.
	* s/netbsd.h (DEFAULT_SOUND_DEVICE): Define to /dev/audio.

2000-07-05  Gerd Moellmann  <gerd@gnu.org>

	* print.c (print_error_message): If Vsignaling_function is set,
	show it in *Messages*.

	* lisp.h (Vsignaling_function): External declaration.

	* eval.c (Vsignaling_function): New variable.
	(Fsignal): Compute it.
	(syms_of_eval): Staticpro it.

2000-07-05  Dave Love  <fx@gnu.org>

	* syswait.h: Use the autoconf recommended approach.  Old code
	#if'd out in case we need to revert.

	* config.in (HAVE_SYS_WAIT_H): Added.

2000-07-05  Andrew Innes  <andrewi@gnu.org>

	* vm-limit.c (check_memory_limits) [REL_ALLOC]: Use real_morecore
	when non-NULL instead of __morecore, to take account of buffer
	memory.  This also solves a problem with spurious memory warnings
	on Windows.

	* ralloc.c: Make real_morecore non-static.

	* eval.c (internal_condition_case): Comment out abort if
	interrupt_input_blocked is not zero.

	* makefile.nt: Add support for `bootstrap' and related targets.
	Include minimal debug info in emacs.exe in release build.
	Remove all dependencies on lisp.h, and fixup some others.

	* w32.c (init_environment): Install code from 20.7 for providing
	default values for environment variables, based on the
	executable's own location.
	(map_w32_filename): Handle filenames that are longer than
	MAX_PATH.
	(sys_socket): Install socket inheritance bug fix from 20.7.

	* alloca.c [emacs]: Include lisp.h (needed by atimer.h included
	here via blockinput.h).

2000-07-05  Stefan Monnier  <monnier@cs.yale.edu>

	* w32menu.c (w32_menu_display_help):
	* xmenu.c (menu_help_callback): Use show_help_echo.

	* keyboard.h (show_help_echo): Declare.

	* keyboard.c (show_help_echo): New function, extracted from read_char.
	Feval its `msg' argument if it's a cons cell.
	(read_char): Use it.
	(follow_key): Pass `autoload' to get_keyelt.

	* xterm.c (note_mode_line_highlight, note_mouse_highlight)
	(note_tool_bar_highlight, XTread_socket):
	* msdos.c (IT_note_mode_line_highlight, IT_note_mouse_highlight)
	(dos_rawgetc):
	* w32term.c (note_mode_line_highlight, note_mouse_highlight)
	(note_tool_bar_highlight, w32_read_socket):
	Do not gratuitously ignore non-string `help-echo' properties.

2000-07-05  Gerd Moellmann  <gerd@gnu.org>

	* eval.c (Feval): Put check for interrupt_input_block in #if 0.

	* window.c (delete_all_subwindows): Reset Vwindow_list.

	* xterm.c (x_append_glyph, x_append_composite_glyph)
	(x_produce_image_glyph, x_append_stretch_glyph): Accomodate to
	changes in struct glyph starting 1999-12-27.  Some bit-fields of
	struct glyph were not set, which made glyphs unequal when compared
	with GLYPH_EQUAL_P.  Redisplay outputs such glyphs, and flickering
	effects were the result.  This also depended on the contents of
	memory returned by xmalloc.  If flickering happens again, activate
	the code in clear_glyph_row that's in #if 0.  If the flickering is
	gone with that, chances are that it is caused by something
	similar.

	* dispnew.c (clear_glyph_row): Add debug code in #if 0.

	* dispextern.h: Add some comments.

	* window.c (add_window_to_list): Add parameter LIST.
	(window_list): Order list so that, for each frame, windows are
	in canonical order, and so that frames appear in the list in
	the order given by Vframe_list.
	(next_window): Reverse the handling of NEXT_P.

2000-07-04  Gerd Moellmann  <gerd@gnu.org>

	* window.c (Vwindow_list): New variable.
	(make_window, delete_window): Set Vwindow_list to nil.
	(check_window_containing): New function.
	(window_from_coordinates): Rewritten.
	(add_window_to_list, window_list, candidate_window_p)
	(decode_next_window_args, next_window): New functions.
	(Fnext_window, Fprevious_window): Rewritten in terms of
	next_window.
	(Fwindow_list): New function.
	(Fother_window): Cleaned up.
	(foreach_window): Add a longer "variable argument list".  Let
	callback function return 0 to indicate that cycling over windows
	should stop.
	(foreach_window_1): Likewise.
	(freeze_window_start): Return int.
	(init_window): New function.
	(syms_of_window): Staticpro Vwindow_list and defsubr Swindow_list.

	* emacs.c (handle_USR1_signal, handle_USR2_signal) Clear
	input_event with bzero.
	(main): Call init_window.

	* keymap.c (get_keyelt): Temporarily inhibit GC while evaluating
	a menu filter.

2000-07-04  Kenichi Handa  <handa@etl.go.jp>

	* composite.h (make_composition_value_copy): Extern it.

	* composite.c (make_composition_value_copy): New function.

	* editfns.c (Fformat): While copying text properties, make each
	composition property value a copy.

	* fns.c (concat): While copying text properties, make each
	composition property value a copy.

2000-07-03  Gerd Moellmann  <gerd@gnu.org>

	* m/macppc.h (LINKER, LD_SWITCH_MACHINE) [LINUX]: Define.

	* fns.c (sweep_weak_table): Mark only objects that are not
	marked already.

	* frame.c (next_frame, prev_frame): If MINIBUF is a window,
	include those frames as candidates which have their focus
	redirected to the minibuffer frame.

2000-07-03  Stefan Monnier  <monnier@cs.yale.edu>

	* fns.c (Fputhash): Return `value' rather than nil.

2000-06-30  Gerd Moellmann  <gerd@gnu.org>

	* frame.c (next_frame): Don't check focus redirection in case
	MINIBUF is a window.  Doing so excludes frames using MINIBUF
	unless their focus is redirected, which contradicts the
	specification of next-frame, and leads to infinite loops in
	certain situations when cycling through windows with next-window.

2000-06-30  Kenichi Handa  <handa@etl.go.jp>

	* coding.c (code_convert_region): Even if the length of text is
	zero, try to convert it if coding->type is coding_type_ccl.
	(decode_coding_string, encode_coding_string): Likewise.

2000-06-28  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (try_window_reusing_current_matrix): Don't try to reuse
	the display if windows_or_buffers_changed.

	* dispnew.c (struct row_entry): New structure.
	(row_entry_pool, row_entry_pool_size, row_entry_idx, row_table)
	(row_table_size, old_lines, new_lines, old_lines_size)
	(new_lines_size, run_pool, runs_size, runs): New variables.
	(add_row_entry): New function.
	(scrolling_window): Use data structures allocated with xmalloc and
	held in global variables, instead of allocating them with alloca and
	holding them in local variables.  Use a larger hash table whose
	size depends on glyph matrix sizes.  Don't use bzero to clear the
	hash table; instead, clear used slots only.

	* fns.c (next_almost_prime): Make it externally visible.

	* lisp.h (next_almost_prime): Add prototype.

	* s/isc4-0.h (sigunblock): Define.

	* s/sco5.h (sigunblock): Define.

2000-06-27  Dave Love  <fx@gnu.org>

	* s/osf1.h (C_SWITCH_SYSTEM, LIBS_SYSTEM): Revert last change
	(moved to osf5-0.h).
	[!NOT_C_CODE]: Protect string.h stuff.

	* s/osf5-0.h (C_SWITCH_SYSTEM, WAIT_USE_INT, SYS_SIGLIST_DECLARED)
	(sys_siglist, NSIG): Definitions moved here from osf1.h.

2000-06-27  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (resize_mini_window): Subtract the extra line spacing
	below the last line from the needed window height.

2000-06-26  Stefan Monnier  <monnier@cs.yale.edu>

	* fns.c (Fplist_member): Renamed from Fwidget_plist_member.
	(Fwidget_get): Use it.
	(syms_of_fns): Defsubr it.

2000-06-26  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (xim_initialize) [!USE_XIM]: Don't set up the
	display info for XIM.
	(xim_open_dpy): Likewise.
	(xim_close_dpy): Don't free the display info's XIM.

	* xfns.c (x_window) [!USE_XIM]: Don't call create_frame_ic.

	* config.in (USE_XIM): New define.

	* keymap.c (get_keyelt): For menu-items containing a `:filter
	FILTER', apply FILTER to the menu-item's definition to get the
	real definition to use.

	* lisp.h (QCfilter): External declaration.

	* xfns.c (Fimage_size): New function.
	(syms_of_xfns): Defsubr it.

2000-06-26  Andreas Schwab  <schwab@suse.de>

	* coding.c (decode_coding_string): Re-fetch STRING_BYTES after
	Fstring_as_unibyte.

2000-06-25  Dave Love  <fx@gnu.org>

	* term.c [!HAVE_TERMCAP_H]: Declare tputs, tgetent, tgetflag,
	tgetnum.

	* Makefile.in (blockinput.h): Depend on atimer.h.
	(atimer.h): Depend on systime.h.

	* blockinput.h: Protect against multiple inclusion.  Include
	atimer.h.

	* atimer.h: Protect against multiple inclusion.  Include
	systime.h.

	* lisp.h (swap_in_global_binding): Declare.

2000-06-24  Ken Raeburn  <raeburn@gnu.org>

	* process.c (Fopen_network_stream): Turn off atimers for duration
	of call to connect.  (Patch from Gerd.)

2000-06-23  Dave Love  <fx@gnu.org>

	* ralloc.c: Maybe include unistd.h

	* emacs.c (setgrp): Undefine before defining.
	(malloc_warning, set_time_zone_rule, index): Prototype.

	* systime.h (EMACS_GET_TIME) [!GETTIMEOFDAY_ONE_ARGUMENT]: Use
	HAVE_STRUCT_TIMEZONE.

	* s/osf1.h: Move string.h hack here from alpha.h and make it
	conditional.
	(C_SWITCH_SYSTEM): Use _OSF_SOURCE, not -BSD, which clashes with
	_XOPEN_SOURCE.
	(WAIT_USE_INT, SYS_SIGLIST_DECLARED, sys_siglist, NSIG): Define.
	(SOCKLEN_TYPE): Don't define.

	* m/alpha.h: Remove string.h hack.

	* s/osf5-0.h: New file.

	* filelock.c: Use feature tests for fcntl.h, string.h.  Don't
	include time.h, done by systime.h.
	[__FreeBSD__]: Remove redundant includes.

	* callproc.c (setpgrp): Undefine before defining.
	(delete_temp_file): Return Qnil to avoid warning.

	* config.in (HAVE_TERM_H, HAVE_STRUCT_TIMEZONE): Add.

	* xfaces.c: Include fontset.h dependent on HAVE_WINDOW_SYSTEM, not
	HAVE_X_WINDOWS.

	* fontset.h (free_face_fontset): Renamed from fs_free_face_fontset.

	* composite.h (compose_text): Declare.

	* xterm.c: Don't include sys/types.h unconditionally.  Don't
	protect its inclusion with !USG (following xmenu.c).

2000-06-23  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c (x_create_tip_frame): Initialize frame's colors like
	in x_create_frame.

2000-06-23  Eli Zaretskii  <eliz@is.elta.co.il>

	* coding.c (decode_eol_post_ccl): Special handling for undecided
	and inconsistent EOL types.

2000-06-22  Gerd Moellmann  <gerd@gnu.org>

	* xrdb.c (x_load_resources): Add default resource for scroll bar's
	trough color and main window's background color.

	* xfns.c (Fx_file_dialog) [HAVE_MOTIF_2_1]: Handle events
	differently.

	* xterm.h (Xt_app_con): External declaration.

	* widget.c (EmacsFrameRealize): Fix typo.

	* widget.c (EmacsFrameRealize): Remove SubstructureRedirectMask.

	* xdisp.c (handle_stop): Initialize it->add_overlay_start to zero.
	(handle_invisible_prop): Record the start of invisible text in
	it->add_overlay_start.
	(struct overlay_entry): Add member `overlay'.
	(handle_overlay_change): Simplify.
	(next_overlay_string): After having processed overlay strings at the
	end of the buffer, record that fact in
	it->overlay_strings_at_end_processed_p.
	(compare_overlay_entries): If before- and after-strings come
	from the same overlay, let before-strings come first.
	(RECORD_OVERLAY_STRING): Record the overlay that strings come from.
	(load_overlay_strings): Take it->add_overlay_start into account
	when adding overlay strings.

	* dispextern.h (struct it): Add member add_overlay_start.

2000-06-22  Dave Love  <fx@gnu.org>

	* s/isc3-0.h (C_SWITCH_SYSTEM): Define _XOPEN_SOURCE=500.

	* s/gnu-linux.h (C_SWITCH_SYSTEM): Don't define _XOPEN_SOURCE here.

2000-06-22  Kenichi Handa  <handa@etl.go.jp>

	* ccl.c (ccl_driver) <CCL_End>: Decrement stack_idx only when it
	is greater than 0.

2000-06-21  Dave Love  <fx@gnu.org>

	* Makefile.in (GETLOADAVG_OBJ): Removed -- LIBOBJS does it.

2000-06-21  Stefan Monnier  <monnier@cs.yale.edu>

	* syntax.c (back_comment): Simplify string-parity counting (with
	the added benefit of handling multiple string-styles as long as
	they are not intertwined).
	Jump to the slow code as soon as a comment starter is found in
	a "string_lossage" position.  Fixes the case:  " /* " /* " */.

2000-06-21  Dave Love  <fx@gnu.org>

	* Makefile.in: Use GETLOADAVG_LIBS.

	* config.in: Add HAVE_FCNTL_H, _FILE_OFFSET_BITS,
	_LARGEFILE_SOURCE, _LARGE_FILES, _XOPEN_SOURCE.

2000-06-20  Stefan Monnier  <monnier@cs.yale.edu>

	* syntax.c (describe_syntax): Recognize the `n'estable bit.
	(Fforward_comment, scan_lists):
	Check the comstyle of single-char comment-starters.
	(scan_sexps_forward): Don't try to recognize `half comment-enders' if
	we're just at the beginning of the comment (f.ex with (*) ... (*)).
	Check the comstyle of single-char comment-starters.
	Clarify control-flow around the Scomment case.

2000-06-20  Dave Love  <fx@gnu.org>

	* fns.c (make_hash_table, maybe_resize_hash_table):
	Cast arg of next_almost_prime.

	* tparam.c [emacs]: Include lisp.h.

	* termcap.c [emacs]: Test HAVE_FCNTL_H, not USG5.  Include lisp.h
	and unistd.h.

2000-06-20  Gerd Moellmann  <gerd@gnu.org>

	* keyboard.c (adjust_point_for_property): Check if display
	property should be treated as intangible by looking at its
	value.

	* xdisp.c (single_display_prop_intangible_p)
	(display_prop_intangible_p): New functions.

	* dispextern.h (display_prop_intangible_p): Add prototype.

	* xdisp.c (dump_glyph_row): Show type of glyph->object.

	* s/isc4-0.h (sigblock): Redefined to pass a pointer as second
	argument to sigprocmask.

	* s/sco5.h (sigblock): Redefined to pass a pointer as second
	argument to sigprocmask.

	* syssignal.h (sigblock, sigunblock) [USG5_4]: Set
	sigprocmask_set, and pass a pointer to it to sigprocmask.

	* sysdep.c (sigprocmask_set): New variable.

	* fileio.c (make_temp_name): Don't use `%s' in string passed to
	report_file_error.

2000-06-20  Sam Steingold  <sds@gnu.org>

	* xrdb.c: Don't declare xmalloc, xrealloc.

2000-06-20  Stefan Monnier  <monnier@cs.yale.edu>

	* regex.c (re_match, re_match_2): Protect calls to alloca (0).
	(re_comp): Cast gettext return value to avoid complaints when
	!HAVE_LIBINTL.

2000-06-20  Dave Love  <fx@gnu.org>

	* m/stride.h, m/mips.h: Don't define HAVE_GETWD,
	HAVE_GETTIMEOFDAY.

	* m/ibmrt-aix.h: Don't declare HAVE_GETTIMEOFDAY, HAVE_VFORK.

	* m/ibmrs6000.h, m/ibmps2-aix.h, m/dpx2.h: Don't declare HAVE_GETWD.

	* m/alpha.h: Don't declare xmalloc, xrealloc.

	* s/ux4800.h: Don't declare GETTIMEOFDAY_ONE_ARGUMENT.

	* s/usg5-4-2.h: Don't declare HAVE_GETWD, VFORK_RETURN_TYPE.

	* s/umips.h: Don't declare HAVE_GETWD, HAVE_GETTIMEOFDAY.

	* s/cxux.h, s/gnu-linux.h, s/iris3-6.h, s/irix3-3.h: Don't declare
	HAVE_GETWD.

	* keyboard.h (poll_for_input_1): Declare.

	* getloadavg.c: Don't define NLIST_STRUCT (handled by configure).

	* alloc.c (xmalloc, xrealloc, xfree): Define using POINTER_TYPE.

	* doprnt.c: Don't declare xmalloc, xrealloc.

	* lisp.h (x_set_tool_bar_lines, free_frame_xic, compose_text)
	(getenv, ctime, getwd): Removed.
	(xmalloc, xrealloc, xfree): Declare using POINTER_TYPE.

	* xterm.h: Remove duplicate prototypes.  Declare free_frame_xic,
	x_set_tool_bar_lines.

	* config.in: Add HAVE_GETWD.  Move some definitions above
	machine/system includes.

2000-06-20  Kenichi Handa  <handa@etl.go.jp>

	* s/bsd386.h (HAVE_GETLOADAVG): Define it as 1.

	* xfaces.c (font_list): Handle the case that REGISTRY doesn't
	contain information about ENCODING.

	* fontset.c (FONTSET_ASCII): Use the first element of char table
	for an ASCII font, not defalt slot.
	(fontset_ref_via_base): If FONTSET doesn't contain information for
	C, try the default fontset.
	(make_fontset): Don't copy the default fontset.
	(fontset_font_pattern): Likewise.
	(accumulate_font_info): If ELT is nil, use the corresponding
	element in the default fontset.

2000-06-19  Dave Love  <fx@gnu.org>

	* syntax.c (Fparse_partial_sexp): Doc fix.

	* regex.h: Test PROTOTYPES as well as __STDC__.

	* unexalpha.c: Include errno.h, string.h, unistd.h.  Don't declare
	errno, strerror.  Put text after #endif in comment.

	* xdisp.c (dump_glyph_matrix): Add `static' to declaration (for
	pcc).

	* xterm.c (x_frame_of_widget): Likewise.

2000-06-19  Gerd Moellmann  <gerd@gnu.org>

	* abbrev.c (syms_of_abbrev): Set buffer_default's abbrev table
	to Vfundamental_mode_abbrev_table.

	* alloc.c (mark_object) [GC_CHECK_MARKED_OBJECTS]: Check that no
	bogus objects are marked.  This slows down GC by ~80 percent, but
	it might be worth trying when debugging GC-related problems.
	This feature requires conservative stack marking to be enabled.

	* xterm.c (XTread_socket) <KeyPress>: In case XmbLookupString
	returns XLookupChars, reset `modifiers' to zero.

2000-06-19  Dave Love  <fx@gnu.org>

	* mktime.c: Unprotoized.

2000-06-19  Richard Stallman  <rms@gnu.org>

	* data.c (set_internal): If variable is frame-local,
	store the new value immediately into the frame parameter alist.

2000-06-19  Ken Raeburn  <raeburn@gnu.org>

	* xfns.c (jpeg_load): Fetch error-handling data first, then fill
	in the custom handler pointer.

	* keyboard.c (follow_key, read_key_sequence): Use XUINT on key
	value, or checks for CHAR_META can fail when Lisp_Object is a
	union type.
	* keymap.c (get_keyelt): Likewise.

2000-06-19  Kenichi Handa  <handa@etl.go.jp>

	* ccl.h (struct ccl_program): New member eol_type.
	(struct ccl_spec): New member cr_carryover.

	* ccl.c (CCL_WRITE_CHAR): Convert NL according to ccl->eol_type.
	(setup_ccl_program): Initialize ccl->eol_type to CODING_EOL_LF.

	* coding.c (setup_coding_system) <4>: Reset member `cr_carryover'.
	(ccl_coding_driver): On encoding, initialize ccl->eol_type.
	(decode_eol_post_ccl): New function.
	(decode_coding): Don't detect EOL format here for CCL based coding
	systems.
	(decode_coding) <coding_type_ccl>: Handle carryovered CR.  Call
	decode_eol_post_ccl after running the CCL program.
	(code_convert_region): Don't detect EOL format here for CCL based
	coding systems.
	(decode_coding_string): Likewise.

2000-06-18  Ken Raeburn  <raeburn@gnu.org>

	* charset.c (update_charset_table): Use XINT on "iso_final_char"
	when treating it as an integer.

	* coding.h (encode_coding_string): Declare.

	* keyboard.c (read_key_sequence): Use XINT on "pos" when treating
	it as an integer.

	* keymap.c (Fwhere_is_internal): Rename argument "keymap" to
	"xkeymap" to avoid shadowing the "enum map_type" value that needs
	to be passed to get_local_map.

	* sound.c (Fplay_sound): Don't call make_number on
	Frun_hook_with_args count argument.

	* xterm.c (x_send_scroll_bar_event): Fudge lisp object/integer
	for lisp objects in X event structure data field, when lisp
	objects are represented with unions.
	(x_scroll_bar_to_input_event): Ditto.

2000-06-16  Ken Raeburn  <raeburn@gnu.org>

	* xdisp.c (decode_mode_spec): In "no_value" case, do NUL
	termination of string.  Fix sense of test whether
	Vline_number_display_limit is an integer.

2000-06-16  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (syms_of_xfaces) [DEBUG_X_COLORS]: Defsubr dump_colors
	only if HAVE_X_WINDOWS.

	* keymap.c (describe_buffer_bindings): Add `\f\n' in front
	of titles.

	* dispnew.c (update_frame_1): Handle case that cursor vpos is
	out of bounds.

2000-06-15  Eli Zaretskii  <eliz@is.elta.co.il>

	* unexec.c (toplevel): Fix last change, so as not to deprive MSDOS
	of its headers.

2000-06-15  Kenichi Handa  <handa@etl.go.jp>

	* coding.c (decode_coding_emacs_mule): Always set src_base at the
	start of the while loop.

2000-06-15  Gerd Moellmann  <gerd@gnu.org>

	* atimer.c (alarm_signal_handler): Add forward declaration.

	* data.c (set_internal): Remove debug code.

2000-06-14  Gerd Moellmann  <gerd@gnu.org>

	* Makefile.in (bootstrap-temacs): Add `-I../src'.

	* unexec.c (toplevel) [COFF]: Include coff.h.

	* s/lynxos.h: New file.

	* keymap.c (Fsingle_key_description): Enclose function key and
	event symbol names in angle brackets.

	* xdisp.c (setup_echo_area_for_printing): Call
	message_log_maybe_newline if message_buf_print is not set.

	* print.c (printchar, strout): Don't check message_buf_print
	before calling setup_echo_area_for_printing because that
	function does something useful even when message_buf_print is
	already set.

	* xdisp.c (message_truncate_lines, Qmessage_truncate_lines): New
	variables.
	(ensure_echo_area_buffers): Initialize echo buffer's
	truncate lines setting to nil.
	(with_echo_area_buffer): Don't set the echo buffer's truncate
	lines setting here.
	(set_message_1): Set it here instead, based on the value
	of message_truncate_lines.
	(resize_mini_window): Handle case that lines are truncated.
	(syms_of_xdisp): Initialize Qmessage_truncate_lines.  DEFVAR_BOOL
	message-truncate-lines.

	* keyboard.c (read_char): Bind message-truncate-lines to t
	while displaying a help-echo.

	* lisp.h (Qmessage_truncate_lines): External declaration.

2000-06-13  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (Vline_number_display_limit): Renamed from
	line_number_display_limit.
	(syms_of_xdisp): Use DEFVAR_LISP for line-number-display-limit.
	Extend documentation string.  Initialize
	Vline_number_display_limit to nil meaning no limit.
	(decode_mode_spec): Use Vline_number_display_limit with its new
	meaning.

	* xterm.c (x_check_font) [GLYPH_DEBUG]: Add prototype.

2000-06-13  Richard Stallman  <rms@gnu.org>

	* frame.c (Fmodify_frame_parameters): Doc fix.

	* xfns.c (x_set_frame_parameters): Comment fix.

	* frame.c (store_frame_param): Call swap_in_global_binding if the
	variable's current binding was chosen based on this frame.

	* data.c (swap_in_global_binding): New function.

2000-06-13  Eli Zaretskii  <eliz@is.elta.co.il>

	* msdos.c (IT_write_glyphs): Don't use CODING_REQUIRE_ENCODING
	macro, instead AND with CODING_REQUIRE_ENCODING_MASK.

2000-06-13  Eli Zaretskii  <eliz@is.elta.co.il>

	* msdos.h (EMACS_MSDOS_H): Renamed from MSDOS_H_.

2000-06-12  Jason Rumney  <jasonr@gnu.org>

	* w32bdf.h (EMACS_W32BDF_H): Renamed from __W32BDF_H__

	* w32.h (EMACS_W32_H): Renamed from _NT_H_

	* w32gui.h (EMACS_W32GUI_H): Renamed from __W32GUI_H__

	* w32inevt.h (EMACS_W32INEVT_H): Renamed from __NTINEVT_H__

2000-06-12  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (Fdump_colors) [DEBUG_X_COLORS]: New function.
	(syms_of_xfaces): Defsubr Sdump_colors.
	(x_free_colors): Don't treat b&w specially on default visual.
	(x_free_dpy_colors): New function.
	(free_face_colors): Don't check visual class; it's done
	in x_free_colors.

	* xterm.c (x_frame_of_widget): New function.
	(x_alloc_nearest_color_for_widget): Use it.
	(x_copy_dpy_color): New function.
	(x_destroy_window): Free various colors.

2000-06-12  Kenichi Handa  <handa@etl.go.jp>

	* ccl.h (EMACS_CCL_H): Renamed from _CCL_H.

	* charset.h (EMACS_CHARSET_H): Renamed from _CHARSET_H.

	* coding.h (EMASC_CODING_H): Renamed from _CODING_H.

	* composite.h (EMACS_COMPOSITE_H): Renamed from _COMPOSITE_H.

	* fontset.h (EMACS_FONTSET_H): Renamed from _FONTSET_H.

2000-06-11  Dave Love  <fx@gnu.org>

	* systime.h (EMACS_SYSTIME_H): Renamed from _SYSTIME_H.

2000-06-11  Eli Zaretskii  <eliz@is.elta.co.il>

	* msdos.h: Don't use _MSDOS_H_ as a symbol, use MSDOS_H_ instead.

2000-06-11  Gerd Moellmann  <gerd@gnu.org>

	* xmenu.c (xmenu_show): Cast second parameter of lw_popup_menu
	to `XEvent *'.

2000-06-10  Kenichi Handa  <handa@etl.go.jp>

	* regex.c (MAKE_CHAR) [!emacs]: Dummy macro for non-Emacs env.
	(regex_compile): Fix the code for handling the case of single byte
	char and multibyte char being mixed in a range within [...].

	* fileio.c (Finsert_file_contents): Be sure to setup src_multibyte
	and dst_multibyte members of coding.

	* charset.c (update_charset_table): Update the table
	bytes_by_char_head.
	(init_charset_once): Initialize elements of bytes_by_char_head to
	1 except for leading codes for private charases.

	* charset.h (CHARSET_8_BIT_GRAPHIC): Define as 0x80.
	(UNIBYTE_STR_AS_MULTIBYTE_P): Fix for an invalid multibyte
	sequence.

2000-06-09  Ken Raeburn  <raeburn@gnu.org>

	* xterm.c (x_connection_closed): If dpyinfo is NULL, don't try to
	access the data it doesn't point to.

2000-06-08  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (XTread_socket) <FocusIn>: Queue a FOCUS_IN_EVENT which
	will be translated to a switch-frame event when reading the
	event queue.  This is necessary because Emacs otherwise won't
	perform a switch-frame to a new frame until some other event, for
	example a keystroke event, forces it to do so.  This has various
	effects, one visible being that the cursor of a frame created with
	C-x 5 2 or switched to with a window manager key binding like
	A-TAB stays hollow because selected_window isn't on the newly
	focused frame until the switch-frame is performed.

	* keyboard.c (kbd_buffer_get_event): Handle FOCUS_IN_EVENT by
	generating a switch-frame event if necessary.

	* termhooks.h (enum event_kind): Add FOCUS_IN_EVENT.

	* xdisp.c (handle_fontified_prop): Don't GCPRO local var `pos';
	it's an integer.

2000-06-08  Kenichi Handa  <handa@etl.go.jp>

	* fontset.c (Fset_fontset_font): The arg CHARACTER may be a
	charset.

2000-06-07  Gerd Moellmann  <gerd@gnu.org>

	* window.c (displayed_window_lines): Take empty lines at
	the bottom of a window into account.

	* window.c (displayed_window_lines): New function.
	(Fmove_to_window_line): Use displayed_window_lines to determine
	the number of lines to move, instead of using the window's height.

	* lread.c (readevalloop): If READCHARFUN sets point to ZV, arrange
	to stop reading, even if the form read sets point to a different
	value when evaluated.

	* xdisp.c (display_line): Fix code deciding in which line to
	put the cursor.

2000-06-07  Kenichi Handa  <handa@etl.go.jp>

	* fileio.c (e_write): Free composition data if stored in
	coding->cmp_data.

2000-06-06  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (display_line): Set row's and iterator's
	starts_in_middle_of_char_p and ends_in_middle_of_char_p flags.
	Set cursor even if row ends in the middle of a character.
	(dump_glyph_row): Print values of new flags.
	(redisplay_window) <cursor movement in unchanged window>: When
	point has been moved forward, and PT is at the end of the cursor
	row, don't place the cursor in the next row if the cursor row ends
	in the middle of a character or at ZV.

	* dispextern.h (struct it): Add starts_in_middle_of_char_p.
	(struct glyph_row): Add starts_in_middle_of_char_p and
	ends_in_middle_of_char_p.
	(MATRIX_ROW_ENDS_IN_MIDDLE_OF_CHAR_P): Test row's
	ends_in_middle_of_char_p flag.
	(MATRIX_ROW_STARTS_IN_MIDDLE_OF_CHAR_P): Likewise.

	* term.c (append_glyph): Revert change of 2000-06-06.

	* xdisp.c (display_line): Revert change of 2000-06-06.  Treat
	padding glyph not fitting on line as whole character not
	fitting on line.

	* xterm.c (x_produce_glyphs): Don't xassert `it->descent > 0';
	this isn't true for images with `:ascent 100'.

2000-06-06  Kenichi Handa  <handa@etl.go.jp>

	* buffer.c (Fset_buffer_multibyte): Don't make the current buffer
	as modified if it is originally unmodified.

	* term.c (encode_terminal_code): Change the way to check if
	terminal coding does any conversion.
	(append_glyph): Set glyph->pixel_width correctly.

	* xdisp.c (display_line): While checking line continuation, pay
	attention to a padding glyph.

2000-06-05  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (redisplay_window): Always use set_buffer_internal_1.

2000-06-05  Dave Love  <fx@gnu.org>

	* xdisp.c: Include fontset.h.

	* xfns.c (x_real_positions): Declare tmp_nchildren as unsigned.

	* xterm.c (x_calc_absolute_position): Declare nchildren unsigned.

	* dispnew.c: Conditionally include term.h.

	* coding.h: Declare code_convert_string_norecord.

	* frame.h (struct frame): Use volatile unconditionally.

	* buffer.h: Remove Vbefore_change_function, Vafter_change_function.

	* xmenu.c (menu_item_selection): Declare volatile unconditionally.

	* systime.h: Protect against multiple inclusion.
	(timezone) [USG5_4]: Define as time_t.

	* lisp.h (DEFUN, EXFUN): Test PROTOTYPES.
	(Foptimize_char_table, make_temp_name): Declare.

	* Makefile.in (xdisp.o): Depend on fontset.h.

	* xterm.c (x_calc_absolute_position): Declare nchildren unsigned.

	* lisp.h (DEFUN, EXFUN): Test PROTOTYPES.
	(Foptimize_char_table, make_temp_name): Declare.

	* s/irix4-0.h:
	* s/irix5-0.h:
	* s/netbsd.h: Don't define autoconfiscated MATHERR.

2000-06-02  Dave Love  <fx@gnu.org>

	* lread.c (_XOPEN_SOURCE, __EXTENSIONS__): Don't define.

2000-06-02  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (realize_x_face): When copying BASE_FACE bitwise to the
	result face, set flags in that face indicating that colors may not
	be freed.

	* xterm.c (x_set_mouse_face_gc): If first glyph isn't a character
	glyph, use the ASCII NUL character to determine the face.

2000-06-02  Dave Love  <fx@gnu.org>

	* sysdep.c: Conditionally include stdlib.h, unistd.h.
	(VFORK_RETURN_TYPE): Remove.

	* config.in: Add NO_MATHERR.

2000-06-01  Dave Love  <fx@gnu.org>

	* cmds.c (internal_self_insert): Don't check
	Vbefore_change_function, Vafter_change_function.

	* insdel.c (signal_before_change, signal_after_change): Likewise.

	* buffer.c (Vbefore_change_function, Vafter_change_function):
	Variables and their initializations deleted.

	* callint.c (Fcall_interactively): Doc fix.

	* terminfo.c (ospeed) [HAVE_SPEED_T]: Don't declare extern.

2000-05-31  Dave Love  <fx@gnu.org>

	* textprop.c: Revert last change -- duplicated.

2000-05-31  Gerd Moellmann  <gerd@gnu.org>

	* dispnew.c (find_glyph_row_slice, swap_glyphs_in_rows): Put
	in #if 0.

	* lisp.h (eassert) [!ENABLE_CHECKING]: Define as `(void) 0'.

2000-05-31  Jason Rumney  <jasonr@gnu.org>

	* search.c (Fre_search_forward, Fre_search_backward)
	(Fposix_search_backward, Fposix_search_forward): Fix newlines in docs.

	* w32select.c (Fw32_set_clipboard_data): Change QNil to Qnil.

2000-05-30  Jason Rumney  <jasonr@gnu.org>

	* coding.h (ENCODE_SYSTEM, DECODE_SYSTEM) [WINDOWSNT]: New macros.
	[WINDOWSNT]: Add extern for Vw32_system_coding_system.

	* dispextern.h (struct glyph) [WINDOWSNT]: Add w32_font_type
	member.

	* fileio.c (Fread_file_name) [HAVE_NTGUI]: Use file dialog.
	(Fread_file_name) [HAVE_NTGUI, USE_MOTIF]: Do not attempt to
	expand a nil default_filename.

	* keyboard.c (make_lispy_event) [WINDOWS_NT]: Pass a window
	pointer to glyph_to_pixel_coords, not a frame.

	* makefile.nt (w32fns.obj, w32menu.obj): Add charset.h and
	coding.h to dependencies.

	* w32bdf.c (w32_load_bdf_font): Initialize font->double_byte_p.

	* w32console.c (glyph_to_pixel_coords): Change first parameter to
	window pointer to be consistent with w32term.c and xterm.c.

	* w32fns.c: Format and doc changes to bring closer to xfns.c.
	(VIETNAMESE_CHARSET): Define if not defined in system headers.
	(Qline_spacing, Qcenter): New variables.
	(Qw32_charset_*, w32_codepage_for_font): Moved from w32term.c.
	(x_set_line_spacing): New function.
	(x_set_frame_parameters): Use FRAME_NEW_WIDTH, FRAME_NEW_HEIGHT
	macros.
	(x_specified_cursor_type): New function.
	(x_set_cursor_type): Use it.
	(x_set_name, x_set_title): Use ENCODE_SYSTEM to encode titlebar
	and icon strings.
	(validate_x_resource_name, x_get_resource_string): Measure lengths
	of external strings in bytes.
	(w32_wnd_proc) [WM_MEASURE_ITEM]: Avoid calling
	GetTextExtentPoint32 with NULL title.
	(Fx_create_frame): Initialize Qline_spacing.
	(w32_load_system_font): Initialize font->double_byte_p.
	(x_to_w32_charset): Use Vw32_charset_info_alist.
	(Image, busy cursor, tooltip functions): Merged changes from
	xfns.c. Not yet functional on Windows.

	* w32gui.h (W32FontStruct): Add double_byte_p member.

	* w32inevt.c (NUM_TRANSLATED_MOUSE_BUTTONS): New constant.
	(emacs_button_translation): Use it.
	(do_mouse_event): Allow up to 32 mouse buttons by allowing any bit
	in `mask' to be set.

	* w32menu.c (single_submenu, w32_menu_show): Call ENCODE_SYSTEM on
	menu strings.

	* w32term.c: Format and doc changes to bring closer to xterm.c.
	(w32_char_font_type): New enum.
	(Qw32_charset_*, w32_codepage_for_font): Moved to w32fns.c.
	(w32_per_char_metric): Use w32_char_font_type instead of unicode_p.
	(w32_encode_char): New function.
	(x_encode_char): Removed.
	(x_get_glyph_and_face_encoding): Use w32_encode_char in place of
	x_encode_char and w32_font_is_double_byte.
	(x_produce_image_glyph): Use image_ascent.
	(x_produce_glyphs): Use new version of w32_per_char_metric and
	handle NULL return value. Allow extra line spacing.
	(W32_TEXTOUT): Distinguish between Unicode and DBCS text.
	(w32_get_glyph_overhangs): Remove unicode_p param. Use
	w32_font_type member of glyph instead.
	(x_draw_glyph_string): Draw underline and strike-out for BDF fonts.
	(fast_find_position): Make sure not to consider rows not visible
	in the window.
	(w32_read_socket) [WM_MENUSELECT]: Cannot call
	w32_menu_display_help with input blocked, as it can abort.
	(x_display_and_set_cursor): Choose cursor depending
	on buffer-local value of cursor_type.
	(x_draw_bar_cursor): Add parameter WIDTH.

	* w32term.h (CP_DEFAULT): Define.
	(Fx_display_color_p, Fx_display_grayscale_p, image_ascent): Declare.

2000-05-30  Gerd Moellmann  <gerd@gnu.org>

	* search.c (Fre_search_forward, Fre_search_backward)
	(Fposix_search_backward, Fposix_search_forward): Doc fix.

2000-05-30  Kenichi Handa  <handa@etl.go.jp>

	* coding.c (detect_coding_iso2022): Fix code for checking
	CODING_CATEGORY_MASK_ISO_8_2.

2000-05-29  Stefan Monnier  <monnier@cs.yale.edu>

	* regex.c (PREFETCH_NOLIMIT): New function.
	(re_match_2_internal): Use it and adjust the end_match_2 logic.

2000-05-29  Gerd Moellmann  <gerd@gnu.org>

	* syntax.c (find_defun_start): Move test for
	open_paren_in_column_0_is_defun_start outside of the loop.

	* xdisp.c (redisplay_window): Really switch buffers when
	displaying mode lines, and temporarily set selected_frame to the
	frame of the window that's redisplayed.

	* xfaces.c (free_realized_faces): Block/unblock input.
	(free_realized_multibyte_face): Ditto.

2000-05-29  Dave Love  <fx@gnu.org>

	* textprop.c (Qkeymap): New variable.
	(syms_of_textprop): Intern it.

	* keymap.c: Include intervals.h.
	(Fkey_binding, Fwhere_is_internal): Deal with `keymap' property.

	* Makefile.in (keymap.o): Depend on intervals.h.

	* keyboard.c (menu_bar_items, tool_bar_items)
	(Fexecute_extended_command): Deal with `keymap' property.
	(read_key_sequence): Track map from `keymap' property as well as
	`local_map'.

	* intervals.c (get_local_map): Extra arg to allow looking for
	`keymap' too.

	* intervals.h (map_property): New enum.
	(get_local_map): Extra arg using it.
	(Qkeymap): Declare.

	* lisp.h (get_local_map): Don't declare here.

2000-05-29  Kenichi Handa  <handa@etl.go.jp>

	* Makefile.in (callproc.o): Depend on composite.h.

	* callproc.c: Include composite.h.
	(Fcall_process): Handle composition correctly.

	* coding.h (coding_allocate_composition_data): Extern it.
	(coding_restore_composition): Likewise.

	* coding.c (DECODE_COMPOSITION_START): If coding->cmp_data is not
	yet allocated, finish decoding with result
	CODING_FINISH_INSUFFICIENT_CMP.
	(coding_allocate_composition_data): Make it non-static.
	(coding_restore_composition): Likewise.

2000-05-29  Eli Zaretskii  <eliz@is.elta.co.il>

	* charset.c (syms_of_charset): Revert last change.

2000-05-28  Eli Zaretskii  <eliz@is.elta.co.il>

	* term.c (produce_glyphs): Treat characters from the eight-bit-*
	charsets as unibyte, with 1-column screen width.  Sent by Kenichi
	Handa.

2000-05-28  Eli Zaretskii  <eliz@is.elta.co.il>

	* charset.c (syms_of_charset): Set width of character sets
	eight-bit-control and eight-bit-graphic to 1 column.

2000-05-26  Gerd Moellmann  <gerd@gnu.org>

	* config.in (HAVE_SPEED_T): New define.

	* sysdep.c, terminfo.c (ospeed) [HAVE_SPEED_T]: Declare as
	`extern speed_t'.

2000-05-26  Dave Love  <fx@gnu.org>

	* coding.c (shrink_decoding_region): Initialize eol_conversion.

	* data.c (Qsubrp, Qmany, Qunevalled): New variables.
	(Fsubr_arity): New function.
	(syms_of_data): Install them.

2000-05-26  Kenichi Handa  <handa@etl.go.jp>

	* charset.c (init_charset_once): Set the table bytes_by_char_head
	correctly.

	* fontset.c (syms_of_fontset): Adjust the font name for ascii of
	the default fontset to what Emacs uses by default.
	(check_registry_encoding): This function deleted.
	(Fset_fontset_font): Remove the adhoc condition for the default
	fontset.  Allow cons in FONTNAME.

	* fns.c (map_char_table): Ignore char-table entries for
	charsets eight-bit-control and eight-bit-graphic.

2000-05-25  Ken Raeburn  <raeburn@gnu.org>

	* emacs.c (main): Initialize keyboard syms before initializing
	window code, so face names are available.

2000-05-25  Stefan Monnier  <monnier@cs.yale.edu>

	* regex.c (at_begline_loc_p): Also recognize the \\(?:^ case
	of an anchor at the beginning of a shy-group.

2000-05-25  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (handle_invisible_prop): Don't try to skip over
	invisible text if end of text is already reached.

2000-05-25  Dave Love  <fx@gnu.org>

	* xdisp.c (Fdump_glyph_matrix): Declare the arg.

	* coding.c (encode_eol): Add null statement after label.

2000-05-25  Eli Zaretskii  <eliz@is.elta.co.il>

	* w16select.c (Fw16_set_clipboard_data): Fix the change from
	2000-05-20.

2000-05-25  Kenichi Handa  <handa@etl.go.jp>

	* ccl.c (ccl_driver): Fix previous change.

2000-05-25  Kenichi Handa  <handa@etl.go.jp>

	* coding.c (run_pre_post_conversion_on_str): Set point to the
	beginning of buffer before calling coding->post_read_conversion.
	(decode_coding_string): Give correct args to
	run_pre_post_conversion_on_str.
	(encode_coding_string): Likewise.

	* ccl.c (ccl_driver) <CCL_ReadMultibyteChar2>
	<CCL_WriteMultibyteChar2>:  Handle charsets eight-bit-control and
	eight-bit-graphic correctly.

2000-05-24  Kenichi HANDA  <handa@etl.go.jp>

	* fileio.c (Finsert_file_contents): Even if a file is not found,
	execute codes for setting up coding system.  Call
	after-insert-file-functions unconditionally.

2000-05-24  Gerd Moellmann  <gerd@gnu.org>

	* callproc.c, emacs.c, sysdep.c (setpgrp): Don't define if USG and
	BSD_PGRPS are not defined.

2000-05-24  Kenichi Handa  <handa@etl.go.jp>

	* charset.c (update_charset_table): Accept nil in LONG_NAME and
	DESCRIPTION.
	(syms_of_charset): Avoid building same strings.

2000-05-23  Gerd Moellmann  <gerd@gnu.org>

	* lread.c (Fload): Add a comment about the meaning of
	Vuser_init_file being t.

	* puresize.h (BASE_PURESIZE): Increase to 675000.

	* s/gnu-linux.h (setpgrp): Don't define it here because this
	prevents compilation on GNU/Linux systems with glib 2.2.

	* callproc.c, emacs.c, sysdep.c (setpgrp) [HAVE_SETPGID]: Define
	as setpgid.

2000-05-23  Eli Zaretskii  <eliz@is.elta.co.il>

	* Makefile.in (SOME_MACHINE_LISP): Add disp-table.elc,
	dos-vars.elc, ccl.elc, and codepage.elc, all loaded by the MS-DOS
	version.
	(MSDOS_SUPPORT): Add dos-vars.elc, ccl.elc, and codepage.elc.

2000-05-23  Kenichi Handa  <handa@etl.go.jp>

	* syntax.c (skip_chars): Use FETCH_STRING_CHAR_ADVANCE
	unconditionally.

	* msdos.c (IT_write_glyphs): Set coding->src_multibyte to 1.

	* term.c (encode_terminal_code): Set coding->src_multibyte
	properly.

	* coding.c (encode_eol): Fix a bug of DOS style EOL encoding.

2000-05-22  Kenichi Handa  <handa@etl.go.jp>

	* keyboard.c (read_char): Allow character codes 128..255 to be
	handled by input-method-function.

	* insdel.c (adjust_markers_for_replace): Fix previous change.
	(adjust_after_replace): If PREV_TEXT is nil, call
	adjust_markers_for_insert, not adjust_markers_for_replace.

2000-05-20  NIIBE Yutaka  <gniibe@mri.co.jp>

	* s/gnu-linux.h (UNIX98_PTYS) [HAVE_GRANDPT]: Define.
	(PTY_ITERATION, PTY_NAME_SPRINTF, PTY_OPEN, PTY_TTY_NAME_SPRINTF)
	[HAVE_GRANDPT]: Define.
	(C_SWITCH_SYSTEM): Add -D_XOPEN_SOURCE.

	* sysdep.c (setup_pty): Treat case that UNIX98_PTYS is defined
	like SYSV_PTYS.

	* config.in (HAVE_GRANDPT, HAVE_GETPT): New defines.

	* process.c (toplevel) [UNIX98_PTYS]: Include stdlib.h.

2000-05-20  Kenichi Handa  <handa@etl.go.jp>

	The following changes are to handle 8-bit characters in a
	multibyte buffer/string without facing with byte combining
	problem.  Two new charsets eight-bit-control (for 0x80..0x9F) and
	eight-bit-graphic (for 0xA0..0xFF) are introduced.

	* Makefile.in (fns.o): Depend on charset.h.

	* alloc.c (Fmake_byte_code): If BYTECODE-STRING is multibyte,
	convert it to unibyte.
	(make_string): Use parse_str_as_multibyte, not chars_in_text.

	* buffer.c (advance_to_char_boundary): Don't use DEC_POS to find a
	apparent char boundary.
	(Fset_buffer_multibyte): Convert 8-bit characters in the range
	0x80..0x9F to/from multibyte form.

	* bytecode.c (Fbyte_code): If arg BYTESTR is multibyte, convert it
	to unibyte.

	* callproc.c (Fcall_process): Always encode an argument string if
	it is multibyte.  Setup src_multibyte and dst_multibyte members of
	process_coding properly.

	* category.c (Fmodify_category_entry): Use SPLIT_CHAR, not
	SPLIT_NON_ASCII_CHAR.

	* ccl.c (CCL_WRITE_CHAR): Be sure to write single byte characters
	as is.
	(CCL_MAKE_CHAR): Use MAKE_CHAR, not MAKE_NON_ASCII_CHAR.

	* charset.c (Qeight_bit_control, Qeight_bit_graphic): New
	variables.
	(SPLIT_CHARACTER_SEQ): This macro deleted.
	(SPLIT_MULTIBYTE_SEQ): Assume that multibyte sequence at STR is
	valid.
	(CHAR_COMPONENTS_VALID_P): Handle new charsets; eight-bit-control
	and eight-bit-graphic.
	(char_to_string): Likewise.  Signal an error for too large
	character code.
	(char_printable_p): Return 0 for 8-bit characters.
	(update_charset_table): Update iso_charset_table only when a final
	character is non-negative.
	(find_charset_in_text): Renamed from find_charset_in_str.
	Arguments and return value changed.  Callers changed.
	(Fdefine_charset): Args ISO-FINAL-CHAR and ISO-GRAPHIC-PLANE can
	be -1 if CHARSET is used only internally.
	(Fmake_char_internal): Handle new charsets; eight-bit-control and
	eight-bit-graphic.
	(Fcharset_after): Simplified.
	(char_valid_p): Use SPLIT_CHAR, not SPLIT_NON_ASCII_CHAR.
	(char_bytes): Return 2 for chars of the range 0xA0..0xFF.
	(multibyte_chars_in_text): Simplified by assuming there's no
	invalid multibyte sequence.
	(parse_str_as_multibyte, str_as_multibyte, str_to_multibyte,
	str_as_unibyte): New functions.
	(Fstring): Simpified by assuming that byte combining never
	happens.
	(init_charset_once): Initialization for
	LEADING_CODE_8_BIT_CONTROL.
	(syms_of_charset): Intern and staticpro Qeight_bit_control and
	Qeight_bit_graphic.  Include them in Vcharset_list.  Make charsets
	eight-bit-control and eight-bit-graphic.

	* charset.h (LEADING_CODE_8_BIT_CONTROL, CHARSET_8_BIT_CONTROL,
	CHARSET_8_BIT_GRAPHIC): New macros.
	(SINGLE_BYTE_CHAR_P): Make it faster by using casting.
	(CHARSET_ISO_GRAPHIC_PLANE): Use XINT instead of XFASTINT.
	(CHARSET_REVERSE_CHARSET): Likewise.
	(CHARSET_VALID_P): Handle new charsets; eight-bit-control and
	eight-bit-graphic.
	(BYTES_BY_CHAR_HEAD, WIDTH_BY_CHAR_HEAD): Optimize for ASCII.
	(CHAR_CHARSET, MAKE_CHAR, SPLIT_CHAR, CHAR_BYTES): Likewise.
	(PARSE_MULTIBYTE_SEQ) [BYTE_COMBINING_DEBUG]: Abort if we
	encounter an invalid multibyte sequence.
	(PARSE_MULTIBYTE_SEQ) [not BYTE_COMBINING_DEBUG]: Assume multibyte
	sequence is always valid.
	(MAKE_NON_ASCII_CHAR, SPLIT_NON_ASCII_CHAR): These macros Deleted.
	(UNIBYTE_STR_AS_MULTIBYTE_P, MULTIBYTE_STR_AS_UNIBYTE_P): New
	macros.
	(CHAR_STRING): For 8-bit characters, call char_to_string.
	(INC_POS) [not BYTE_COMBINING_DEBUG]: Faster version.  Assume
	multibyte sequence is always valid.
	(BUF_INC_POS) [not BYTE_COMBINING_DEBUG]: Likewise.
	(parse_str_as_multibyte, str_as_multibyte, str_to_multibyte,
	str_as_unibyte): Extern them.
	(BCOPY_SHORT): Fix a bug.
	(CHAR_LEN): This macro deleted.  Callers changed to use
	CHAR_BYTES.
	(FETCH_STRING_CHAR_ADVANCE): Check multibyteness of STRING.
	(FETCH_STRING_CHAR_ADVANCE_NO_CHECK): New macro.
	(FETCH_CHAR_ADVANCE): Check multibyteness of the current buffer.

	* coding.c (ONE_MORE_BYTE, TWO_MORE_BYTES): Set coding->result to
	CODING_FINISH_INSUFFICIENT_SRC if there's not enough source.
	(ONE_MORE_CHAR, EMIT_CHAR, EMIT_ONE_BYTE, EMIT_TWO_BYTE,
	EMIT_BYTES): New macros.
	(THREE_MORE_BYTES, DECODE_CHARACTER_ASCII,
	DECODE_CHARACTER_DIMENSION1, DECODE_CHARACTER_DIMENSION2): These
	macros deleted.
	(CHECK_CODE_RANGE_A0_FF): This macro deleted.
	(detect_coding_emacs_mule): Use UNIBYTE_STR_AS_MULTIBYTE_P to
	check the validity of multibyte sequence.
	(decode_coding_emacs_mule): New function.
	(encode_coding_emacs_mule): New macro.
	(detect_coding_iso2022): Use ONE_MORE_BYTE to fetch a byte from
	the source.
	(DECODE_ISO_CHARACTER): Just return a character code.
	(DECODE_COMPOSITION_START): Set coding->result instead of result.
	(decode_coding_iso2022, decode_coding_sjis_big5, decode_eol): Use
	EMIT_CHAR to produced decoded characters.  Exit the loop only by
	macros ONE_MORE_BYTE or EMIT_CHAR.  Don't handle the case of last
	block here.
	(ENCODE_ISO_CHARACTER): Don't translate character here.  Produce
	only position codes for an invalid character.
	(encode_designation_at_bol): Return new destination pointer.  5th
	arg DSTP is changed to DST.
	(encode_coding_iso2022, decode_coding_sjis_big5): Get a character
	from the source by ONE_MORE_CHAR.  Don't handle the case of last
	block here.
	(DECODE_SJIS_BIG5_CHARACTER, ENCODE_SJIS_BIG5_CHARACTER): These
	macros deleted.
	(detect_coding_sjis, detect_coding_big5, detect_coding_utf_8,
	detect_coding_utf_16, detect_coding_ccl): Use ONE_MORE_BYTE and
	TWO_MORE_BYTES to fetch a byte from the source.
	(encode_eol): Pay attention to coding->src_multibyte.
	(detect_coding, detect_eol): Preserve members src_multibyte and
	dst_multibyte.
	(DECODING_BUFFER_MAG): Return 2 even for coding_type_raw_text.
	(encoding_buffer_size): Set magnification to 3 for all coding
	systems that require encoding.
	(ccl_coding_driver): For decoding, be sure that the result is
	valid multibyte sequence.
	(decode_coding): Initialize coding->errors and coding->result.
	For emacs-mule, call decode_coding_emacs_mule.  For no-conversion
	and raw-text, always call decode_eol.  Handle the case of last
	block here.  If not coding->dst_multibyte, convert the resulting
	sequence to unibyte.
	(encode_coding): Initialize coding->errors and coding->result.
	For emacs-mule, call encode_coding_emacs_mule.  For no-conversion
	and raw-text, always call encode_eol.  Handle the case of last
	block here.
	(shrink_decoding_region, shrink_encoding_region): Detect cases
	that we can't skip data more rigidly.
	(code_convert_region): Setup src_multibyte and dst_multibyte
	members of coding.  For decoding, if the buffer is multibyte,
	convert the source sequence to unibyte in advance.  For encoding,
	if the buffer is multibyte, convert the resulting sequence to
	multibyte afterward.
	(run_pre_post_conversion_on_str): New function.
	(code_convert_string): Deleted and divided into the following two.
	(decode_coding_string, encode_coding_string): New functions.
	(code_convert_string1, code_convert_string_norecord): Call one of
	above.
	(Fdecode_sjis_char, Fdecode_big5_char): Use MAKE_CHAR instead of
	MAKE_NON_ASCII_CHAR.
	(Fset_terminal_coding_system_internal,
	Fset_safe_terminal_coding_system_internal): Setup src_multibyte
	and dst_multibyte members.
	(init_coding_once): Initialize iso_code_class with new enum
	ISO_control_0 and ISO_control_1.

	* coding.h (enum iso_code_class_type): Member ISO_control_code is
	devided into ISO_control_0 and ISO_control_1.
	(struct coding_system): New members src_multibyte, dst_multibyte,
	errors, and result.  Delete member fake_multibyte.
	(CODING_REQUIRE_DECODING): Return 1 if coding->dst_multibyte is
	nonzero.
	(CODING_REQUIRE_ENCODING): Return 1 if coding->src_multibyte is
	nonzero.

	* data.c (Faref): Use SPLIT_CHAR instead of SPLIT_NON_ASCII_CHAR.
	(Faset): Likewise.

	* editfns.c (Fformat): Be sure to convert 8-bit characters to
	multibyte form.
	(Ftranspose_region) [BYTE_COMBINING_DEBUG]: Abort if byte
	combining occurs.
	(Ftranspose_region): Delete codes for handling byte combining.

	* fileio.c (Finsert_file_contents): Setup src_multibyte and
	dst_multibyte members of coding.  On handling REPLACE on unibyte
	buffer, convert the result of decode_coding to unibyte.  On
	inserting into a mutibyte buffer, always call code_convert_region.
	(e_write): Setup coding->src_multibyte according to the
	multibyteness of the source (buffer or string).

	* fns.c (concat): Handle 8-bit characters correctly.
	(Fstring_as_unibyte): Be sure to make all 8-bit characters in
	unibyte in the result.
	(Fstring_as_multibyte): Be sure to make all 8-bit characters in
	valid multibyte form in the result.
	(map_char_table): Use MAKE_CHAR instead of MAKE_NON_ASCII_CHAR.
	(Fbase64_encode_region, Fbase64_encode_string): If base64_encode_1
	return -1, signal an error.
	(base64_encode_1): New arg MULTIBYTE.  Get each character by
	CHAR_STRING_AND_LENGTH if MULTIBYTE is nonzero.  If a multibyte
	character is found, return -1.
	(Fbase64_decode_region): Delete codes for handling byte-combining.
	Treat each decoded byte as a unibyte character.
	(Fbase64_decode_string): Return unibyte string.
	(Fcompare_strings, concat, string_byte_to_char): Use
	FETCH_STRING_CHAR_ADVANCE_NO_CHECK instead off
	FETCH_STRING_CHAR_ADVANCE.
	(Fstring_lessp): Use FETCH_STRING_CHAR_ADVANCE unconditionally.
	(mapcar1): If SEQ is string, always use FETCH_STRING_CHAR_ADVANCE.

	* fontset.c (fontset_ref): Use SPLIT_CHAR instead of
	SPLIT_NON_ASCII_CHAR.
	(fontset_ref_via_base, fontset_set): Likewise

	* insdel.c (adjust_markers_for_record_delete): Deleted.
	(adjust_markers_for_insert): Argument changed.  Caller changed.
	(adjust_markers_for_replace): Likewise.
	(ADJUST_CHAR_POS, combine_bytes, byte_combining_error,
	CHECK_BYTE_COMBINING_FOR_INSERT): Deleted.
	(copy_text): Delete unused local varialbe c_save.  For converting
	to multibyte, be sure to make all 8-bit characters in valid
	multibyte form.
	(count_size_as_multibyte): Handle 8-bit characters correctly.
	(insert_1_both, insert_from_string_1, insert_from_buffer_1,
	adjust_after_replace, replace_range, del_range_2)
	[BYTE_COMBINING_DEBUG]: Abort if byte combining occurs.
	(insert_1_both, insert_from_string_1, insert_from_buffer_1,
	adjust_after_replace, replace_range, del_range_2) Delete codes for
	handling byte combining.
	(adjust_before_replace): Deleted.

	* keymap.c (Fsingle_key_description): Use SPLIT_CHAR instead of
	SPLIT_NON_ASCII_CHAR.
	(describe_vector): Use MAKE_CHAR instead of MAKE_NON_ASCII_CHAR.
	(Faccessible_keymaps): Use FETCH_STRING_CHAR_ADVANCE
	unconditionally.
	(Fkey_description): Likewise.

	* lread.c (read1): On reading multibyte string, be sure to make
	all 8-bit chararacters in valid multibyte form.
	(readchar): Use FETCH_STRING_CHAR_ADVANCE unconditionally.

	* print.c (print_object): Use FETCH_STRING_CHAR_ADVANCE
	unconditionally.

	* process.c (Fstart_process): GCPRO current_dir before calling
	Ffind_operation_coding_system.  Encode arguments here.
	(create_process): Don't encode arguments here.  Setup
	src_multibyte and dst_multibyte members of struct coding.
	(read_process_output): Setup src_multibyte and dst_multibyte
	members of struct coding.  If the output is to multibyte buffer,
	always decode the output of the process.  Adjust the
	representation of 8-bit characters to the multibyteness of the
	output.
	(send_process): Setup coding->src_multibyte according to the
	multibyteness of the source.

	* search.c (wordify): Use FETCH_STRING_CHAR_ADVANCE
	unconditionally.
	(Freplace_match): Use FETCH_STRING_CHAR_ADVANCE and
	FETCH_STRING_CHAR_ADVANCE_NO_CHECK appropriately.

	* term.c (produce_special_glyphs): Use CHAR_BYTES instead of
	CHAR_LEN.

	* w16select.c (Fw16_set_clipboard_data): Setup members
	src_multibyte and dst_multibyte of coding.  Adjusted for the
	change for find_charset_in_str.
	(Fw16_get_clipboard_data): Likewise.

	* w32fns.c (w32_to_x_font): Setup members src_multibyte and
	dst_multibyte of coding.
	(x_to_w32_font): Likewise.

	* w32select.c (Fw32_set_clipboard_data): Setup members
	src_multibyte and dst_multibyte of coding.  Adjusted for the
	change for find_charset_in_str.
	(Fw32_get_clipboard_data): Likewise.

	* xdisp.c (get_next_display_element): Handle 8-bit characters
	correctly.
	(next_element_from_display_vector): Use CHAR_BYTES instead of
	CHAR_LEN.
	(disp_char_vector): Use SPLIT_CHAR instead of
	SPLIT_NON_ASCII_CHAR.

	* xselect.c (selection_data_to_lisp_data): Setup members
	src_multibyte and dst_multibyte of coding.  Adjusted for the
	change for find_charset_in_str.
	(lisp_data_to_selection_data): Likewise.

2000-05-19  Gerd Moellmann  <gerd@gnu.org>

	* buffer.c (Fbury_buffer): Avoid trouble from burying a killed
	buffer.

	* dispextern.h (Vimage_types): Add extern declaration.

	* xdisp.c (Vimage_types): Moved here from xfns.c.
	(syms_of_xdisp): Move `image-types' variable here from xfns.c.

	* xfns.c (Vimages_types): Moved to xdisp.c.
	(syms_of_xfns): Move `image-types' to xdisp.c.

	* w32fns.c (Vimage_types): Removed.
	(syms_of_w32fns): Remove `image-types'.

2000-05-18  Kenichi Handa  <handa@etl.go.jp>

	* fns.c (map_char_table): Pay attention to character number of
	charset.  Check the validity of charset at the first level.   For
	leaf nodes that has nil value, call C_FUNCTION or FUNCTION with
	the default value.

	* fontset.c: Include "buffer.h".
	(fs_load_font): If the face has fontset, record the face ID in
	that fontset.
	(Finternal_char_font): New function.
	(accumulate_font_info): New function.
	(Ffontset_info): Rewritten for the new fontset implementation.
	(syms_of_fontset): Register Vdefault_fontset in the first element
	of Vfontset_table.  Include Vdefault_fontset in
	Vfontset_alias_alist.  Declare `internal-char-font' as a Lisp
	function.

2000-05-16  Dave Love  <fx@gnu.org>

	* m/iris5d.h: Deleted -- unused.

2000-05-16  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c, w32.c, print.c, msdos.c, emacs.c: Use the term
	`invalid' instead of `illegal'.

	* indent.c (Fmove_to_column): When ending within a tab, insert
	spaces first so that markers at the end of the tab get adjusted.

	* frame.c (frames_bury_buffer): Don't add a buffer to the frame's
	buffer list that wasn't selected in that frame.

	* filelock.c (get_boot_time): To obtain an 8 char file name, which
	is needed on mescaline, use a 2 char prefix, and call
	make_temp_name with second arg non-zero.

	* fileio.c (make_temp_name): New function, extracted from
	Fmake_temp_name.
	(Fmake_temp_name): Use it.

2000-05-15  Eli Zaretskii  <eliz@is.elta.co.il>

	* window.c (coordinates_in_window): Subtract 1 when computing
	right_x.

2000-05-15  Gerd Moellmann  <gerd@gnu.org>

	* Makefile.in (lisp): Add env.elc.

	* callproc.c (Fgetenv_internal): Renamed from Fgetenv.

2000-05-12  Gerd Moellmann  <gerd@gnu.org>

	* search.c (Freplace_match): Handle case of `\N' in the
	replacement when there's no group N.

2000-05-11  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (add_to_log): Don't pass the terminating NUL byte
	of the message to message_dolog.

	* keyboard.c (read_char): Don't clear current message for help
	events; let the code handling help events handle this.  Change
	code detecting help events that should be ignored.

	* xdisp.c (handle_single_display_prop): Don't try to set PT if
	we're interating over a string.

2000-05-09  Dave Love  <fx@gnu.org>

	* fileio.c (Fwrite_region): If APPEND arg is an integer, seek to
	that offset before writing.  Move gcpro region past call of
	Ffile_regular_p.

2000-05-04  Dave Love  <fx@gnu.org>

	* buffer.c (syms_of_buffer) [auto-fill-function]: Doc fix.

2000-05-04  Gerd Moellmann  <gerd@gnu.org>

	* insdel.c (insert_from_buffer_1): Adjust FROM position by number
	of inserted characters when BUF equals the current buffer, and PT
	is in front of or equal to FROM.

2000-05-03  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (handle_single_display_prop): If display property value
	is invalid, or something not supported on the frame, restore
	iterator's position to what it was initially.  Make sure to return
	0 for invalid and unsupported property values.

	* xterm.c (x_produce_glyphs) <composite chars>: Handle case
	that x_per_char_metric returns null.

2000-05-02  Gerd Moellmann  <gerd@gnu.org>

	* xterm.h (struct face): Add forward declaration.
	(struct image): Ditto.
	(image_ascent): Add prototype.

	* xterm.c (x_produce_image_glyph, x_draw_image_foreground)
	(x_draw_image_relief, x_draw_image_foreground_1): Call function
	image_ascent instead of using IMAGE_ASCENT.

	* dispextern.h (DEFAULT_IMAGE_HEIGHT): New macro.
	(IMAGE_ASCENT): Removed.

	* xfns.c (Qcenter): New variable.
	(enum image_value_type): Add IMAGE_ASCENT_VALUE.
	(parse_image_spec): Handle IMAGE_ASCENT_VALUE.
	(image_ascent): New function.
	(lookup_image): Recognize `:ascent center'.
	(xbm_format, xpm_format, pbm_format, png_format, jpeg_format)
	(tiff_format, gif_format, gs_format): Use IMAGE_ASCENT_VALUE.
	(xbm_load): Don't set image's ascent here.
	(xbm_image_p, xpm_image_p, pbm_image_p, png_image_p)
	(jpeg_image_p, tiff_image_p, gif_image_p, gs_image_p): Don't
	check ascent values here.
	(Fimagep, Flookup_image [GLYPH_DEBUG]: Removed.
	(syms_of_xfns) [GLYPH_DEBUG]: Don't defsubr removed functions.
	(syms_of_xfns): Initialize Qcenter.

	* eval.c (Fsignal): If lisp_eval_depth or spepdl_size are near
	to the limits, increase the limits.

2000-05-01  Kenichi Handa  <handa@etl.go.jp>

	* fontset.c (fs_load_font): By default, use 0x00..0x7f for ASCII.
	Check Vfont_encoding_alist against the full name of the opened
	font.

2000-04-28  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (make_cursor_line_fully_visible): Handle case of rows
	taller than the window.

2000-04-28  Kenichi Handa  <handa@etl.go.jp>

	* xfaces.c (realize_x_face): Fix the argument of the second
	xassert.  BASE_FACE may not be a face for ASCII.

2000-04-27  Gerd Moellmann  <gerd@gnu.org>

	* print.c (print_object): Treat print-length < 0 as nil.

	* Makefile.in (termcapobj): Don't use TERMCAP_OBJ.

	* s/freebsd.h (TERMCAP_OBJ): Removed.
	(LIBS_TERMCAP): Don't define for __FreeBSD_version >= 400000.

	* lread.c (read1): Don't treat period followed by certain
	characters as symbol start.

	* xfns.c (slurp_file): New function.
	(xbm_image_p): Handle case of in-memory XBM files.
	(xbm_scan): Rewritten to work on memory buffers instead of files.
	(xbm_read_bitmap_data): Renamed from xbm_read_bitmap_file_data.
	Work on memory buffers instead of files.  If DATA is null test
	if buffer looks like an in-memory XBM file.
	(xbm_load_image): Renamed from xbm_load_image_file.  Work on
	memory buffers instead of files.
	(xbm_file_p): New function.
	(xbm_load): Accept :data DATA where DATA is an in-memory XBM file.

	* lread.c (end_of_file_error): New function.
	(read1): Call it instead of signaling `end-of-file' directly.

	* print.c (print_error_message): Print data of `end-of-file'
	with Fprinc instead of Fprin1.

2000-04-26  Ken Raeburn  <raeburn@gnu.org>

	* window.c (freeze_window_start): Check that minibuffer scroll
	window isn't nil before extracting the window structure pointer
	from it.

	* undo.c (record_delete): If we hit the end of the undo list, stop
	picking elements apart.

2000-04-26  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (display_line): If lines are continued, restore
	iterator's ascent/descent information to the values before the
	first glyph not fitting on the line.

2000-04-25  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (try_window_id) <all changes above window start>: Adjust
	positions in glyph matrix.  Don't compute new window end
	positions.

	* dispnew.c (increment_matrix_positions): Renamed from
	increment_glyph_matrix_buffer_positions.
	(increment_row_positions): Renamed from
	increment_glyph_row_buffer_positions.

	* dispextern.h: Change names of renamed functions from dispnew.c
	in prototypes.

2000-04-24  Gerd Moellmann  <gerd@gnu.org>

	* fileio.c (Fdo_auto_save): Create directories for auto-save
	list file if necessary.

	* xdisp.c (init_iterator): Set iterator's extra_line_spacing
	from buffer or frame.
	(automatic_hscrolling_p): New variable.
	(hscroll_windows): Scroll windows horizontally only if automatic
	hscrolling is allowed.
	(syms_of_xdisp): New variable `automatic-hscrolling'.

	* frame.h (struct frame): Add member extra_line_spacing.

	* xfns.c (x_set_line_spacing): New function.
	(Fx_create_frame): Set line spacing from resources.
	(Qline_spacing): New variable.
	(syms_of_xfns): Initialize Qline_spacing.

	* emacs.c (USAGE2): Add `--line-spacing' and `-lsp'.

	* buffer.c (init_buffer_once): Handle extra_line_spacing.
	(syms_of_buffer): Add `default-line-spacing' and `line-spacing'.
	(reset_buffer): Don't initialize extra2 and extra3.  Initialize
	extra_line_spacing from default value.
	(init_buffer_once): Initialize default value of extra_line_spacing.

	* buffer.h (struct buffer): Add extra_line_spacing, remove extra2
	and extra3.

	* xterm.c (x_produce_glyphs): Remove reference to struct it's
	prompt_width.  Add extra line spacing.

	* term.c (produce_glyphs): Remove reference to struct it's
	prompt_width.

	* dispextern.h (struct it): Remove member prompt_width, add
	extra_line_spacing.

2000-04-22  Gerd Moellmann  <gerd@gnu.org>

	* dispnew.c (update_frame_line): When writing a whole line, make
	sure cursor is in the right row afterwards, otherwise a use of
	capability `ch' in cmgoto might leave the cursor in the row below.

2000-04-21  Gerd Moellmann  <gerd@gnu.org>

	* lisp.h (struct Lisp_Buffer_Cons): Remove.

	* keyboard.c (timer_check): Fix typo in comment.

2000-04-21  Kenichi Handa  <handa@etl.go.jp>

	* fontset.c (Fset_fontset_font): Fix docstring.  Local variable
	name change: ch -> character.

2000-04-20  Gerd Moellmann  <gerd@gnu.org>

	* keyboard.c (echo_message_buffer): New variable.
	(echo_now): Set echo_message_buffer to the echo area buffer used
	to display the echo.
	(cancel_echoing): Reset echo_message_buffer to nil.
	(read_char): Code rewritten that handles canceling an echo or
	echoing a dash, respectively.

	* fileio.c (Ffile_writable_p) [WINDOWSNT]: Return nil if parent
	directory doesn't exist.

2000-04-19  Dave Love  <fx@gnu.org>

	* fns.c (syms_of_fns): Defsubr mapc.
	(concat): Don't allow numeric args.
	(Fconcat): Doc change.

2000-04-19  Stefan Monnier  <monnier@cs.yale.edu>

	* regex.c (re_match_2_internal): Don't shorten the strings anymore,
	instead define end_match(1|2) more carefully.
	Use GET_CHAR_BEFORE_2 for `begline'.

2000-04-19  Gerd Moellmann  <gerd@gnu.org>

	* frame.h (SELECTED_FRAME): Change definition to compile cleanly
	on 64-bit systems where NULL is defined as `0'.

	* xdisp.c (with_echo_area_buffer): Add more `int' parameters for
	the `variable argument list' to make it work on Alpha.

	* m/alpha.h (_LP64) [!_LP64]: Define.
	(ORDINARY_LINK): Define for NetBSD.

	* m/macppc.h (ORDINARY_LINK): Define for NetBSD.

2000-04-19  Dave Love  <fx@gnu.org>

	* s/bsd386.h, s/freebsd.h, s/gnu.h, s/netbsd.h: Revert 2000-04-14
	change.

	* Makefile.in (LIBS): Don't use.
	(GETLOADAVG_OBJ): Define again.
	(otherobj): Add GETLOADAVG_OBJ.

	* buffer.c (Fmake_indirect_buffer): Escape newline in doc.

2000-04-18  Gerd Moellmann  <gerd@gnu.org>

	* lread.c (read_filtered_event): Cancel and start busy cursor.

	* xterm.c (x_produce_glyphs) <ASCII chars>: Take into account
	that the per-character metrics may be null.

2000-04-17  Gerd Moellmann  <gerd@gnu.org>

	* buffer.c (clone_per_buffer_values): New function.
	(Fmake_indirect_buffer): Add optional argument CLONE.  Call
	clone_per_buffer_values if CLONE is not nil.

	* xfaces.c (Ftty_suppress_bold_inverse_default_colors): Doc fix.

2000-04-16  Dave Love  <fx@gnu.org>

	* Makefile.in: Remove obsolete localcpp stuff.
	(GETLOADAVG_OBJ): Don't define.
	(obj): Move LIBOBJS...
	(otherobj): ... to here.
	(MSDOS_OBJ): Convert to make variable -- preprocessing zapped
	whitespace-only lines after the continuation (Irix).

2000-04-14  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c (xpm_load) [DEBUG_X_COLORS]: Register colors.

	* s/freebsd.h (LD_SWITCH_SYSTEM): Add `-L /usr/local/lib'.

2000-04-14  Dave Love  <fx@gnu.org>

	* s/aix3-1.h, s/bsd4-2.h, s/bsd4-3.h, s/cxux.h, s/dgux.h, s/gnu.h:
	* s/hpux.h, s/iris3-5.h, s/iris3-6.h, s/irix3-3.h, s/rtu.h:
	* s/unipl5-0.h, s/unipl5-2.h, s/usg5-0.h, s/usg5-2-2.h, s/usg5-2.h:
	* s/usg5-3.h, s/xenix.h, s/umax.h: Don't define autoconfiscated
	NLIST_STRUCT.

	* s/bsd386.h, s/freebsd.h, s/gnu.h, s/netbsd.h: Don't define
	autoconfiscated HAVE_GETLOADAVG.

	* s/nextstep.h, s/sco4.h, s/sco5.h: Don't define autoconfiscated
	BROKEN_MKTIME.

2000-04-14  Gerd Moellmann  <gerd@gnu.org>

	* filelock.c (MAKE_LOCK_NAME): Allocate 2 more bytes.
	(fill_in_lock_file_name): Avoid existing files that aren't
	links.

2000-04-14  Dave Love  <fx@gnu.org>

	* Makefile.in (LIBS, LIBOBJS): New variable.
	(INTERVAL_SRC): Convert to make variable.
	(INTERVAL_OBJ, MKTIME_OBJ, FLOAT_SUPPORT, FACE_SUPPORT)
	(HAVE_X_WINDOWS, OBJECTS_SYSTEM): Remove.
	(obj): Substitute INTERVAL_OBJ, add MKTIME_OBJ, GETLOADAVG_OBJ and
	add LIBOBJS.
	(SOME_MACHINE_OBJECTS): Remove interval stuff.
	(lisp): Substitute FACE_SUPPORT, FLOAT_SUP.
	(shortlisp): Add facemenu, float-sup, frame.
	(SOME_MACHINE_LISP): Remove them from here.
	(LIBES): Change unused LDLIBS to autoconf LIBS.

	* config.in: Add BROKEN_MKTIME, NLIST_STRUCT, NLIST_NAME_UNION.

2000-04-14  Kenichi Handa  <handa@etl.go.jp>

	* composite.c (update_compositions): If FROM and TO are not in a
	valid range, do nothing.

2000-04-13  Gerd Moellmann  <gerd@gnu.org>

	* tparam.c (tparam1): Abort when encountering an unknown
	`%'-specifier.

	* s/freebsd.h (TERMCAP_OBJ) [__FreeBSD__ >= 4]: Define as
	terminfo.o.

	* Makefile.in (termcapobj) [LIBS_TERMCAP && TERMCAP_OBJ]: Define
	as TERMCAP_OBJ.

2000-04-13  Eli Zaretskii  <eliz@is.elta.co.il>

	* fileio.c (a_write): Remove redundant semi-colons.
	(e_write): Return -1 if failed to write all the data.
	This fixes the changes made at 1999-12-15.

2000-04-12  Dave Love  <fx@gnu.org>

	* fns.c (mapcar1): Test for null vals to support mapc.
	(Fmapc): New function.

2000-04-12  Eli Zaretskii  <eliz@is.elta.co.il>

	* msdos.c (NUM_MOUSE_BUTTONS): Define.
	(IT_frame_up_to_date): Support the buffer local value of
	cursor-type, if defined.

2000-04-10  Dave Love  <fx@gnu.org>

	* editfns.c (preceding-char, following-char): Doc fix.

2000-04-10  Ken Raeburn  <raeburn@gnu.org>

	* Makefile.in (temacs): Revert 2000-03-12 change.

2000-04-10  Jason Rumney  <jasonr@gnu.org>

	* xfaces.c (realize_face): Change FRAME_X_P to FRAME_WINDOW_P.

2000-04-10  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (setup_echo_area_for_printing): Choose an echo
	area buffer, if it's not set up yet.

	* indent.c (compute_motion): Set immediate_quit.

2000-04-09  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (tty_suppress_bold_inverse_default_colors_p): New
	variable.
	(realize_tty_face): Suppress boldness if colors are the inverse of
	the default colors, and tty_suppress_bold_inverse_default_colors_p
	is set.
	(Ftty_suppress_bold_inverse_default_colors): New function.
	(syms_of_xfaces): Defsubr it.

	* buffer.c (Frestore_buffer_modified_p): New function.
	(syms_of_buffer): Defsubr it.

2000-04-08  Ken Raeburn  <raeburn@gnu.org>

	* charset.c (Fmake_char_internal): CHAR_COMPONENTS_VALID_P takes a
	charset id (int) argument, not a charset (Lisp_Object).

	* coding.h (code_convert_string): Declare.
	* coding.c (code_convert_string_norecord): Pass an int, not a lisp
	object, as the fourth argument to code_convert_string.

	* fontset.c (make_fontset_for_ascii_face): Use XINT on return
	value.
	(Fset_fontset_font): Use EQ to compare lisp objects.

2000-04-05  Ken Raeburn  <raeburn@gnu.org>

	* intervals.h (SET_INTERVAL_PARENT): Use INT_LISPLIKE to test for
	a pointer that looks like a lisp object.
	(SET_INTERVAL_OBJECT): Don't explicitly compare the object with
	zero, instead see whether it's an integer object, since they can't
	have intervals.
	(GET_INTERVAL_OBJECT): Simply assign to the destination.

	* dispnew.c (allocate_matrices_for_frame_redisplay,
	direct_output_forward_char): Use X(U)INT and make_number as needed
	to convert between (unsigned) int values and lisp integers.
	* keyboard.c (read_key_sequence): Likewise.
	* lread.c (substitute_object_recurse): Likewise.
	* fns.c (concat, hash_lookup, hash_remove): Likewise.
	* minibuf.c (do_completion, Fminibuffer_complete_word,
	Fminibuffer_completion_help): Likewise.
	* term.c (produce_special_glyphs): Likewise.

	* fileio.c (Fwrite_region): Use EQ when comparing lisp objects.
	* print.c (print_preprocess, print_object): Likewise.

	* search.c (compile_pattern): Use NILP when checking for nil.

	* lisp.h (make_number) [!NO_UNION_TYPE && __GNUC__ >= 2 &&
	__OPTIMIZE__]: Provide a GNU C macro version that handles
	lisp-object unions.
	(XSET) [!NO_UNION_TYPE]: Set the value field first, then the type
	field, to better cope with ENABLE_CHECKING and calls that modify a
	Lisp_Object using its old value.

2000-04-04  Gerd Moellmann  <gerd@gnu.org>

	* window.c (compare_window_configurations): Signal an error
	if parameters C1 or C2 aren't window configurations.

	* bytecode.c (Fbyte_code): Add a bunch of BEFORE_POTENTIAL_GC/
	AFTER_POTENTIAL_GC calls around calls to functions that can
	signal an error and thus invoke the debugger.

2000-04-03  Gerd Moellmann  <gerd@gnu.org>

	* fns.c (Fbase64_decode_region, Fbase64_decode_string): Signal
	an error if decoding fails.

	* keyboard.c (lispy_mouse_names): Variable removed.
	(Vlispy_mouse_stem): New variable.
	(syms_of_keyboard): Initialize Vlispy_mouse_stem.
	(make_lispy_event) <mouse_click, scroll_bar_click>: Don't abort
	for any mouse button number.  Increase size of mouse_syms and
	button_down_location as needed.  Call modify_event_symbol with
	different arguments.
	(make_lispy_event) <scroll_bar_click> [USE_TOOLKIT_SCROLL_BARS]:
	Call modify_event_symbol with different arguments.
	(make_lispy_event) <w32_scroll_bar_click> [WINDOWSNT]: Don't abort
	for any button number.  Call modify_event_symbol with different
	arguments.
	(modify_event_symbol): Rename NAME_ALIST to NAME_ALIST_OR_STEM.
	Accept a string for NAME_ALIST_OR_STEM.

	* lisp.h (larger_vector): Add prototype.

	* fns.c (larger_vector): Make externally visible.

	* termhooks.h (NUM_MOUSE_BUTTONS): Removed.

2000-04-02  Stefan Monnier  <monnier@cs.yale.edu>

	* regex.c (PTR_TO_OFFSET) [!emacs]: Remove.
	(RE_MULTIBYTE_P, RE_STRING_CHAR_AND_LENGTH): New macros.
	(GET_CHAR_BEFORE_2): Moved from charset.h plus fixed minor bug when
	we are between str1 and str2.
	(MAX_MULTIBYTE_LENGTH, CHAR_STRING) [!emacs]: Provide trivial default.
	(PATFETCH): Use `TRANSLATE'.
	(PATFETCH_RAW): Fetch multibyte char if applicable.
	(PATUNFETCH): Remove.
	(regex_compile): Rely on PATFETCH to do most of the multibyte magic.
	When writing a char, write it directly into the pattern buffer rather
	than going needlessly through a temp char-array.
	(re_match_2_internal): Similarly, rely on RE_STRING_CHAR to do the
	multibyte magic and remove the useless `#ifdef emacs'.
	(bcmp_translate): Don't compare as multibyte chars when in a unibyte
	buffer.

	* regex.h (struct re_pattern_buffer): Make field `multibyte'
	conditional on `emacs'.

	* charset.h (GET_CHAR_BEFORE_2): Moved to regex.c.

2000-04-01  Ken Raeburn  <raeburn@gnu.org>

	* alloc.c (MARK_STRING, UNMARK_STRING, STRING_MARKED_P): Expand
	non-union-type versions of XMARK and friends here, because XMARK
	and friends won't work on an integer field if NO_UNION_TYPE is not
	defined.
	(make_number): Define as a function if it's not defined as a
	macro.

	* composite.c (run_composite_function): Use NILP when checking for
	nil.
	(syms_of_composite): Delete local var NARGS, pass an int as first
	argument to Fmake_hash_table.

	* editfns.c (text_property_stickiness): Use NILP to test
	Lisp_Object boolean value.
	(Fmessage_or_box): Don't use NILP to test int variable.
	(Fformat): Use a temporary variable to avoid ENABLE_CHECKING
	problems reading from and changing the same lisp value in an
	XSETSTRING call.

2000-04-01  Gerd Moellmann  <gerd@gnu.org>

	* term.c (TN_no_color_video): New variable.
	(term_init): Intitialize TN_no_color_video.
	(enum no_color_bit): New enumeration.
	(MAY_USE_WITH_COLORS_P): New macro.
	(turn_on_face): Use it to determine if attributes may be used
	combined with colors.

2000-04-01  Ken Raeburn  <raeburn@gnu.org>

	* window.c (CURBEG, CURSIZE): Don't overload lisp object lvalues
	with int lvalues via casts; instead, just yield lisp object
	lvalues.
	(enlarge_window): Variable sizep now points to Lisp_Object.  Use
	proper accessor macros.
	(shrink_window_lowest_first): w->top is Lisp_Object; use XINT.
	(grow_mini_window): Fix typo getting int value of root->height.

	* xdisp.c (compute_string_pos): Fix order of arguments to
	string_pos_nchars_ahead.
	(handle_fontified_prop, add_to_log): Pass int, not Lisp_Object, as
	count arg to variable-arg routines like Frun_hook_with_args and
	Fformat.
	(back_to_previous_visible_line_start)
	(build_desired_tool_bar_string): Pass Lisp_Object, not int, to
	fixed-arg routines like Fget_char_property and Fmake_string.
	(reconsider_clip_changes): Use XINT when comparing integer lisp
	objects, or passing them as int arguments.
	(mark_window_display_accurate, insert_left_trunc_glyphs)
	(append_space, extend_face_to_end_of_line): Use make_number when
	storing or passing integer values as lisp objects.
	(set_cursor_from_row, highlight_trailing_whitespace): Use
	INTEGERP, not implicit test against zero, for glyph object.
	(try_window_id): Don't use make_number when we want an int value.

	* xfaces.c (xlfd_symbolic_value): Make last argument a
	Lisp_Object, to be consistent with callers.
	(Fbitmap_spec_p): Use XINT to get numeric value of height.
	(lface_hash): Apply XFASTINT to lisp values before folding in.

	* xfns.c (Fx_show_tip): Use make_number to get lisp objects to
	fill in window width and height.  Pass an int, not a lisp object,
	as first arg to Finsert.

2000-04-01  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (realize_basic_faces): Block input while realizing
	the faces.

	* keyboard.c (lispy_mouse_names): Add additional mouse names.

	* termhooks.h (NUM_MOUSE_BUTTONS): Increase to 15.

2000-03-31  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_produce_glyphs): When displaying unibyte text
	or ASCII, handle case that per-char metric is null.

2000-03-30  Ken Raeburn  <raeburn@gnu.org>

	* lisp.h (NO_UNION_TYPE) [ENABLE_CHECKING]: Undef.

	* lisp.h (XCONS, XSTRING, XSYMBOL, XFLOAT, XPROCESS, XWINDOW,
	XSUBR, XBUFFER): Verify correct object type before returning
	pointer, using eassert.
	* frame.h (XFRAME): Likewise.

	* buffer.c (Frename_buffer, Fset_buffer_multibyte,
	swap_out_buffer_local_variables, Fmove_overlay): Don't apply
	XSYMBOL, XBUFFER, etc, to values that may be nil or of the wrong
	type.
	* data.c (set_internal): Likewise.
	* dispextern.h (WINDOW_WANTS_MODELINE_P,
	WINDOW_WANTS_HEADER_LINE_P): Likewise.
	* fileio.c (auto_save_1): Likewise.
	* insdel.c (check_markers): Likewise.
	* marker.c (buf_charpos_to_bytepos, unchain_marker): Likewise.
	* undo.c (record_insert): Likewise.
	* vmsproc.c (child_sig): Likewise.
	* window.c (unshow_buffer, window_loop): Likewise.
	* xterm.c (x_erase_phys_cursor): Likewise.

2000-03-30  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c (free_image_cache): Free the cache structure itself
	last, after all its members have been freed.

	* lisp.h (xstrdup): Add prototype.

	* alloc.c (xstrdup): Moved here from xfaces.c.
	(allocating_for_lisp): Variable removed.
	(lisp_malloc): Block input around the calls to malloc and
	mem_insert.

	* xfaces.c (realize_tty_face): Use find_symbol_value instead
	of Fsymbol_value.
	(xstrdup): Moved to alloc.c.

2000-03-29  Ken Raeburn  <raeburn@gnu.org>

	* scroll.c (CHECK_BOUNDS): Renamed from CHECK.

	* emacs.c (main): Fix sense of no-loadup test.

	* config.in (ENABLE_CHECKING): Undef.

	* lisp.h (struct interval): Replace "parent" field with a union of
	interval pointer and Lisp_Object; add new bitfield to use as
	discriminant.  Change other flag fields to bitfields.
	(CHECK): New macro for consistency checking.  If ENABLE_CHECKING
	is defined and the supplied test fails, print a message and
	abort.
	(eassert): New macro.  Use CHECK to provide an assert-like
	facility.

	* intervals.h (NULL_INTERVAL_P): Now applies only to real interval
	pointers; abort if the value looks like a lisp object.
	(NULL_INTERVAL_P, NULL_PARENT, HAS_PARENT, HAS_OBJECT, SET_PARENT,
	SET_OBJECT, INTERVAL_PARENT, GET_INTERVAL_OBJECT, COPY_PARENT):
	Modify for new interval parent definition.

	* alloc.c (mark_interval_tree, MARK_INTERVAL_TREE,
	UNMARK_BALANCE_INTERVALS): Update references that need an
	addressable lisp object in the interval structure.
	(die): New function.
	(suppress_checking): New variable.

	* intervals.c (interval_start_pos): Just return 0 if there's no
	parent object.

2000-03-29  Gerd Moellmann  <gerd@gnu.org>

	* lread.c (read1): Accept `.' (period) as symbol start like in CL
	and earlier Emacs versions.

	* keyboard.c (Ftop_level): Cancel busy-cursor.

	* eval.c (call_debugger): Cancel busy-cursor.

2000-03-29  Kenichi Handa  <handa@etl.go.jp>

	* search.c (Freplace_match): Adjust multibyteness of the current
	buffer and NEWTEXT.  Free allocated memory before signaling an
	error.

2000-03-28  Stefan Monnier  <monnier@cs.yale.edu>

	* regex.c (analyse_first): New function obtained by ripping out most
	of re_compile_fastmap and generalizing it a little bit so that it
	can also just return whether a given (sub)pattern can match the empty
	string or not.
	(regex_compile): Use `analyse_first' to decide whether the loop-check
	needs to be done or not for *, +, *? and +? (the loop check is costly
	for non-greedy repetition).
	(re_compile_fastmap): Delegate the actual work to `analyse_first'.

2000-03-28  Dave Love  <fx@gnu.org>

	* s/gnu-linux.h (GC_SETJMP_WORKS): Define for i386, sparc, m68k,
	alpha.

	* alloc.c: Include stdio.h.  Test STDC_HEADERS, not __STDC__.

2000-03-27  Stefan Monnier  <monnier@cs.yale.edu>

	* regex.c (REGEX_FREE_STACK, RESET_FAIL_STACK): Make them usable as
	an expression.
	(enum re_opcode_t): Update description of succeed_n.
	(PATFETCH): Always define.
	(regex_compile): Use lookahead rather than PATUNFETCH (for repetition
	operators, char classes, shy-groups and intervals).
	Optimize special cases of intervals so as to only use succeed_n and
	jump_n when really needed.
	(re_compile_fastmap): Simplify handling of jump_n and succeed_n now
	that we don't have to handle the special cases any more.
	Simplify on_failure_jump handling as well.

2000-03-28  Jason Rumney  <jasonr@gnu.org>

	* lread.c (Fload): Move safe_p definition to above #ifdef DOS_NT.

2000-03-27  Gerd Moellmann  <gerd@gnu.org>

	* s/freebsd.h (GC_SETJMP_WORKS): Define.

	* s/msdos.h (GC_SETJMP_WORKS): Define.

	* alloc.c (mark_maybe_object): New function.
	(mark_memory): Use it.
	(SETJMP_WILL_LIKELY_WORK, SETJMP_WILL_NOT_WORK): New macros.
	(setjmp_tested_p, longjmp_done): New variables.
	(test_setjmp): New function.
	(mark_stack) [!GC_SETJMP_WORKS]: Call test_setjmp.
	(init_alloc): Initialize setjmp_tested_p and longjmp_done.

	* xdisp.c (face_before_or_after_it_pos): Pass multibyteness
	to DEC_TEXT_POS and INC_TEXT_POS.

	* dispnew.c (direct_output_for_insert): Use DEC_TEXT_POS
	with parameter MULTIBYTE_P.

	* dispextern.h (INC_TEXT_POS, DEC_TEXT_POS): Add parameter
	MULTIBYTE_P.

	* editfns.c (Fsubst_char_in_region): Don't use INC_POS in unibyte
	buffers because it looks for multibyte character byte sequences
	which don't exist in unibyte text.

	* xterm.h (x_specified_cursor_type, x_copy_color): Add prototypes.

	* xfaces.c (register_color, unregister_color, unregister_colors)
	[DEBUG_X_COLORS]: New functions.
	(x_free_colors) [DEBUG_X_COLORS]: Unregister colors.

	* xfns.c (x_set_cursor_color): Get color reference counts right.

	* xterm.c (x_copy_color): New function.
	(x_alloc_nearest_color) [DEBUG_X_COLORS]: Call register_color.

	* buffer.h (MAX_PER_BUFFER_VARS): Renamed from MAX_BUFFER_LOCAL_VARS.
	(PER_BUFFER_VAR_OFFSET): Renamed from BUFFER_LOCAL_VAR_OFFSET.
	(PER_BUFFER_VAR_IDX): Renamed from BUFFER_LOCAL_VAR_IDX.
	(PER_BUFFER_VALUE_P): Renamed from BUFFER_HAS_LOCAL_VALUE_P.
	(SET_PER_BUFFER_VALUE_P): Renamed from SET_BUFFER_HAS_LOCAL_VALUE_P.
	(PER_BUFFER_IDX): Renamed from BUFFER_LOCAL_IDX.
	(PER_BUFFER_DEFAULT): Renamed from BUFFER_LOCAL_DEFAULT_VALUE.
	(PER_BUFFER_VALUE): Renamed from BUFFER_LOCAL_VALUE.
	(PER_BUFFER_SYMBOL): Renamed from BUFFER_LOCAL_SYMBOL.
	(PER_BUFFER_TYPE): Renamed from BUFFER_LOCAL_TYPE.

	* category.c, data.c, syntax.c, print.c, lread.c: Use new macro
	names for handling per-buffer variables.

	* buffer.c (buffer_permanent_local_flags): Use MAX_PER_BUFFER_VARS
	instead of MAX_BUFFER_LOCAL_VARS.
	(last_per_buffer_idx): Renamed from max_buffer_local_idx.

	* xfaces.c (lookup_face): Don't assert FACE_SUITABLE_FOR_CHAR_P.

	* xfns.c (x_specified_cursor_type): New function.
	(x_set_cursor_type): Use it.

	* buffer.h (struct buffer): Add cursor_type.

2000-03-26  Stefan Monnier  <monnier@cs.yale.edu>

	* regex.c (enum re_opcode_t): New opcode on_failure_jump_nastyloop.
	(print_partial_compiled_pattern, re_compile_fastmap): Handle new
	opcode.
	(regex_compile): Use on_failure_jump_nastyloop for non-greedy loops.
	(re_match_2_internal): Add code for on_failure_jump_nastyloop when
	executing it as well as when popping it off the stack to find infinite
	loops in non-greedy repetition operators.

2000-03-26  Gerd Moellmann  <gerd@gnu.org>

	* doc.c (Qfunction_documentation): New variable.
	(syms_of_doc): Initialize Qfunction_documentation.
	(Fdocumentation): If FUNCTION is a symbol with non-nil
	`function-documentation' property, return a documentation derived
	from that.

	* buffer.c (syms_of_buffer): Add default-cursor-type.
	(init_buffer_once): Don't let cursor_type have a local value
	in every buffer.

	* xterm.c (x_display_and_set_cursor): Choose cursor depending
	on buffer-local value of cursor_type.
	(x_draw_bar_cursor): Add parameter WIDTH.

	* buffer.c (reset_buffer): Initialize buffer's cursor_type.
	(init_buffer_once): Set default cursor_type value to t.
	Mark cursor_type as local everywhere.
	(syms_of_buffer): New per-buffer variable cursor-type.

	* buffer.h (struct buffer): Remove member local_var_flags,
	add local_flags.
	(MAX_BUFFER_LOCAL_VARS): New macro.
	(BUFFER_LOCAL_VAR_OFFSET, BUFFER_LOCAL_VAR_IDX)
	(BUFFER_HAS_LOCAL_VALUE_P, SET_BUFFER_HAS_LOCAL_VALUE_P)
	(BUFFER_LOCAL_IDX, BUFFER_LOCAL_DEFAULT_VALUE, BUFFER_LOCAL_VALUE)
	(BUFFER_LOCAL_SYMBOL, BUFFER_LOCAL_TYPE): New macros.

	* print.c (print_object): Use new macros for per-buffer
	variables.

	* category.c (Fset_category_table): Use new macros for per-buffer
	variables.

	* buffer.c (buffer_permanent_local_flags): Make a char array.
	(max_buffer_local_idx): New variable.
	(reset_buffer_local_variables, Fbuffer_local_variables): Rewritten
	for new handling of per-buffer variables.
	(buffer_slot_type_mismatch): Use new macros for per-buffer vars.
	(init_buffer_once): Initialize per-buffer vars differently.
	Set max_buffer_local_idx.

	* syntax.c (Fset_syntax_table): Use new macros for per-buffer
	variables.

	* lread.c (defvar_per_buffer): Use new macros for per-buffer
	variables.

	* data.c (do_symval_forwarding, store_symval_forwarding)
	(find_symbol_value, set_internal, default_value, Fset_default)
	(Fkill_local_variable, Flocal_variable_p): Use new macros for
	per-buffer variables.

	* Makefile.in (bootstrap-emacs): Use `mv -f' instead of `mv'.

2000-03-24  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_term_init): Unblock input around call1 of
	Qvendor_specific_keysyms.

	* syntax.c (open_paren_in_column_0_is_defun_start): New variable.
	(find_defun_start): Consider an open parenthesis in column 0
	a defun start only if open_paren_in_column_0_is_defun_start is set.
	(syms_of_syntax): New variable open-paren-in-column-0-is-defun-start.

2000-03-24  Stefan Monnier  <monnier@cs.yale.edu>

	* eval.c (Fautoload): Add entry in load-history (if after dump).
	* lread.c (load-history): Update docstring.

2000-03-24  Gerd Moellmann  <gerd@gnu.org>

	* indent.c (Fvertical_motion): Always use the current buffer.
	Temporarily change the window's buffer, if necessary.

2000-03-23  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (fast_find_position): Make sure not to consider rows
	not visible in the window.

2000-03-22  Stefan Monnier  <monnier@cs.yale.edu>

	* regex.c (enum syntaxcode): Provide default for non-Emacs.
	(re_compile_fastmap, re_match_2_internal): Undo Dave's previous fix.

2000-03-22  Jason Rumney  <jasonr@gnu.org>

	* w32menu.c (single_submenu): Set help string to NULL if none.
	(w32_menu_show): Set help string correctly.
	(add-menu-item): Set help string in MIIM_DATA for menu item.
	Load SetMenuItemInfoA explicitly.
	(w32_menu_display_help): New function.

	* w32fns.c (w32_wnd_proc): Handle WM_MENUSELECT message.
	(QCdata): Moved to xdisp.c.

	* w32term.c (w32_read_socket): Handle WM_MENUSELECT message.
	(Vw32_charset_to_codepage_alist): Removed.
	(Vw32_charset_info_alist): New variable.
	(Qw32_charset_[ansi, default, symbol, shiftjis, hangul, gb2312,
	chinesebig5, oem, easteurope, turkish, baltic, russian, arabic,
	greek, hebrew, thai, johab, mac, unicode]): New symbols.
	(x_produce_glyphs): Remove out of date #ifdef 0'd section. Replace
	with TODO comment.
	(w32_codepage_for_font): Use Vw32_charset_info_alist.
	(syms_of_w32term): Remove Vw32_charset_to_codepage_alist.
	Define Vw32_charset_info_alist and w32_charset symbols.

2000-03-22  Jason Rumney  <jasonr@gnu.org>

	* makefile.nt (w32bdf.obj): Update dependencies.

	* w32bdf.c: Include frame.h and dispextern.h before fontset.h.

	* w32fns.c: Include fontset.h after dispextern.h.
	(Fx_create_frame): Do not create fontset.
	(w32_load_system_font): Doc fix.
	(Fx_close_connection): Free full_name if it is not shared.

	* w32term.c: Include fontset.h after dispextern.h.
	(x_get_glyph_face_and_encoding): New parameter two_byte_p. Callers
	updated.
	(w32_per_char_metric): If PCM is invalid, delete and return NULL.
	(x_get_char_and_face_encoding): Use FACE_FOR_CHAR to get face_id.
	(w32_font_is_double_byte): New function, needs body.
	(x_append_glyph): Set glyph->glyph_not_available_p.
	(x_produce_glyphs): Set it->glyph_not_available_p.  Don't set
	it->charset.  If it->multibyte_p is zero and it->c is a multibyte
	character, convert it to a unibyte character.
	(struct glyph_string): Delete member `charset'.
	(W32_TEXTOUT): Temporarily remove charset_dim until another way of
	calculating it is found.
	(x_set_mouse_face_gc): Call FACE_FOR_CHAR to get face_id.  Handle
	the case that per char metric is not available correctly.
	(x_fill_glyph_string): Handle the case that the specific glyph is
	not available correctly.
	(BUILD_CHAR_GLYPH_STRINGS): Don't set s->charset.
	(BUILD_COMPOSITE_GLYPH_STRING): Likewise.
	(x_new_font): Call FS_LOAD_FONT, not fs_load_font.
	(x_new_fontset): Call fontset_ascii to get ASCII font name of the
	fontset.  Don't call FS_LOAD_FONT.

2000-03-22  Ken Raeburn  <raeburn@gnu.org>

	* intervals.h (NULL_INTERVAL): Cast to INTERVAL type.
	(INT_LISPLIKE): New macro.
	(NULL_INTERVAL_P): Use it.
	(INTERVAL_HAS_PARENT, INTERVAL_HAS_OBJECT, SET_INTERVAL_PARENT,
	SET_INTERVAL_OBJECT, INTERVAL_PARENT, COPY_INTERVAL_PARENT,
	GET_INTERVAL_OBJECT, INTERVAL_PARENT_OR_NULL): New macros.

	* alloc.c (make_interval, gc_sweep): Use new macros; eliminate all
	explicit references to "parent" field of struct interval and
	associated unclean type conversions.
	* intervals.c (create_root_interval, root_interval, rotate_right,
	rotate_left, balance_possible_root_interval, split_interval_right,
	split_interval_left, interval_start_pos, find_interval,
	next_interval, previous_interval, update_interval,
	adjust_intervals_for_insertion, delete_node, delete_interval,
	adjust_intervals_for_deletion, merge_interval_right,
	merge_interval_left, reproduce_tree, graft_intervals_into_buffer,
	copy_intervals_to_string): Likewise.
	* intervals.h (AM_LEFT_CHILD, AM_RIGHT_CHILD, RESET_INTERVAL):
	Likewise.
	* syntax.c (update_syntax_table): Likewise.

	* intervals.c (reproduce_tree_obj): New function, like
	reproduce_tree but takes a Lisp_Object for the parent.  Declare
	with prototype.
	(graft_intervals_into_buffer): Use it when appropriate.
	(reproduce_tree): Declare with prototype.
	(balance_possible_root_interval): Check that the parent is a lisp
	object before trying to examine its type.

2000-03-22  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (lface_same_font_attributes_p): Compare font attributes
	as strings only if both are known to be strings.

	* s/openbsd.h (LIBS_TERMCAP): Undef.

2000-03-21  Stefan Monnier  <monnier@cs.yale.edu>

	* regex.c (CHAR_CHARSET, CHARSET_LEADING_CODE_BASE): Add default
	definitions for non-Emacs compilation.
	(enum re_opcode_t): Remove (not)wordchar and move (not)syntaxspec
	outside of `#ifdef emacs'.
	(print_partial_compiled_pattern): Update.
	(regex_compile): Use (not)syntaxspec(Sword) instead of (not)wordchar.
	(re_compile_fastmap): Merge handling of charset and charset_not (for
	emacs and non-emacs compilation as well).
	Similarly for (not)categoryspec and (not)syntaxspec.
	Don't use the fastmap when reaching `anychar' since the added
	complexity is not justified.
	(re_match_2_internal): Merge (not)wordchar (emacs and non-emacs)
	and (not)syntaxspec.  Merge (not)categoryspec.

2000-03-22  Kenichi Handa  <handa@etl.go.jp>

	* dispextern.h [!HAVE_WINDOW_SYSTEM] (FACE_SUITABLE_FOR_CHAR_P,
	FACE_FOR_CHAR): Define them differently for the configuration of
	--without-x.

2000-03-21  Dave Love  <fx@gnu.org>

	* fontset.c (Fset_fontset_font, Ffontset_font): Fix newlines in
	doc string.

2000-03-21  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (check_lface_attrs) [GLYPH_DEBUG]: Fix syntax error.
	(lface_fully_specified_p): Don't check contents of
	LFACE_FONT_INDEX because that attribute is optional.
	(realize_x_face): Remove now unwarranted xassert.

2000-03-21  Kenichi HANDA  <handa@etl.go.jp>

	The following changes are to make font selection based on
	characters, not charset.  In addition, they recover fontset
	facilities while utilizing the new font selection mechanism.

	* Makefile.in (fontset.o): Depend on dispextern.h.

	* alloc.c (mark_face_cache): Don't mark face->registry.

	* dispextern.h (struct glyph): New member glyph_not_available_p.
	Use 22 bits for face_id.
	(enum lface_attribute_index): Add LFACE_FONT_INDEX.
	(struct face): Delete member registry, new member ascii_face.
	(FACE_SUITABLE_FOR_CHAR_P): Renamed from
	FACE_SUITABLE_FOR_CHARSET_P.  Caller changed.
	(FACE_FOR_CHAR): Renamed from FACE_FOR_CHARSET.  Caller changed.
	(struct it): Delete member charset, new member
	glyph_not_available_p.

	* fontset.h (FONT_NOT_OPENED, FONT_NOT_FOUND): Macros removed.
	(struct fontset_info, struct fontset_data): Structs removed.
	(allloc_fontset_data, free_fontset_data, fs_regiser_fontset,
	Vglobale_fontset_alist, font_idx_temp): Externs removed.
	(fs_load_font, fs_query_fontset): Adjusted for new argument.
	(fs_free_face_fontset, fontset_font_pattern,
	face_suitable_for_char_p, face_for_char,
	make_fontset_for_ascii_face): Extern them.
	(FS_LOAD_FONT): Adjusted for the change of fontset implementation.
	(FS_LOAD_FACE_FONT): New macro.

	* fontset.c: All codes rewritten or adjusted for the change of
	fontset implementation.  Now fontset is represented by char table.
	(Vglobal_fontset_alist, font_idx_temp, my_strcasetbl): Variables
	removed.
	(my_strcasecmp): Function removed.
	(Vfontset_table, next_fontset_id, Vdefault_fontset): New
	variables.
	(AREF, ASIZE): New macros.
	(FONTSET_FROM_ID, FONTSET_ID, FONTSET_NAME, FONTSET_FRAME,
	FONTSET_ASCII, FONTSET_BASE, BASE_FONTSET_P, FONTSET_REF,
	FONTSET_REF_VIA_BASE, FONTSET_SET): New macros.
	(fontset_ref, fontset_ref_via_base, fontset_set, make_fontset,
	fontset_id_valid_p, font_family_registry, fontset_name,
	fontset_ascii, free_face_fontset, face_suitable_for_char_p,
	face_for_char, make_fontset_for_ascii_face, fontset_font_pattern):
	New functions.
	(fs_load_font): New arg FACE.  Caller changed.
	(fs_query_fontset): Argument changed.  Caller changed.
	(Fquery_fontset): call fs_query_fontset.
	(fs_register_fontset, alloc_fontset_data, free_fontset_data):
	Functions removed.
	(clear_fontset_elements, check_registry_encoding,
	check_fontset_name): New functions.
	(syms_of_fontset): Set char-table-extra-slots property of fontset
	to 3.  Staticpro and initialize Vfontset_table and
	Vdefault_fontset.  Defsubr fontset_font and fontset_list.

	* frame.h (struct frame): Member `fontset_data' removed.
	(FRAME_FONTSET_DATA): Macro removed.

	* frame.c (make_frame): Don't allocate f->fontset_data.
	(Fdelete_frame): Don't free f->fontset_data.

	* msdos.c (XMenuActivate): Args to lookup_derived_face changed.

	* xdisp.c (charset_at_position): Function removed.
	(init_iterator): Don't set member charset of struct `it'.
	(handle_face_prop, reseat_to_string, set_iterator_to_next,
	next_element_from_display_vector, insert_left_trunc_glyphs):
	Likewise.
	(face_before_or_after_it_pos): Call FACE_FOR_CHAR, not
	FACE_FOR_CHARSET.
	(get_next_display_element, append_space,
	extend_face_to_end_of_line): Likewise.

	* xfaces.c (Qx_charset_registry, Vface_default_registry):
	Variables removed.
	(clear_font_table, frame_update_line_height, load_face_font):
	Adjusted for the change of fontset implementation.
	(load_face_fontset_font): Function removed.
	(pixel_point_size): New function.
	(font_list): Argument type changed.  Caller changed.
	(LFACE_FONT): New macro.
	(check_lface_attrs): Check attr[LFACE_FONT_INDEX].
	(set_lface_from_font_name): Type of arg FONTNAME is changed to
	Lisp_Object.  Determine the font name by actually loading a font
	by the specified pattern.  Set LFACE_FONT (lface) to the specified
	pattern.  Even if a font is not found, don't try alternatives.
	(Finternal_set_lisp_face_attribute): Handle `font' slot in lface.
	(set_font_frame_param): If `font' is specified in lface, use it.
	(Finternal_get_lisp_face_attribute): Handle `font' slot in lface.
	(lface_same_font_attributes_p): Likewise.
	(make_realized_face): Arguent changed.  Caller changed.  Set
	face->ascii_face to face itself.
	(free_realized_face): Free face->fontset if face is for ASCII.
	(face_suitable_for_iso8859_1_p, face_suitable_for_charset_p,
	deduce_unibyte_registry, x_charset_registry): Functions removed.
	(free_realized_multibyte_face): New function.
	(lookup_face, lookup_named_face, lookup_derived_face): Argument
	changed.  Caller changed.
	(try_font_list): Argument type changed.
	(face_fontset): Check `font' slot of ATTRS, not `family' slot.
	(choose_face_font): Argument changed.  Handle fontset properly.
	(choose_face_fontset_font): Function removed.
	(realize_default_face, realize_named_face): Don't remove the
	former face here.
	(realize_face): Argument changed.  Caller changed.  Remove face
	with the arg former_face_id in advance.  Load font for the new
	face.
	(realize_x_face): Argument changed.  Caller changed.  For a
	multibyte character, share fontset with base_face.  For a single
	byte character, make a new realized fontset.  Don't load a font
	here.
	(realize_tty_face): Argument changed.  Caller changed.
	(compute_char_face): Call FACE_FOR_CHAR, not FACE_FOR_CHARSET.
	(face_at_buffer_position): Don't check multibyte_p for returning
	DEFAULT_FACE_ID.
	(face_at_string_position): Call FACE_SUITABLE_FOR_CHAR_P, not
	FACE_SUITABLE_FOR_CHARSET_P.
	(syms_of_xfaces): Remove code for Qx_charset_registry and
	Vface_default_registry.

	* xterm.c: Include fontset.h after dispextern.h.  Undo the changes
	related to PER_CHAR_METRIC done by Gerd on 2000-03-03.
	(x_per_char_metric): Don't try FONT->default_char.  Even if
	pcm->width is zero, glyph bits may exist.
	(x_encode_char): Always initialize char2b->byte1.
	(x_get_char_face_and_encoding): Call FACE_FOR_CHAR to get face_id.
	(x_get_glyph_face_and_encoding): New arg two_byte_p.  Caller
	changed.
	(x_append_glyph): Set glyph->glyph_not_available_p.
	(x_produce_glyphs): Set it->glyph_not_available_p.  Don't set
	it->charset.  Handle the case that per char metric is not
	available.  If it->multibyte_p is zero and it->c is a multibyte
	character, convert it to a unibyte character.
	(struct glyph_string): Delete member `charset'.
	(x_set_mouse_face_gc): Call FACE_FOR_CHAR to get face_id.  Handle
	the case that per char metric is not available correctly.
	(x_fill_glyph_string): Handle the case that the specific glyph is
	not available correctly.
	(BUILD_CHAR_GLYPH_STRINGS): Don't set s->charset.
	(BUILD_COMPOSITE_GLYPH_STRING): Likewise.
	(x_new_font): Call FS_LOAD_FONT, not fs_load_font.
	(x_new_fontset): Call fontset_ascii to get ASCII font name of the
	fontset.  Don't call FS_LOAD_FONT.

	* xfns.c (Fx_create_frame): Don't cal fs_register_fontset.
	(x_create_tip_frame): Likewise.
	(Fx_close_connection): Free full_name of font_info.

	* fns.c (optimize_sub_char_table): New function.
	(Foptimize_char_table): New function.
	(syms_of_fns): Defsubr Soptimize_char_table.

2000-03-20  Gerd Moellmann  <gerd@gnu.org>

	* buffer.c (Fset_buffer_modified_p): Set update_mode_lines
	only if buffer is displayed in some window.

	* xdisp.c (handle_single_display_prop): Initialize local `value'.
	(try_window_reusing_current_matrix): Don't call scroll run
	function if run's current and desired position are the same;
	this prevents cursor flickering.

2000-03-19  Stefan Monnier  <monnier@cs.yale.edu>

	* regex.h (RE_TRANSLATE. RE_TRANSLATE_P): Moved to regex.c.

	* regex.c (RE_STRING_CHAR): New macro.
	(GET_CHAR_AFER_2): Remove.
	(RE_TRANSLATE, RE_TRANSLATE_P): New macros moved from regex.h.
	(enum re_opcode_t): Remove on_failure_jump_exclusive.
	(print_partial_compiled_pattern, re_compile_fastmap)
	(re_match_2_internal): Remove on_failure_jump_exclusive.
	(regex_compile): Turn optimizable P+ loops into PP*, so that the
	optimization only need to work for * (ie. can use of_keep_string_jump).
	Remove the special case for .*\n since it is now covered by the general
	optimization.
	(re_search_2): Don't bother with `room'.
	(skip_one_char): New function.
	(skip_noops): Simplify since `memory' is not needed any more.
	(mutually_exclusive_p): Restructure slightly to use `switch' and
	add handling for "all" remaining cases.
	(re_match_2_internal): Change on_failure_jump_smart to use
	on_failure_keep_string_jump (and redirect the end-of-loop jump)
	rather than on_failure_jump_exclusive.

2000-03-19  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c (select_visual): Don't set dpyinfo->n_planes to the
	number of bits per RGB because it's everywhere used as the depth
	of the visual.

	* term.c (calculate_costs): Remove code dealing with X frames.

2000-03-19  Richard M. Stallman  <rms@gnu.org>

	* lread.c (syms_of_lread): Doc fix for load-convert-to-unibyte.

2000-03-18  Gerd Moellmann  <gerd@gnu.org>

	* lread.c (read_integer): Unread the last char not consumed.

2000-03-17  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_update_window_cursor): Don't update in frames
	which are in the process of being deleted.

2000-03-16  Gerd Moellmann  <gerd@gnu.org>

	* Makefile.in (mostlyclean): Add `*.core'.
	(clean): Add `bootstrap-emacs'.

	* lread.c (read_integer): New function.
	(read1): Support read syntax #o, #x, #b, #r.

2000-03-15  Stefan Monnier  <monnier@cs.yale.edu>

	* regex.c (re_match_2): Fix string shortening (to fit `stop') to
	make sure POINTER_TO_OFFSET gives the same value before and after
	PREFETCH.  Use `dfail' to guarantee "atomic" matching.
	(PTR_TO_OFFSET): Use POINTER_TO_OFFSET.
	(debug): Now only active if > 0 rather than if != 0.
	(DEBUG_*): Update for the new meaning of `debug'.
	(print_partial_compiled_pattern): Add missing `succeed' case.  Use
	CHARSET_* macros in the charset(_not) branch.  Fix off-by-two bugs
	in `succeed_n', `jump_n' and `set_number_at'.
	(store_op1, store_op2, insert_op1, insert_op2)
	(at_begline_loc_p, at_endline_loc_p): Add prototype.
	(group_in_compile_stack): Move to after its arg's types are
	declared and add a prototype.
	(PATFETCH): Define in terms of PATFETCH_RAW.
	(GET_UNSIGNED_NUMBER): Add the usual `do { ... } while(0)'
	wrapper.
	(QUIT): Redefine as a nop except for NTemacs.
	(regex_compile): Handle intervals {,M} as if it was {0,M}.  Fix
	indentation of the greedy-op and shy-group code.
	(at_(beg|end)line_loc_p): Fix argument's types.
	(re_compile_fastmap): Ifdef out failure_stack_ptr to shut up gcc.
	(re_search_2): Use POS_AS_IN_BUFFER.  Simplify `room' computation.
	(MATCHING_IN_FIRST_STRING): Remove.
	(re_match_2): Use POS_AS_IN_BUFFER.  Ifdef out failure_stack_ptr
	to shut up gcc.  Use FIRST_STRING_P and POINTER_TO_OFFSET.  Use
	QUIT unconditionally.

2000-03-15  Gerd Moellmann  <gerd@gnu.org>

	* minibuf.c (Fminibuffer_complete): Set point to ZV if finding
	a sole completion.

	* process.c (send_process): Add a hint that the function
	can call Lisp code to its comment.

	* lread.c (load_dangerous_libraries): New variable.
	(Vbytecomp_version_regexp): New variable.
	(safe_to_load_p): New function.
	(Fload): Handle files not compiled with Emacs specially.
	(syms_of_lread): New Lisp variable load-dangerous-libraries.

2000-03-14  Gerd Moellmann  <gerd@gnu.org>

	* lisp.h (free_frame_xic) [HAVE_X_I18N]: Add missing semicolon.

	* xterm.c (xim_close_dpy, xim_initialize): Use X11R6-style XIM
	support functions only if HAVE_X11R6_XIM is defined.
	(xim_instantiate_callback): Define only if HAVE_X11R6_XIM.

	* s/sol2.h (INHIBIT_X11R6_XIM): Define.

	* xfns.c (X_I18N_INHIBITED): Don't define.
	(create_frame_xic): Remove conditional compilation on
	X_I18N_INHIBITED.
	(x_kill_gs_process, x_window): Use FRAME_X_VISUAL.

	* config.in (HAVE_X_I18N): Moved here from xterm.h.
	(HAVE_X11R6_XIM): Define.

	* xterm.h (HAVE_X_I18N) [HAVE_X11R6]: Moved to config.in.

	* xterm.c (x_term_init): Add support for X resource `synchronous'.
	If set, call XSynchronize.

2000-03-13  Stefan Monnier  <monnier@cs.yale.edu>

	* regex.c: Declare a new type `re_char' used throughout the code
	for the string char type.  It's `const unsigned char' to match the
	rest of Emacs.  Consistently make sure all pointers to strings use
	it and make sure all pointers into the pattern use `unsigned
	char'.
	(re_match_2_internal): Use `PREFETCH+STRING_CHAR' instead of
	GET_CHAR_AFTER_2.  Also merge wordbound and notwordbound to reduce
	code duplication.

	* charset.h (GET_CHAR_AFTER_2): Remove.
	(GET_CHAR_BEFORE_2): Use unsigned chars, like everywhere else.

2000-03-12  Ken Raeburn  <raeburn@gnu.org>

	* Makefile.in (temacs): Evaluate ALL_LDFLAGS into a temporary
	variable before the invocation of YMF_PASS_LDFLAGS, in case both
	of them try to use backquotes.

2000-03-12  Dave Love  <fx@gnu.org>

	* unexelf.c: Restore changes of 1999-10-19.
	(unexec): Don't adjust bss for sbss type SHT_PROGBITS; otherwise
	fix its type and alignment; copy it from current process.

2000-03-12  Gerd Moellmann  <gerd@gnu.org>

	* atimer.c (cancel_atimer): Break out of the loop as soon as timer
	has been found.  Fix bug not computing timer's predecessor.

	* fileio.c (Fread_file_name): Handle case that DIR contains a
	file name.

	* window.c (Fsave_window_excursion): Doc fix.

	* xfns.c (x_defined_color): Rewritten to use
	x_allocate_nearest_color.

2000-03-12  Eli Zaretskii  <eliz@is.elta.co.il>

	* msdos.c (vga_installed): New function, code moved from
	dos_set_window_size.
	(Qbar, Qcursor_type, outside_cursor): New variables.
	(syms_of_msdos): Intern and staticpro them.
	(dos_ttraw) [__DJGPP__ >= 2, !HAVE_X_WINDOWS]: Save the cursor
	shape used outside Emacs when called for the first time.
	(dos_ttcooked) [__DJGPP__ >= 2, !HAVE_X_WINDOWS]: Restore the
	cursor shape used outside Emacs.
	(msdos_set_cursor_shape, IT_set_cursor_type): New functions.
	(IT_frame_up_to_date): Call IT_set_cursor_type, in case the cursor
	type has changed.
	(IT_set_frame_parameters): Call IT_set_cursor_type if the frame
	parameters specify the cursor.  Make qreverse a global
	variable (renamed to Qreverse).

2000-03-09  Gerd Moellmann  <gerd@gnu.org>

	* fns.c (Fy_or_n_p): Cancel busy-cursor.

2000-03-08  Stefan Monnier  <monnier@cs.yale.edu>

	This is a big redesign of failure-stack and register handling, prompted
	by bugs revealed when trying to add shy-groups.  Overall, what happened
	is that loops are now structured a little differently, groups can be
	shy and the code is a little simpler.

	* regex.h: Update the copyright.
	(RE_SHY_GROUPS): New value.
	(RE_UNMATCHED_RIGHT_PAREN_ORD): Renumber.
	(RE_SYNTAX_EMACS): Add RE_SHY_GROUPS.

	* regex.c (enum re_opcode_t): Remove jump_past_alt,
	maybe_pop_jump, push_dummy_failure and dumy_failure_jump.  Add
	on_failure_jump_(exclusive, loop and smart).  Also fix the comment
	for (start|stop)_memory since they now only take one argument (the
	second has becomes unnecessary).
	(print_partial_compiled_pattern): Adjust for changes in
	re_opcode_t.
	(print_compiled_pattern): Use %ld to printf long ints and flush to
	make debugging a little easier.
	(union fail_stack_elt): Make the integer unsigned.
	(struct fail_stack_type): Add a `frame' element.
	(INIT_FAIL_STACK): Init `frame' as well.
	(POP_PATTERN_OP): New macro for re_compile_fastmap.
	(DEBUG_PUSH, DEBUG_POP): Remove.
	(NUM_REG_ITEMS): Remove.
	(NUM_NONREG_ITEMS): Adjust.
	(FAILURE_PAT, FAILURE_STR, NEXT_FAILURE_HANDLE)
	(TOP_FAILURE_HANDLE): New macros for the cycle detection.
	(ENSURE_FAIL_STACK): New macro for PUSH_FAILURE_(REG|POINT).
	(PUSH_FAILURE_REG, POP_FAILURE_REG, CHECK_INFINITE_LOOP): New
	macros.
	(PUSH_FAILURE_POINT): Don't push registers any more.  The pattern
	address pushed is not the destination of the jump but the source
	of it instead.
	(NUM_FAILURE_ITEMS): Remove.
	(POP_FAILURE_POINT): Adapt to the new stack structure (i.e. pop
	registers before the actual failure point).  Don't hardcode any
	meaning for str==NULL anymore.
	(union register_info_type, REG_MATCH_NULL_STRING_P, IS_ACTIVE)
	(MATCHED_SOMETHING, EVER_MATCHED_SOMETHING, SET_REGS_MATCHED):
	Remove.
	(REG_UNSET_VALUE): Use NULL (why not?).
	(compile_range): Remove declaration since it doesn't exist.
	(struct compile_stack_elt_t): Remove inner_group_offset.
	(old_reg(start|end), reg_info, reg_dummy, reg_info_dummy): Remove.
	(regex_grow_registers): Remove dead code.
	(FIXUP_ALT_JUMP): New macro.
	(regex_compile): Add shy-groups Change loops to use
	on_failure_jump_smart&jump instead of
	on_failure_jump&maybe_pop_jump.  Change + loops to eliminate the
	initial (dummy_failure_)jump.  Remove c1_base (looks like unused
	variable to me).  Use `jump' instead of `jump_past_alt' and don't
	bother with push_dummy_failure in alternatives since it is now
	unnecessary.  Use FIXUP_ALT_JUMP.  Eliminate a useless `#ifdef
	emacs' for (re)allocating the stack.
	(re_compile_fastmap): Remove dead variables i and num_regs.  Exit
	from loop when bufp->can_be_null rather than jumping to `done'.
	Avoid jumping backwards so as to ensure termination.  Use
	PATTERN_STACK_EMPTY and POP_PATTERN_OP.  Improved handling of
	backreferences.  Remove dead code in handling of `anychar'.
	(skip_noops, mutually_exclusive_p): New functions taken from the
	handling of `maybe_pop_jump' in re_match_2_internal.  Slightly
	improve mutually_exclusive_p to handle ".+\n".
	(lowest_active_reg, highest_active_reg,
	NO_(LOWEST|HIGHEST)_ACTIVE_REG) Remove.
	(re_match_2_internal): Use %p instead of 0x%x when printf'ing
	ptrs.  Don't SET_REGS_MATCHED anymore.  Remove many dead
	variables.  Push register (in `start_memory') on the stack rather
	than storing it in old_reg(start|end).  Remove the cycle detection
	from `stop_memory', replaced by the use of on_failure_jump_loop
	for greedy loops.  Add code for the new on_failure_jump_<foo>.
	Remove ad-hoc code in `on_failure_jump' to push more registers in
	the case of a loop.  Take out code from `maybe_pop_jump' into
	separate functions and adapt it to the semantics of
	`on_failure_jump_smart'.  Remove jump_past_alt, dummy_failure_jump
	and push_dummy_failure.  Remove dummy_failure handling and
	handling of `failures to jump to on_failure_jump' (this last one
	was already dead code, it seems).
	(group_match_null_string_p, alt_match_null_string_p)
	(common_op_match_null_string_p): Remove.

2000-03-08  Dave Love  <fx@gnu.org>

	* config.in: Don't depend on __STDC__ for volatile.
	Add POINTER_TYPE, PTR, PROTOTYPES.

	* hftctl.c, strftime.c: Use PROTOTYPES.
	* eval.c (find_handler_clause): Likewise.

	* mem-limits.h: Use POINTER_TYPE.

	* lisp.h (P_): Define based on PROTOTYPES, not __STDC__.
	(memory_warnings): Declare using POINTER_TYPE.

2000-03-08  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c (x_set_cursor_type): If ARG is nil, give frame no cursor.

	* xdisp.c (display_echo_area): Temporarily inhibit garbage
	collection.

	* xfns.c: Remove obsolete code in #if 0.
	(Fx_focus_frame): New function.

2000-03-07  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* coding.c (coding_category_name): Add coding-category-utf-8,
	coding-category-utf-16-be, coding-category-utf-16-le.
	(UTF_8_1_OCTET_P, UTF_8_EXTRA_OCTET_P, UTF_8_2_OCTET_LEADING_P,
	UTF_8_3_OCTET_LEADING_P, UTF_8_4_OCTET_LEADING_P,
	UTF_8_5_OCTET_LEADING_P, UTF_8_6_OCTET_LEADING_P): New macros.
	(detect_coding_utf_8): New function.
	(UTF_16_INVALID_P, UTF_16_HIGH_SURROGATE_P
	UTF_16_LOW_SURROGATE_P): New macros.
	(detect_coding_utf_16): New function
	(detect_coding_mask): When priorities are specified, skip any
	categories that have `nil' coding-system.  Fix bug of returning
	wrong mask when PRIORITIES is specified and detect_coding_XXX()
	returns a mask not set in PRIORITIES.
	(detect_eol_type_in_2_octet_form): New function.
	(detect_eol): selects detect_eol_type_XXX to call according to
	cooding->category_idx.
	(detect_coding_system): Remove `nil' coding-system in the result.
	(Fupdate_coding_systems_internal): Update all coding-categories.

	* coding.h (CODING_CATEGORY_IDX_UTF_8,
	CODING_CATEGORY_IDX_UTF_16_BE, CODING_CATEGORY_IDX_UTF_16_LE): New
	macros.
	(CODING_CATEGORY_IDX_RAW_TEXT, CODING_CATEGORY_IDX_BINARY,
	CODING_CATEGORY_IDX_MAX): Adjusted for the above macros.
	CODING_CATEGORY_IDX_UTF_16_LE.
	(CODING_CATEGORY_MASK_UTF_8, CODING_CATEGORY_MASK_UTF_16_BE,
	CODING_CATEGORY_MASK_UTF_16_LE): New macros.
	(CODING_CATEGORY_MASK_ANY): Include the above macros.
	(CODING_CATEGORY_MASK_UTF_16_BE_LE): New macro.

2000-03-07  Gerd Moellmann  <gerd@gnu.org>

	* doc.c (Fdocumentation_property): If value is not a string,
	and doesn't refer to etc/DOC, evaluate it to obtain a string.

	* xterm.c (x_connection_closed) [USE_X_TOOLKIT]: Don't try to
	close the display with XtCloseDisplay.  This caused a bus error
	on OpenWindows.

	* minibuf.c (Fminibuffer_complete): Move point to ZV when input is
	complete but not unique.

2000-03-06  Gerd Moellmann  <gerd@gnu.org>

	* process.c (send_process): Remove local variable `procname' that
	might become invalid when a GC happens.  Instead, access the
	process name slot directly.

	* xfns.c (x_set_menu_bar_lines_1): Adjust window's orig_top and
	orig_height if set.

	* frame.c (set_menu_bar_lines_1): Adjust window's orig_top and
	orig_height if set.

2000-03-06  Eli Zaretskii  <eliz@is.elta.co.il>

	* msdos.c (IT_note_mouse_highlight): Return immediately if frame's
	glyph matrices have been freed.

2000-03-05  Gerd Moellmann  <gerd@gnu.org>

	* Makefile.in (tags): Include ../lwlib/TAGS in TAGS.
	(bootstrap-temacs): Set LC_ALL to C like for temacs.

	* xfns.c (QCdata): Moved to xdisp.c.

	* xdisp.c (QCdata): Moved here from xfns.c.
	(syms_of_xdisp): Initialize QCdata.

	* frame.h (FRAME_INTERNAL_BORDER_WIDTH) [!HAVE_X_WINDOWS]: Define.

	* window.c (coordinates_in_window): Use
	FRAME_INTERNAL_BORDER_WIDTH_SAFE instead of
	FRAME_INTERNAL_BORDER_WIDTH.

	* xdisp.c (try_window_id): Recompute unchanged information if
	it is obviously invalid.

	* xterm.c (x_term_init): Create a colormap if not using the
	default visual.

	* xterm.h (select_visual): Change prototype.

	* xfns.c (select_visual): Rewritten.  Recognize user-specified
	visual classes.
	(visual_classes): New variable.

2000-03-04  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c (x_defined_color, x_set_mouse_color, lookup_rgb_color)
	(lookup_pixel_color, x_laplace, x_build_heuristic_mask)
	(png_load): Access colormap of frame using FRAME_X_COLORMAP.
	(x_decode_color): Don't handle allocation of white and black
	specially.
	(x_window) [USE_X_TOOLKIT]: Set XtNvisual, XtNdepth, and
	XtNcolormap resources.
	(x_window) [!USE_X_TOOLKIT]: Pass colormap to XCreateWindow.
	(Fx_create_frame): Initialize color members of x_output structure.
	(xpm_load): Pass colormap to XPM lib.

	* xfaces.c (x_free_colors): Access colormap of frame using
	FRAME_X_COLORMAP.  Be paranoid about freeing black and white
	when default colormap is used.

	* xterm.c (x_term_init): Set Colormap member of x_display_info
	structure.  Copy colormap if resource `privateColormap' is
	specified (PseudoColor only).
	(x_setup_relief_color): Access colormap of frame using
	FRAME_X_COLORMAP.

	* xterm.h (struct x_display_info): Add Colormap member `cmap'.
	(FRAME_X_COLORMAP, FRAME_X_VISUAL): New macros.

2000-03-04  Jason Rumney  <jasonr@gnu.org>

	* xfaces.c Change many FRAME_X... macros to FRAME_WINDOW... or
	other non-platform-specific equivalents.
	[WINDOWSNT]: Include w32term.h, fontset.h and define X
	specific functions and macros as their w32 equivalents where
	non-platform-specifics are not available.
	[HAVE_X_WINDOWS]: Change most of these to HAVE_WINDOW_SYSTEM.
	(x_create_gc, x_free_gc) [WINDOWSNT]: Add W32 versions.
	(clear_font_table) [WINDOWSNT]: Call w32_unload_font.
	(frame_update_line_height): Use macros to access f->output_data.
	(defined_color): Remove FIXME comments; fixed.
	(x_face_list_fonts, prepare_face_for_display): Put X specifics
	into #ifdef blocks. Add WINDOWSNT blocks.
	(Fx_list_fonts): Use macros for accessing font data.
	(set_lface_from_font_name): Different default fonts for X and
	WINDOWSNT.
	(font_scalable_p) [WINDOWSNT]: Treat wildcard XLFD_AVGWIDTH as
	scalable for backward compatibility.
	(realize_tty_face) [MSDOS]: Do the same for WINDOWSNT.
	(syms_of_xfaces) [WINDOWSNT]: Allow scalable fonts by default.

	* emacs.c (main) [HAVE_NTGUI]: Call syms_of_xfaces instead of
	syms_of_w32faces.

	* makefile.nt (w32faces.obj): Remove.
	(xfaces.obj): Add.

2000-03-03  Jason Rumney  <jasonr@gnu.org>

	* keyboard.c (make_lispy_event): Call buffer_posn_from_coords with
	correct parameters.

2000-03-03  Ken Raeburn  <raeburn@gnu.org>

	* unexelf.c (PT_LOAD, SHT_*, SHN_*) [__NetBSD__]: Only provide
	standard ELF definitions here if the system header does not.

2000-03-03  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (PER_CHAR_METRIC): Removed.
	(x_per_char_metric_1, x_default_char): New functions.
	(x_per_char_metric): If font's default char is invalid, return
	metrics of a suitably chosen usable default char.
	(x_draw_glyph_string_foreground): If font has an invalid default
	char, replace occurrences of unprintable chars with a suitably
	chosen usable default char.

2000-03-02  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (note_mouse_highlight): Return quickly if frame's
	glyph matrices have been freed.

	* dispnew.c (free_glyphs): Block input while freeing matrices.

	* xfns.c (x_clear_image, x_kill_gs_process): Use x_free_colors.

	* xterm.c (x_alloc_lighter_color, x_setup_relief_color): Use
	x_free_colors.

	* dispextern.h (x_free_colors): Add prototype.

	* xfaces.c (x_free_colors): New function.
	(unload_color, free_face_colors): Use it.

2000-03-02  Eli Zaretskii  <eliz@is.elta.co.il>

	* msdos.h (FRAME_INTERNAL_BORDER_WIDTH): Define to zero.

	* window.c [MSDOS]: Include msdos.h.

2000-03-02  Dave Love  <fx@gnu.org>

	* m/powerpcle.h, m/sparc.h: Don't set C_OPTIMIZE_SWITCH.

	* m/mips-siemens.h, m/news-r6.h, m/news-risc.h, m/tekxd88.h: Don't
	set C_OPTIMIZE_SWITCH for gcc.

2000-03-02  Kenichi Handa  <handa@etl.go.jp>

	* coding.c (coding_save_composition): Be sure to allocate
	composition data area in coding even if there's no composition in
	the current run.

2000-03-01  Jason Rumney  <jasonr@gnu.org>

	* w32term.c: Equivalent changes to those made to xterm.c on
	2000-02-25 and 2000-02-24.

	* w32fns.c: Equivalent changes to those made to xfns.c on
	2000-02-25 and 2000-02-21.

	* sysdep.c: [WINDOWSNT]: Use sys_read and sys_write to ensure
	correct line-end convention is followed.

	* w32menu.c [HAVE_BOXES]: Remove #undef.
	(single_keymap_panes): Remove code for simulating checkmarks.
	(single_menu_item): Remove notbuttons_ptr argument. Callers changed.
	Remove code for drawing simulated checkmarks.
	(w32_menu_show): make unibyte help string correctly.
	(add_menu_item): draw standard Windows checkmarks. Draw radio
	buttons as radio buttons if possible.

2000-03-01  Gerd Moellmann  <gerd@gnu.org>

	* sysdep.c (start_of_text): Don't define this function for NetBSD
	with ELF.

	* m/pmax.h (START_FILES, CANNOT_DUMP) [__NetBSD__ || __OpenBSD__]:
	Don't define.
	(UNEXEC) [__NetBSD__ || __OpenBSD__]: Define to unexelf.o.
	(LINKER): Don't undef if __NetBSD__ is defined.

	* m/mips.h (LINKER) [__NetBSD__ || __OpenBSD__]: Don't define.

	* fileio.c [__NetBSD__]: Define `unix'.

	* xfns.c (start_busy_cursor): Allow floats for busy-cursor-delay.

2000-02-29  Gerd Moellmann  <gerd@gnu.org>

	* atimer.c (start_atimer): Don't abort when timers are stopped.
	(append_atimer_lists): New function.
	(cancel_atimer, stop_other_atimers, run_all_atimers): Handle
	arbitrary lists of stopped and running atimers.

	* atimer.c (cancel_atimer): Handle canceling an atimer when
	some timers are stopped.

	* xfns.c (cancel_busy_cursor): Set busy_cursor_atimer to null
	after canceling it.

	* fns.c (maybe_resize_hash_table): Handle case of new size
	coming out as being the same as old size.

2000-02-27  Jason Rumney  <jasonr@gnu.org>

	* makefile.nt: Add atimer.h to dependencies.
	* w32.c (init_environment): Set Vw32_num_mouse_buttons here.
	* w32console.c: Only disable window system features for dispextern.h
	(initialize_w32_display): Build a display info for the console.
	* w32faces.c (tty_defined_color): Apply xfaces.c change from 02-17.
	* w32fns.c (w32_wnd_proc) [WM_LBUTTON_DOWN, WM_RBUTTON_DOWN,
	WM_LBUTTON_UP, WM_RBUTTON_UP]: Do not treat 4 or more button mice
	as 2 button mice.
	* w32gui.h (struct W32FontStruct): Revert last change after change
	to xdisp.c.
	* w32menu.c (single_submenu): Set up help string.
	[!HAVE_MULTILINGUAL_MENU]: Don't overwrite item_name with descrip.
	(w32_dialog_show): Set up help string.
	* w32term.c (w32_display_info_for_display): Remove unused function.
	(w32_draw_bitmap): Use pre-built bitmaps.
	(w32_initialize_display_info): New function to initialize parts of
	display info that are common to both GUI and console frames.
	(w32_term_init): Use w32_initialize_display_info. Do not set
	Vw32_num_mouse_buttons here, as it is not called for console
	frames.  Build bitmaps for indicating truncated lines etc.
	(x_delete_display): Destroy pre-built bitmaps.
	* xdisp.c (handle_single_display_prop): Use FONT_HEIGHT macro.
	(echo_area_display): Change HAVE_X_WINDOWS to HAVE_WINDOW_SYSTEM.

2000-02-27  Dave Love  <fx@gnu.org>

	* lisp.h: Add a bunch of prototypes.

2000-02-26  Kenichi Handa  <handa@etl.go.jp>

	* keyboard.c (read_char): Set `usec' correctly.

2000-02-25  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* ccl.c (ccl_driver) [CCL_MapMultiple]: When the mapped value is
	`lambda', set reg[RRR] to the map index.
	(ccl_driver) [CCL_MapSingle]: When the mapped value is found, set
	reg[RRR] to 0.  Otherwise, set it to -1.

2000-02-25  Gerd Moellmann  <gerd@gnu.org>

	* emacs.c (main): Remove code snippet commented out with `//'.

2000-02-25  Richard M. Stallman  <rms@gnu.org>

	* fileio.c (Ffile_symlink_p): If result starts with a `/'
	and contains a `:', prepend `/:'.

	* window.c (select_window_1): If selected_window is nil,
	don't "swap out" the buffer's point.
	(Fset_window_configuration): Set selected_window to nil
	before calling Fselect_window.
	(unshow_buffer): Don't set point in buffer from window's point
	if another more recently selected window also shows the buffer.

2000-02-25  Gerd Moellmann  <gerd@gnu.org>

	* keyboard.c (recursive_edit_1): Cancel busy-cursor.

	* xfns.c (inhibit_busy_cursor, busy_count): Removed.
	(Fx_show_busy_cursor, Fx_hide_busy_cursor): Removed.
	(busy_cursor_atimer, busy_cursor_shown_p, Vbusy_cursor_delay): New
	variables.
	(DEFAULT_BUSY_CURSOR_DELAY): New define.
	(start_busy_cursor, cancel_busy_cursor, show_busy_cursor)
	(hide_busy_cursor): New functions.
	(syms_of_xfns): DEFVAR_LISP Vbusy_cursor_delay.

	* minibuf.c (read_minibuf): Cancel busy-cursor.

	* keyboard.c (command_loop_1): Call start_busy_cursor before
	Fcommand_execute and cancel_busy_cursor after it.
	(timer_check): Remove busy-cursor code.
	(Fread_key_sequence, Fread_key_sequence_vector): Start/cancel busy
	cursor timer.

	* process.c (wait_reading_process_input): Remove busy-cursor code.

	* eval.c (Fsignal): Call cancel_busy_cursor instead of
	Fx_hide_busy_cursor.

	* dispextern.h (Fx_show_busy_cursor, Fx_hide_busy_cursor):
	Remove prototyoes.
	(start_busy_cursor, cancel_busy_cursor): Add prototypes.

	* lisp.h (Fx_hide_busy_cursor): Remove prototype.

	* xterm.c (XTread_socket): Remove busy-cursor code.

	* dispnew.c (flush_stdout) [GLYPH_DEBUG]: New function.
	(build_frame_matrix_from_leaf_window): Put code handling
	glyph row's not being a slice of a frame row in #if 0.
	(sync_window_with_frame_matrix_rows): New function.
	(frame_row_to_window): New function.
	(mirror_line_dance): Handle copies between windows.

	* lread.c (Fload): Use `xfree' instead of `free'.
	(init_obarray): Use `xmalloc' instead of `malloc'.

	* window.c (Fset_window_buffer): Set WINDOW to the window
	after decoding.
	(coordinates_in_window): Take frame's internal border width
	into account.

2000-02-24  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_display_and_set_cursor): Display cursor of
	non-selected windows depending on the setting of
	cursor_in_non_selected_windows.

	* xdisp.c (cursor_in_non_selected_windows): New variable.
	(syms_of_xdisp): DEFVAR_BOOL it.

2000-02-23  Gerd Moellmann  <gerd@gnu.org>

	* data.c (Fstring_to_number): If number is greater than what
	fits into an integer, return a float.

	* eval.c (specbind): Remove references to
	keyword_symbols_constant_flag.

	* data.c (keyword_symbols_constant_flag): Removed.
	(Fmakunbound, set_internal, syms_of_data): Remove references to
	keyword_symbols_constant_flag.

	* bytecode.c (Fbyte_code): Remove keyword_symbols_constant_flag.

2000-02-23  Kenichi Handa  <handa@etl.go.jp>

	* syntax.c (multibyte_syntax_as_symbol): New variable.
	(syms_of_syntax): Declare it as a Lisp variable.
	(SYNTAX_WITH_MULTIBYTE_CHECK): New macro.
	(scan_lists): If both sexpflag and multibyte_syntax_as_symbol are
	nonzero, treat all multibyte characters as symbol.
	(init_syntax_once): Give syntax `word' to all multibyte
	characters.

2000-02-22  Eli Zaretskii  <eliz@is.elta.co.il>

	* frame.c (Fdelete_frame): Don't let echo_area_window remain on
	a deleted frame.

2000-02-21  Gerd Moellmann  <gerd@gnu.org>

	* frame.c (Fmouse_position): GCPRO retval instead of x and y.

	* xfns.c (x_window_to_frame, x_any_window_to_frame)
	(x_non_menubar_window_to_frame): Check the busy-cursor window.

2000-02-21  Dave Love  <fx@gnu.org>

	* frame.c (Vmouse_position_function): New variable.
	(Fmouse_position): Use it.
	(syms_of_frame): Install it.

	* charset.c (find_charset_in_str): Fix use of `c' instead of `c1'.

2000-02-20  Gerd Moellmann  <gerd@gnu.org>

	* fileio.c (Finsert_file_contents): Unbind the binding of
	standard-output done by temp_output_buffer_setup.

	* eval.c (funcall_lambda): Don't bind Qmocklisp_arguments unless
	Vmocklisp_arguments is nil.  Inline Fcar and Fcdr.
	(specbind, unbind_to): Handle most common case of non-constant
	symbol with trivial value specially.

	* bytecode.c (Fbyte_code) <Bvarset>: Inline most common case.

2000-02-20  Richard M. Stallman  <rms@gnu.org>

	* data.c (Fmake_variable_buffer_local): Doc fix.
	Init found_for_buffer to 0.
	(Fmake_variable_frame_local): If the variable has already
	been buffer-local, set the check_frame field.

2000-02-20  Eli Zaretskii  <eliz@is.elta.co.il>

	* msdos.c (IT_write_glyphs): Allocate a larger screen_buf as data
	produced for CODING_MODE_LAST_BLOCK requires.

2000-02-18  Dave Love  <fx@gnu.org>

	* keyboard.c (echo_keystrokes): Remove declaration.
	(Vecho_keystrokes) New variable.
	(read_char, record_menu_key, read_key_sequence): Use it to allow
	use of float value.
	(syms_of_keyboard): Change Vecho_keystrokes declaration.

	* lread.c: Undef feature selection macros before defining.

2000-02-18  Gerd Moellmann  <gerd@gnu.org>

	* data.c (let_shadows_buffer_binding_p): Ignore specbindings
	for symbols other than the symbol in question.

2000-02-17  Dave Love  <fx@gnu.org>

	* s/sol2.h (C_DEBUG_SWITCH): Define to allow optimization.

2000-02-17  Gerd Moellmann  <gerd@gnu.org>

	* emacs.c (main): Use #if GC_MARK_STACK instead of #ifdef.

	* alloc.c (enum mem_type): Compile unconditionally.

2000-02-17  Eli Zaretskii  <eliz@is.elta.co.il>

	* xfaces.c (tty_defined_color): Don't return faulire indication
	for unspecified-fg and unspecified-bg pseudo-colors.

2000-02-17  Gerd Moellmann  <gerd@gnu.org>

	* alloc.c (mark_object): Don't mark symbol names in pure space.
	(gc_sweep): Don't unmark symbol names in pure space.

	* lisp.h (GC_USE_GCPROS_AS_BEFORE, GC_MAKE_GCPROS_NOOPS)
	(GC_MARK_STACK_CHECK_GCPROS, GC_USE_GCPROS_CHECK_ZOMBIES)
	[GC_MARK_STACK]: New defines.
	(GCPRO1, GCPRO2, GCPRO3, GCPRO4, GCPRO5, UNGCPRO)
	[GC_MARK_STACK == GC_MAKE_GCPROS_NOOPS]: Define as no-ops.

	* emacs.c (main) [GC_MARK_STACK]: Initialize stack_base.

	* buffer.c (Fget_buffer_create, Fmake_indirect_buffer): Use
	allocate_buffer instead of xmalloc.

	* alloc.c (toplevel): Include setjmp.h.
	(PURE_POINTER_P): New define.
	(enum mem_type) [GC_MARK_STACK]: New enumeration.
	(Vdead) [GC_MARK_STACK]: New variable.
	(lisp_malloc): Add parameter TYPE, call mem_insert if
	GC_MARK_STACK is defined.
	(allocate_buffer): New function.
	(lisp_free) [GC_MARK_STACK]: Call mem_delete.
	(free_float) [GC_MARK_STACK]: Set type to Vdead.
	(free_cons) [GC_MARK_STACK]: Set car to Vdead.
	(stack_base, mem_root, mem_z) [GC_MARK_STACK]: New variables.
	(MEM_NIL) [GC_MARK_STACK]: New define.
	(struct mem_node) [GC_MARK_STACK]: New structure.
	(mem_init, mem_find, mem_insert, mem_delete, mem_insert_fixup)
	(mem_delete_fixup, mem_rotate_left, mem_rotate_right)
	(live_string_p, live_cons_p, live_symbol_p, live_float_p)
	(live_misc_p, live_vector_p, live_buffer_p, mark_memory)
	(mark_stack) [GC_MARK_STACK]: New functions.
	(Fgarbage_collect) [GC_MARK_STACK]: Call mark_stack.
	(clear_marks): Removed.
	(gc_sweep): Set free conses' car, free floats' type, free
	symbols' function to Vdead.  Use lisp_free to free buffers.
	(init_alloc_once): Initialize Vdead.
	(survives_gc_p): Return non-zero for pure objects.

	* alloc.c: Add comments throughout the file.

	* atimer.c (stop_other_atimers): Don't call cancel_atimer because
	that unblocks alarms.

	* alloc.c, bytecode.c, data.c, dispnew.c, ecrt0.c, editfns.c,
	emacs.c, floatfns.c, fns.c, lread.c, print.c, config.in, lisp.h,
	Makefile.in: Remove `LISP_FLOAT_TYPE' and `standalone'.

	* frame.c (make_frame): Set frame initiallly to `garbaged'.

2000-02-17  Kenichi Handa  <handa@etl.go.jp>

	* xdisp.c (decode_mode_spec_coding): Delete superfluous code to
	avoid infinite error signaling.  Allocate sufficient memory for
	eol_str in the case that eoltype is Lisp_Int.

2000-02-17  Stefan Monnier  <monnier@cs.yale.edu>

	* syntax.c (Fforward_comment): Undo the previous change, since cc-mode
	depends on the previous behavior.

2000-02-16  Gerd Moellmann  <gerd@gnu.org>

	* sysdep.c (vfork) [!HAVE_VFORK]: Removed.

2000-02-15  Gerd Moellmann  <gerd@gnu.org>

	* s/freebsd.h (BROKEN_PTY_READ_AFTER_EAGAIN): Define.

	* process.c (send_process) [BROKEN_PTY_READ_AFTER_EAGAIN]:
	Workaround for FreeBSD bug.  Clear output queue after EAGAIN in
	write(2).

2000-02-15  Richard M. Stallman  <rms@gnu.org>

	* data.c (set_internal): Don't make variable buffer-local
	if within a let-binding for the same buffer.
	(let_shadows_buffer_binding_p): New function.

	* eval.c (specbind): For buffer-local value,
	record the current buffer also.
	(unbind_to): Cope with that change.

2000-02-15  Gerd Moellmann  <gerd@gnu.org>

	* window.c (Fsave_window_excursion): Doc fix.

2000-02-15  Stefan Monnier  <monnier@cs.yale.edu>

	* syntax.c (back_comment): Make sure we only consider comment-starters
	of the relevant style and return -1 in case of a failure to find the
	beginning of the comment.
	(Fforward_comment): If back_comment fails, go back to the position just
	after the comment-end.
	(scan_lists): Add comment describing a very minor bug.

2000-02-14  Stefan Monnier  <monnier@cs.yale.edu>

	* minibuf.c (Ftry_completion, Fall_completions): Add a reference to
	`completion-regexp-list' in the docstring.

2000-02-14  Dave Love  <fx@gnu.org>

	* xfaces.c (tty_defined_color): Declare color_idx unsigned long.

2000-02-14  Stefan Monnier  <monnier@cs.yale.edu>

	* regex.h (RE_SYNTAX_EMACS): Add RE_CHAR_CLASSES and RE_INTERVALS
	to Emacs' syntax.  Also fix the comment about set/not-set meanings
	since Emacs syntax is not the value 0 any more.
	* search.c (compile_pattern_1): Remove RE_CHAR_CLASSES from the syntax
	since it's now part of RE_SYNTAX_EMACS.

2000-02-12  Dave Love  <fx@gnu.org>

	* frame.h (SELECTED_FRAME): Use NULL, not 0 to avoid warnings on
	Alpha.

2000-02-12  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (syms_of_xdisp): Doc fix for scroll-conservatively.

2000-02-12  Dave Love  <fx@gnu.org>

	* s/aix3-2.h, s/osf-1.h: Define C_DEBUG_SWITCH for non-gcc.

	* s/ux4800.h, s/umips.h, s/umax.h, s/sol2.h, s/sco5.h, s/rtu.h:
	* s/ptx4.h, s/umax.h, s/dgux.h, s/bsd4-2.h, s/bsd4-3.h:
	* s/hpux.h: Don't define HAVE_VFORK.

	* s/gnu-linux.h: Don't define HAVE_VFORK or HAVE_SYS_SIGLIST.

	* s/nextstep.h: Don't define HAVE_ALLOCA.

	* config.in: Add vfork bits.

2000-02-12  Gerd Moellmann  <gerd@gnu.org>

	* process.c (Fopen_network_stream) [POLL_FOR_INPUT]: Register
	unwind function to undo the effect of stopping atimers.

	* keyboard.c (bind_polling_period): Stop all timers except
	poll_timer.

	* atimer.c (stopped_atimers): New variable.
	(stop_other_atimers, run_all_atimers, unwind_stop_other_atimers):
	New functions.

	* atimer.h (stop_other_atimers, run_all_atimers)
	(unwind_stop_other_atimers): Add function prototypes.

	* s/hpux10.h (HAVE_XRMSETDATABASE): Define if not already defined.

2000-02-11  Ken Raeburn  <raeburn@gnu.org>

	* Makefile.in (LIBX): Link in tiff library before jpeg, since tiff
	library may depend on jpeg.
	(atimer.o): Depends on atimer.c.

2000-02-11  Kenichi Handa  <handa@etl.go.jp>

	* insdel.c (del_range_1): Call update_compositions.
	(del_range_both): Call update_compositions just once..

2000-02-10  Dave Love  <fx@gnu.org>

	* xfns.c (create_frame_xic): Fix initialization of automatic
	aggregates for pcc.

2000-02-09  Kenichi Handa  <handa@etl.go.jp>

	* ccl.c (CCL_MAKE_CHAR): New macro.
	(ccl_driver) <CCL_TranslateCharacter>: Check the validity of
	registers by CCL_MAKE_CHAR before calling translate_char.
	<CCL_TranslateCharacterConstTbl> Likewise.

2000-02-08  Dave Love  <fx@gnu.org>

	* lread.c (__EXTENSIONS__): Define.

2000-02-08  Gerd Moellmann  <gerd@gnu.org>

	* puresize.h (BASE_PURESIZE): Increase to 650000.

2000-02-07  Eli Zaretskii  <eliz@is.elta.co.il>

	* msdos.c (XMenuActivate): Turn off the cursor after displaying
	the help message.

2000-02-07  Eli Zaretskii <eliz@is.elta.co.il>

	* s/msdos.h (INTERNAL_TERMINAL): Add capabilities se, so, us, ue,
	md, mh, mb, mr, and me to the fake termcap entry.

2000-02-06  Ken Raeburn  <raeburn@gnu.org>

	* sound.c (sound_cleanup): Don't call device close routine if the
	function pointer is null.

2000-02-06  Andrew Innes  <andrewi@gnu.org>

	* dispextern.h: Change HAVE_X_WINDOWS to HAVE_WINDOW_SYSTEM,
	around image definitions and prototypes.
	(gamma_correct) [WINDOWSNT]: New prototype.

	* w32term.c (x_make_frame_visible): Replace call to
	input_poll_signal with poll_for_input.

	* window.c [WINDOWSNT]: Include w32term.h.

	* xdisp.c [WINDOWSNT]: Include w32term.h.

	* makefile.nt: Add dependencies on w32gui.h.
	(OBJ1): Include atimer.obj.
	($(BLD)\atimer.obj): New dependency rule.

	* w32.c (sigmask): New function (does nothing).
	(sigunblock): Ditto.

	* frame.c [WINDOWSNT]: Include w32term.h.

	* w32gui.h (struct W32FontStruct): Add ascent and descent slots.

	* lread.c (syms_of_lread): Fix literal newlines.

	* emacs.c (USAGE): Split into USAGE1 and USAGE2, to work-around
	the string constant limit (2048 bytes) in MSVC.
	(main): Ditto.

2000-02-05  INOUE Seiichiro <inoue@ainet.or.jp>

	* xterm.c (x_display_and_set_cursor) [HAVE_X_I18N]: Set pre-edit
	area.
	(x_display_cursor) [HAVE_X_I18N]: Don't set it here.
	(XTread_socket) [HAVE_X_I18N]: <KeyPress, KeyRelease>: Don't
	dispatch the event.

2000-02-04  Dave Love  <fx@gnu.org>

	* fileio.c: Remove some unused vars.
	(_GNU_SOURCE): Define (for euidaccess).

	* lread.c (_XOPEN_SOURCE): Declare (for ftello).

	* minibuf.c (read_minibuf_noninteractive): Remove undeclared
	gcpro1, gcpro2.
	(read_minibuf): Deal with allow_props correctly.

2000-02-03  Eli Zaretskii  <eliz@is.elta.co.il>

	* s/msdos.h (SYSTEM_PURESIZE_EXTRA): Enlarge to 60000.

2000-02-03  Ken Raeburn  <raeburn@gnu.org>

	* search.c (compile_pattern): If a cache entry has a nil regexp,
	fill in that entry instead of clobbering a previously cached
	string regexp.

2000-02-02  Ken Raeburn  <raeburn@gnu.org>

	* puresize.h (BASE_PURESIZE): Increase to 610000.

2000-02-02  Gerd Moellmann  <gerd@gnu.org>

	* frame.c (Fframe_parameters): Add GCPRO because tty_color_name
	can GC.

2000-02-02  Kenichi Handa  <handa@etl.go.jp>

	* ccl.c (ccl_driver) <CCL_WriteExprRegister>: Set jump_address
	instead of incrementing ic directly.
	<CCL_WriteExprConst> Likewise.
	<ccl_set_expr>: Set ic to jump_address.

	* fileio.c (e_write): Fix the handling of
	CODING_FINISH_INSUFFICIENT_SRC.

2000-02-01  Dave Love  <fx@gnu.org>

	* editfns.c (Fpropertize): Doc fix.

	* process.c (Fstart_process): Doc fix.

	* eval.c: Fix various doc strings not to duplicate information
	from help-manyarg-func-alist.

	* window.c (Fset_window_margins): Don't make interactive.  Doc
	fix.

	* doc.c (Vhelp_manyarg_func_alist): New variable.
	(Fdocumentation): Use it.
	(syms_of_doc): Define it.

2000-01-31  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (xim_open_dpy): Remove unused local variable.

	* emacs.c (USAGE): Use term `display options' instead of `X
	options'.

	* xdisp.c (Ftrace_to_stderr) [GLYPH_DEBUG]: New function.
	(syms_of_xdisp) [GLYPH_DEBUG]: Defsubr it.

	* fns.c (sweep_weak_table): New function.
	(sweep_weak_hash_tables): Use it.  Keep on marking until there
	is no more change.

2000-01-30  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_delete_display): Update next_noop_dpyinfo to ensure
	that XTread_socket does not crash by trying to call XNoOp on a
	closed display.

2000-01-30  Jason Rumney  <jasonr@gnu.org>

	* w32inevt.c (get_frame, w32_console_mouse_position, mouse_moved_to):
	Change selected_frame to SELECTED_FRAME ().
	(w32_console_mouse_position): Remove #ifndef MULE from around
	`insist' parameter.

	* makefile.nt: Remove dosfns.obj.

	* term.c (term_init) [WINDOWSNT]: Initialize TN_max_colors.

	* w32fns.c (w32_defined_color): Check for valid frame before
	applying gamma correction. Eliminate dependency on frame elsewhere.
	(w32_load_system_font): Switch FIXED_PITCH and VARIABLE_PITCH.
	(w32_to_x_font): Use resx and resy not height_in and width_in.
	(x_to_w32_font): Doc fix.
	(xlfd_strip_height): New function to strip and return font height.
	(w32_font_match): Compare height separately from rest of xlfd
	spec, using xlfd_strip_height.

	* w32term.c (w32_term_init): Swap resx and height_in, resy and
	width_in. Use w32_defined_color in place of defined_color.

	* w32faces.c: Merge more of DOS and X specifics in preparation for
	merge with xfaces.c.
	(defined_color): Remove FIXME comment.
	(tty_color_name): Provide w32-specific function.
	(realize_tty_face): Handle FACE_TTY_DEFAULT*_COLOR specially.

	* w32console.c (turn_on_face, turn_off_face): Removed.
	(w32_face_attributes): New function.
	(Global_variables): Reduce scope where possible.
	(clear_frame, ins_del_lines, scroll_line): Use char_attr_normal as
	fill attribute.
	(hl_mode): Don't modify text attributes.
	(write_glyphs): Don't do anything if len <= 0. Use
	w32_face_attributes to get attributes for drawing. Write
	terminating codes using char_attr_normal.
	(reset_terminal_modes, set_terminal_modes): Turn off highlight.
	(update_begin, update_end): Likewise.
	(vga_stdcolor_name): New function.
	(initialize_w32_display): Remove char_attr_reverse and char_attr.
	(Fset_screen_color): Remove char_attr_reverse.

2000-01-29  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c (xic_set_preeditarea): Take window parameter and
	window-relative pixel-positions.

	* xterm.c (x_display_cursor): Set XIC pre-edit area only if window
	is its frame's selected window.
	(xim_instantiate_callback): Likewise.

	* xfns.c (x_create_im): Removed.
	(DEFAULT_STYLE, DEFAULT_FONT): Removed.
	(supported_xim_styles): Renamed from supported_styles.
	(best_xim_style): Renamed from best_style.
	(create_frame_xic): Renamed from xic_create_frame.
	(free_frame_xic): Renamed from xic_destroy_frame.

2000-01-29  INOUE Seiichiro <inoue@ainet.or.jp>

	* xterm.c (XTread_socket) [HAVE_X_I18N]: If event is for none of
	our frames, call XFilterEvent with 2nd parameter `None'.
	(XTread_socket) <KeyPress> [HAVE_X_I18N]: Handle XmbLookupString
	returning XBufferOverflow.
	(XTread_socket) <ConfigureNotify> [HAVE_X_I18N]: Set XIC status
	area.
	(x_display_cursor) [HAVE_X_I18N]: Set XIC pre-edit area.
	(x_new_fontset) [HAVE_X_I18N]: Create XIC status area fontset.
	(xim_destroy_callback, xim_open_dpy, xim_instantiate_callback)
	(xim_initialize, xim_close)
	[HAVE_X_I18N && HAVE_X11R6]: New functions.
	(x_destroy_window) [HAVE_X_I18N]:  Call xic_destroy_frame.
	(x_term_init) [HAVE_X_I18N]: Call xim_initialize.
	(x_delete_display) [HAVE_X_I18N]: Call xim_close.

	* xterm.h (struct x_display_info) [HAVE_X_I18N]: Add members `xim'
	and `xim_styles'.
	(struct x_output) [HAVE_X_I18N]: Remove member `xim', add
	`xic_style' and `xic_xfs'.
	(FRAME_MENUBAR_HEIGHT, FRAME_X_XIM, FRAME_X_XIM_STYLES)
	(FRAME_XIC_STYLE, FRAME_XIC_FONTSET): New macros.
	(FRAME_XIM): Removed.

	* xfns.c (supported_styles): New variable.
	(DEFAULT_STYLE, DEFAULT_FONT): New macros
	(xic_create_xfontset, best_style, xic_create_frame)
	(xic_destroy_frame, xic_set_preeditarea, xic_set_statusarea)
	(xic_set_xfontset): New functions.

2000-01-28  Dave Love  <fx@gnu.org>

	* s/irix6-5.h: Revert last change after change to irix5-0.h.

	* m/iris4d.h (C_SWITCH_MACHINE): Don't use -G0.

2000-01-28  Gerd Moellmann  <gerd@gnu.org>

	* buffer.c (Fother_buffer): Don't call Fset_buffer_major_mode
	for *scratch* if it already existed.

	* emacs.c (USAGE): New macro.
	(main): Use it to display usage information.

2000-01-27  Eli Zaretskii  <eliz@is.elta.co.il>

	Support for the menu-help feature:

	* msdos.h: Change prototypes of XMenuAddSelection and
	XMenuActivate.

	* msdos.c (IT_clear_end_of_line): Print the extent of the cleared
	part of the line to the termscript file.
	(IT_clear_to_end): Clear the entire line, not just its beginning.
	(menu_help_message, prev_menu_help_message): New variables.
	(IT_menu_make_room): Make room for the help_text member.
	(IT_menu_display): New argument disp_help; all callers changed.
	If disp_help is non-zero, store the help text of the active menu
	item in menu_help_message.
	(XMenuAddPane): Initialize the help_text member to NULL.
	(XMenuAddSelection): New argument help_text.  Store it in the
	XMenu structure.
	(XMenuActivate): New argument help_callback.  If the value of
	menu_help_message has changed since the last time, display the
	menu help message text while waiting for the mouse to move.  Clear
	the echo area before exiting.
	(XMenuDestroy): Free the help_text member.

2000-01-27  Gerd Moellmann  <gerd@gnu.org>

	* xmenu.c (xmenu_show) [!USE_X_TOOLKIT]: Pass help to
	XMenuAddSelection.  Pass help callback to XMenuActivate.
	(menu_help_callback) [!USE_X_TOOLKIT]: New function.

2000-01-27  Eli Zaretskii  <eliz@is.elta.co.il>

	* atimer.c (start_atimer) [!HAVE_SETITIMER]: Use EMACS_SET_SECS
	and EMACS_SET_USECS.

2000-01-26  Dave Love  <fx@gnu.org>

	* editfns.c (Fchar_after, Fchar_before): Doc fix.

	* bytecode.c (Fbyte_code): Use {BEFORE,AFTER}_POTENTIAL_GC where
	an error may be signalled.

2000-01-26  Gerd Moellmann  <gerd@gnu.org>

	* s/irix6-5.h [__GNUC__ && __GNUC_MINOR__ >= 95]: Undef
	LD_SWITCH_SYSTEM inherited from irix5-0.h.

	* bytecode.c (Fbyte_code) [BYTE_CODE_SAFE]: Fix typo.

2000-01-25  Gerd Moellmann  <gerd@gnu.org>

	* charset.c (Fstring): If there is a multibyte char among
	the args, always return a multibyte string.

2000-01-25  Gerd Moellmann  <gerd@gnu.org>

	* sysdep.c (sys_select): Turn atimers off and on instead of
	recording and restoring old alarm handler

	* process.c (toplevel): Include atimer.h.
	(create_process_1): Rewritten.
	(create_process): Use atimers instead of alarm.
	(wait_reading_process_input) [hpux]: Turn atimers off instead
	of turning off SIGALRM.
	(wait_reading_process_input): Turn off atimers instead off
	calling stop_polling.

	* emacs.c (main): Call init_atimer.

	* keyboard.c (toplevel): Include systime.h and atimer.h.
	(polling_for_input): Removed because unused.
	(input_poll_signal) [POLL_FOR_INPUT]: Removed.
	(poll_timer): New variable.
	(poll_for_input, poll_for_input_1): New functions.
	(start_polling, stop_polling): Rewritten.

	* keyboard.h (polling_for_input): Removed.

	* atimer.h, atimer.c: New files.

	* Makefile.in (obj): Add atimer.o.
	(atimer.o): New target.

	* blockinput.h (pending_atimers): Add extern declaration.
	(UNBLOCK_INPUT): Rewritten.  Handle pending atimers.

	* lisp.h (popup_activated_flag): Add extern declaration.

	* xmenu.c (popup_activated_flag): Make externally visible.
	(popup_activate_callback) [USE_MOTIF]: Increment
	popup_activated_flag.
	(popup_deactivate_callback) [USE_MOTIF]: Decrement it.

	* xterm.c (toplevel): Include atimer.h.
	(toolkit_scroll_bar_interaction): New variable.
	(Fxt_process_timeouts): Removed.
	(x_process_timeouts): New function.
	(xt_action_hook): Clear toolkit_scroll_bar_interaction.
	(x_send_scroll_bar_event): Set toolkit_scroll_bar_interaction.
	(x_make_frame_visible): Call poll_for_input_1 instead of
	input_poll_signal.  Don't call alarm.
	(x_initialize): Install timer calling x_process_timeouts.

2000-01-24  Dave Love  <fx@gnu.org>

	* s/irix5-0.h: Don't set LD_SWITCH_SYSTEM -- we use unexelf now.
	Don't use -cckr -- apparently not now necessary.

2000-01-24  Eli Zaretskii  <eliz@is.elta.co.il>

	* msdos.c (IT_menu_display): Truncate long menu lines at the right
	screen boundary.

2000-01-23  Jason Rumney  <jasonr@gnu.org>

	* w32fns.c (w32_defined_color): Apply gamma correction before
	trying to map to the palette.
	(w32_wnd_proc) [WM_ERASE_BACKGROUND]: Pass device context of frame
	to w32_clear_rect.

	* w32term.c (w32_fill_rect): Do not try to deal with NULL hdc
	here. Callers changed to always pass real device context.
	(w32_draw_bitmap): Likewise.
	(w32_get_glyph_overhangs): Likewise.
	(w32_draw_box_rect): Make use of s->hdc rather than getting a new
	one.
	(w32_set_vertical_scroll_bar): Pass correct HWND parameters to
	pfnSetScrollInfo and SetScrollRange.
	(x_get_char_face_and_encoding): Don't turn iso8859-1 characters
	back into MULE characters after decoding them.
	(x_get_glyph_face_and_encoding): Likewise.
	(w32_per_char_metric): Use GetCharExtentPoint32W as fallback when
	GetCharABCWidthsW fails, since this is defined on Windows 9x.
	(x_produce_glyphs): Calculate per char metrics for a character
	that we know exists in default font when font_not_found_p is true.

2000-01-22  Jason Rumney <jasonr@gnu.org>

	* makefile.nt (intervals.obj, composite.obj): New modules.
	(composite.h): Added as dependency where appropriate.

	* w32gui.h (XGCValue): New struct for emulating X GCs.

	* w32term.h (XCharStruct): New struct for emulating X.

	* w32console.c (turn_on_face, turn_off_face): New functions.
	(change_line_highlight): New prototype for new redisplay.
	(write_glyphs): Support multibyte text. Support faces.

	* w32faces.c: Complete rewrite for new redisplay based on new
	xfaces.c.

	* w32fns.c: Use SELECTED_FRAME macro in place of selected_frame
	throughout. struct frame * in place of FRAME_PTR.
	Skeleton support for images, toolbars, tooltips from xfns.c.
	(Fx_create_frame): Use system default for default scroll bar
	width.
	(w32_get_arg): Renamed from x_get_arg.
	(Fx_file_dialog): New function.
	(w32_list_fonts): Check cache before asking system.
	(Vw32_enable_synthesized_fonts): New variable.
	(Vw32_enable_italics): Obsolete, removed.

	* w32inevt.c (get_frame, w32_console_mouse_position, mouse_moved_to):
	Use SELECTED_FRAME macro.

	* w32menu.c: Add skeleton support for help strings on menus.
	(add_menu_item): Native checkbox and radio support added, but not
	yet enabled due to bugs.
	(push_menu_item): Add parameters type, selection and help.
	Callers updated.
	Formatting changes to reduce unnecessary diffs with xmenu.c.

	* w32select.c (Fw32_set_clipboard_data): Update call to
	find_charset_in_str.

	* w32term.c: Complete rewrite for new redisplay based on new
	xterm.c with necessary sections merged back in from old w32term.c.

2000-01-21  Richard M. Stallman  <rms@gnu.org>

	* data.c (set_internal): Further fix in same criterion.

2000-01-20  Richard M. Stallman  <rms@gnu.org>

	* data.c (set_internal): Fix the criteria for whether
	to swap out the old cached binding.

2000-01-19  Dave Love  <fx@gnu.org>

	* lread.c: (syms_of_lread) [user-init-file]: Doc change.

2000-01-18  Kenichi Handa  <handa@etl.go.jp>

	* regex.c (re_compile_fastmap): While checking a range table for
	`charset', skip flag bits for a character class correctly.

2000-01-17  Gerd Moellmann  <gerd@gnu.org>

	* m/news-risc.h (LD_SWITCH_MACHINE): Define differently for GCC.

	* xfns.c (x_window): Call lw_create_widget with new parameter
	list.

	* widget.c (EmacsFrameSetCharSize): Change size of children first
	because of problems with main window geometry management under
	Lesstif.

	* xmenu.c (enum menu_item_idx): New enumeration replacing defines
	MENU_ITEMS_ITEM_.*.
	(MENU_ITEMS_ITEM_HELP): New enumerator.
	(push_menu_item): Add parameter HELP.  Record help in menu_items.
	(single_menu_item, single_submenu, list_of_items): Call
	push_menu_item with new parameter.
	(single_submenu): Set help string in widget value.
	(menu_highlight_callback): New function.
	(set_frame_menubar): Call lw_create_widget with new
	parameter list.
	(xmenu_show, xdialog_show): Ditto.

2000-01-13  Gerd Moellmann  <gerd@gnu.org>

	* sound.c (Fplay_sound): Improve doc string.

2000-01-11  Richard M. Stallman  <rms@gnu.org>

	* lisp.h (set_internal): Enter the new arg.

	* eval.c (specbind): Record buffer-local variables specially,
	indicating which buffer's binding was saved.
	(unbind_to): Restore buffer-local variables specially
	in the proper buffer.

	* data.c (set_internal): New arg BUF.

	* eval.c (specbind, unbind_to): Pass new arg to set_internal.
	* data.c (Fset): Pass new arg to set_internal.
	* bytecode.c (Fbyte_code): Pass new arg to set_internal.

2000-01-11  Gerd Moellmann  <gerd@gnu.org>

	* .gdbinit: Adapt to new strings.  Add xbacktrace, xreload,
	xprintsym.

2000-01-11  Richard M. Stallman  <rms@gnu.org>

	* minibuf.c (Ftry_completion): Doc fix.

2000-01-11  Gerd Moellmann  <gerd@gnu.org>

	* keyboard.c (Fclear_this_command_keys): Clear recent_keys
	vector, too.

2000-01-11  Andreas Schwab  <schwab@suse.de>

	* coding.c (code_convert_region): Initialize total_skip.

2000-01-08  Dave Love  <fx@gnu.org>

	* eval.c (Fuser_variable_p): Check customizability too.

2000-01-07  Gerd Moellmann  <gerd@gnu.org>

	* minibuf.c (Fcompleting_read): Doc fix.

2000-01-05  Gerd Moellmann  <gerd@gnu.org>

	* s/freebsd.h (C_SWITCH_SYSTEM): Add -I /usr/local/include and
	-L /usr/local/lib.

	* xfns.c (x_create_im): New function to set IM and IC of a frame.
	Check that input style is supported before trying to create an
	IC for it.
	(x_window): Call x_create_im.

2000-01-04  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c (current_gif_memory_src): New variable.
	(gif_load): Record the address of the current memory source
	in current_gif_memory_src.
	(gif_read_from_memory): Use current_gif_memory_src.

	* systime.h (EMACS_GET_TIME, EMACS_ADD_TIME, EMACS_SUB_TIME): Give
	macros statement form.

	* sound.c (struct sound): Renamed from struct sound_file.
	(struct sound): Add members `data' and `header_size'.
	(enum sound_attr): Add SOUND_DATA.
	(current_sound, current_sound_device): Variables renamed from
	sound_file and sound_device.
	(parse_sound): Parse :data.
	(parse_sound): Handle sound data in strings.
	(find_sound_type): Function renamed from find_sound_file_type.
	(wav_init, au_init): Fail if sound's header_size is smaller than
	needed header size.
	(wav_play, au_play): Play sounds from string data.

	* puresize.h (BASE_PURE_SIZE): Increase to 600000.

	* lisp.h: Add prototype for allocate_string_data.

	* alloc.c (Fgarbage_collect): Return number of live and free
	strings.

	* alloc.c (mark_buffer): Remove code in #if 0.
	(gc_sweep): Ditto.
	(UNMARK_BALANCE_INTERVALS): Give the macro statement form.
	(strings_consed): New variable.
	(allocate_string): Set it.
	(syms_of_alloc): Add DEFVAR_INT for strings_consed.
	(Fmemory_use_counts): Return strings_consed.  Use Flist.

	* alloc.c: General cleanup in comments etc.  Remove conditional
	compilation for `standalone'.

	* lisp.h (struct Lisp_String): Make DATA member `unsigned char *'.

	* alloc.c (MARK_STRING, UNMARK_STRING, STRING_MARKED_P):
	(GC_STRING_BYTES, GC_STRING_CHARS): New macros.
	(DONT_COPY_FLAG): Removed.
	(SBLOCK_SIZE, LARGE_STRING_BYTES): New macros.
	(struct sdata, struct sblock): New
	(struct string_block): Rewritten.
	(STRINGS_IN_STRING_BLOCK): New macro.
	(oldest_sblock, current_sblock, total_strings, total_free_strings)
	(large_sblocks, string_blocks, string_free_list): New variables.
	(NEXT_FREE_LISP_STRING, SDATA_OF_STRING, SDATA_SIZE): New macros.
	(init_strings): Rewritten.
	(allocate_string, allocate_string_data, compact_small_strings)
	(free_large_strings, sweep_strings): New functions.
	(STRING_BLOCK_SIZE, STRING_BLOCK_OUTSIZE)
	(struct string_block_head, current_string_block)
	(first_string_block, large_string_blocks, STRING_FULLSIZE)
	(STRING_PAD): Removed.
	(make_uninit_multibyte_string, make_pure_string): Rewritten.
	(Fgarbage_collect): Don't set mark bit in large strings.
	(mark_object): Mark strings differently.  Mark symbol names
	differently.
	(survives_gc_p): Test marked strings differently.
	(gc_sweep): Sweep strings differently, unmark strings in
	symbol names.
	(compact_strings): Removed.

2000-01-04  Eli Zaretskii  <eliz@is.elta.co.il>

	* xfaces.c (syms_of_xfaces): defsubr Scolor_gray_p and
	Scolor_supported_p even if HAVE_X_WINDOWS is not defined.

2000-01-04  Kenichi Handa  <handa@etl.go.jp>

	* fileio.c (Finsert_file_contents): Signal error if visiting file
	in a non-empty buffer.

	* term.c (encode_terminal_code): Fix the previous change.

2000-01-03  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (syms_of_xfaces): Change Sface_color_gray_p to
	Scolor_gray_p, Sface_color_supported_p to Scolor_supported_p.

	* s/hpux9.h (NO_EDITRES): Define even if HAVE_LIBXMU.

2000-01-03  Eli Zaretskii  <eliz@is.elta.co.il>

	* xdisp.c (handle_single_display_prop) [HAVE_WINDOW_SYSTEM]: No
	need to test for MSDOS frames.

2000-01-03  Eli Zaretskii  <eliz@is.elta.co.il>

	* dosfns.c (unspecified_colors): Remove.
	(msdos_stdcolor_idx): Use global variables unspecified_fg and
	unspecified_bg.
	(msdos_stdcolor_name): Return strings for unspecified fore- and
	back-ground colors.

	* xfaces.c (Qunspecified_fg, Qunspecified_bg): Remove.
	(syms_of_xfaces): Remove their staticpro's.
	(tty_color_name): Return Lisp strings for unspecified fore- and
	back-ground colors.
	(Finternal_set_lisp_face_attribute): Remove the special treatment
	for Qunspecified_{f,b}g.
	(realize_default_face): Replace Qunspecified_{f,b}g with a Lisp
	string.

2000-01-03  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (reseat_at_next_visible_line_start): Position before
	newline only if ending up on a newline.
	(next_element_from_ellipsis): Return success.  Handle case of
	displaying no ellipsis.  Fix case of ellipsis defined in display
	table.
	(next_element_from_buffer): Return 0 if next_element_from_ellipsis
	returns 0.

2000-01-03  Eli Zaretskii  <eliz@is.elta.co.il>

	* xfaces.c (Fcolor_gray_p): Renamed from face-color-gray-p.
	(Fcolor_supported_p): Renamed from face-color-supported-p.

2000-01-02  Eli Zaretskii  <eliz@is.elta.co.il>

	* xfaces.c (tty_defined_color): Pass frame to tty-color-desc.  The
	list of colors renamed to tty-defined-color-alist.
	(tty_color_name): Pass the frame to tty-color-by-index.
	(realize_tty_face): tty-color-alist is now a function which
	accepts the frame as argument.

	* term.c (Ftty_display_color_p): Accept an optional argument
	FRAME.

2000-01-02  Eli Zaretskii  <eliz@is.elta.co.il>

	* term.c (insert_glyphs): Pass glyph, not &glyph, to
	encode_terminal_code.

2000-01-02  Eli Zaretskii  <eliz@is.elta.co.il>

	* dispnew.c (mode_line_string): Support termcap frames as well.

2000-01-01  Gerd Moellmann  <gerd@gnu.org>

	* syntax.c (Fforward_word): Undo previous change.

	* editfns.c (Fconstrain_to_field): Don't constrain if
	inhibit-field-text-motion is non-nil.
	(Fline_beginning_position): Undo previous change.
	(Fline_end_position): Ditto.

	* syntax.c (Fforward_word): Notice field boundaries only if
	inhibit-field-text-motion is nil.

	* lisp.h: Add extern declaration for Vinhibit_field_text_motion.

	* editfns.c (Vinhibit_field_text_motion): New variable.
	(inhibit-field-text-motion): New DEFVAR_LISP.
	(Fline_beginning_position, Fline_end_position): Notice field
	boundaries only if inhibit-field-text-motion is nil.

	* xfns.c (x_create_x_image_and_pixmap): Remove parameter FILE.
	All calls adjusted.
	(x_build_heuristic_mask): Likewise.
	(xbm_load_image_from_file): Change error output.
	(xbm_load, xpm_load, pbm_load, png_load, jpeg_load, tiff_load)
	(gif_load, gs_load, x_kill_gs_process): Ditto.

	* xfns.c (gif_load): Avoid sign extension and thus out of bounds
	color indices when accessing raster pixels.
	(gif_image_p, png_image_p, jpeg_image_p, tiff_image_p): Allow only
	one of :file or :data.
	(enum pbm_keyword_index): Add PBM_DATA.
	(pbm_format): Add :data.
	(pbm_image_p): Allow either :file or :data.
	(pbm_read_file): New function.
	(pbm_scan_number): Rewritten to read from string.
	(pbm_load): Support :data.

See ChangeLog.8 for earlier changes.

;; Local Variables:
;; coding: iso-2022-7bit
;; End:
