# DIST: This is the distribution Makefile for Emacs.  configure can
# DIST: make most of the changes to this file you might want, so try
# DIST: that first.

# add -DUSG for SysV movemail and timer
# For Xenix, add the following for movemail:
#  LOADLIBES= -lx
# For Mips, the following is needed for who knows what.
#  LOADLIBES = -lmld /usr/bsd43/usr/lib/libc.a

# Avoid trouble on systems where the `SHELL' variable might be
# inherited from the environment.
SHELL = /bin/sh

# ==================== Things `configure' might edit ====================

CC=cc
CFLAGS=-g
ALLOCA=
C_SWITCH_SYSTEM=
LOADLIBES=
version=version-not-set
configname=configuration-name-not-set

# ==================== Where To Install Things ====================

# The default location for installation.  Everything is placed in
# subdirectories of this directory.  The default values for many of
# the variables below are expressed in terms of this one, so you may
# not need to change them.
prefix=/usr/local

# Like `prefix', but used for architecture-specific files.
exec_prefix=${prefix}

# Where to install Emacs and other binaries that people will want to
# run directly (like etags).
bindir=${exec_prefix}/bin

# Where to install and expect executable files to be run by Emacs
# rather than directly by users, and other architecture-dependent
# data.  ${archlibdir} is usually below this.
libdir=${exec_prefix}/lib

# Where to find the source code.  This is
# set by the configure script's `--srcdir' option.
# However, the value of ${srcdir} in this makefile
# is not identical to what was specified with --srcdir.
# The variable here has `/lib-src' added at the end.
srcdir=@srcdir@/lib-src
VPATH=@srcdir@/lib-src

# ==================== Emacs-specific directories ====================

# These variables hold the values Emacs will actually use.  They are
# based on the values of the standard Make variables above.

# Where to put executables to be run by Emacs rather than the user.
# This path usually includes the Emacs version and configuration name,
# so that multiple configurations for multiple versions of Emacs may
# be installed at once.
archlibdir=${libdir}/emacs/${version}/${configname}

# ====================== Developer's configuration =======================

# The following assignments make sense if you're running Emacs on a single
# machine, one version at a time, and  you want changes to the lisp and etc
# directories in the source tree to show up immediately in your working
# environment.  It saves a great deal of disk space by not duplicating the
# lisp and etc directories.
#
# archlibdir=${srcdir}/bin

# ==================== Utility Programs for the Build ====================

# Allow the user to specify the install program.
INSTALL = install
INSTALLFLAGS = -c
INSTALL_PROGRAM = ${INSTALL}
INSTALL_DATA = ${INSTALL}

# ============================= Targets ==============================

# Things that a user might actually run, which should be installed in bindir.
INSTALLABLES = etags ctags emacsclient b2m
INSTALLABLE_SCRIPTS = rcs-checkin

# Things that Emacs runs internally, or during the build process,
# which should not be installed in bindir.
UTILITIES= test-distrib make-path wakeup make-docfile digest-doc sorted-doc \
	movemail cvtmail fakemail yow env emacsserver hexl timer

# Like UTILITIES, but they're not system-dependent, and should not be
# deleted by the distclean target.
SCRIPTS= rcs2log vcdiff

EXECUTABLES= ${UTILITIES} ${INSTALLABLES} ${SCRIPTS} ${INSTALLABLE_SCRIPTS}

SOURCES = COPYING ChangeLog Makefile.in README aixcc.lex emacs.csh \
	makedoc.com *.[chy] rcs2log vcdiff

### We need to #define emacs to get the right versions of some files.
### Some other files - those shared with other GNU utilities - need
### HAVE_CONFIG_H #defined before they know they can take advantage of
### the information in ../src/config.h.
ALL_CFLAGS = ${C_SWITCH_SYSTEM} -Demacs -DHAVE_CONFIG_H \
   -I${srcdir} -I${srcdir}/../src -I. -I../src ${CFLAGS}
.c.o:
	${CC} -c ${CPPFLAGS} ${ALL_CFLAGS} $<

all: ${EXECUTABLES}

### Install the internal utilities.  Until they are installed, we can
### just run them directly from lib-src.
${archlibdir}: all
	@echo
	@echo "Installing utilities run internally by Emacs."
	./make-path ${archlibdir}
	if [ `(cd ${archlibdir} && /bin/pwd)` != `/bin/pwd` ]; then \
	  for file in ${UTILITIES} ${INSTALLABLES}; do \
	    cp $${file} ${archlibdir} ; \
	    chmod 755 ${archlibdir}/$${file} ; \
	  done ; \
	  cd ${srcdir}; for file in ${SCRIPTS} ${INSTALLABLE_SCRIPTS}; do \
	    cp $${file} ${archlibdir} ; \
	    chmod 755 ${archlibdir}/$${file} ; \
	  done ; \
        fi
	@echo
	@echo "Changing the owner and group of Emacs's utility programs to \`bin'."
	@echo "(You may ignore errors here if you don't care about this.)"
	-for file in ${EXECUTABLES} ; do \
	  chgrp bin ${archlibdir}/$${file} ; \
	  chown bin ${archlibdir}/$${file} ; \
	done

# We don't need to install `wakeup' explicitly, because it will be copied when
# this whole directory is copied.
install: ${archlibdir}
	@echo
	@echo "Installing utilities for users to run."
	for file in ${INSTALLABLES} ; do \
	  cp $${file} ${bindir}/$${file}.new ; \
	  chmod 755 ${bindir}/$${file}.new ; \
        done
	for file in ${INSTALLABLE_SCRIPTS} ; do \
	  cp ${srcdir}/$${file} ${bindir}/$${file}.new ; \
	  chmod 755 ${bindir}/$${file}.new ; \
        done
	@echo
	@echo "Changing the owner and group of utility programs to \`bin'."
	@echo "(You may ignore errors here if you don't care about this.)"
	-for file in ${INSTALLABLES}  ${INSTALLABLE_SCRIPTS} ; do \
	  chgrp bin ${bindir}/$${file}.new ; \
	  chown bin ${bindir}/$${file}.new ; \
	  rm -f ${bindir}/$${file} ; \
	  mv ${bindir}/$${file}.new ${bindir}/$${file} ; \
        done

clean mostlyclean:
	-rm -f ${INSTALLABLES} ${UTILITIES} core *.o

distclean:
	-rm -f ${INSTALLABLES} ${UTILITIES} ../etc/DOC* core *.o

realclean: distclean
	-rm TAGS aixcc.c

extraclean: realclean
	-rm -f *~ \#*

unlock:
	chmod u+w $(SOURCES)

relock:
	chmod u-w $(SOURCES)

# Test the contents of the directory.
check:
	@echo "We don't have any tests for GNU Emacs yet."

TAGS: etags
	etags *.[ch]

# This verifies that the non-ASCII characters in the file `testfile'
# have not been clobbered by whatever means were used to copy and
# distribute Emacs.  If they were clobbered, all the .elc files were
# clobbered too.
test-distrib: ${srcdir}/test-distrib.c
	$(CC) -o test-distrib ${srcdir}/test-distrib.c
	./test-distrib ${srcdir}/testfile

GETOPTOBJS = getopt.o getopt1.o $(ALLOCA)
GETOPTDEPS = $(GETOPTOBJS) ${srcdir}/getopt.h
getopt.o: ${srcdir}/getopt.c ${srcdir}/getopt.h
getopt1.o: ${srcdir}/getopt1.c ${srcdir}/getopt.h

etags: ${srcdir}/etags.c $(GETOPTDEPS)
	$(CC) ${ALL_CFLAGS} -DETAGS ${srcdir}/etags.c $(GETOPTOBJS) $(LOADLIBES) -o etags

ctags: ${srcdir}/etags.c $(GETOPTDEPS)
	$(CC) ${ALL_CFLAGS} -DCTAGS ${srcdir}/etags.c $(GETOPTOBJS) $(LOADLIBES) -o ctags

wakeup: ${srcdir}/wakeup.c
	$(CC) ${ALL_CFLAGS} ${srcdir}/wakeup.c $(LOADLIBES) -o wakeup

make-docfile: ${srcdir}/make-docfile.c
	$(CC) ${ALL_CFLAGS} ${srcdir}/make-docfile.c $(LOADLIBES) -o make-docfile

digest-doc: ${srcdir}/digest-doc.c
	$(CC) ${ALL_CFLAGS} ${srcdir}/digest-doc.c $(LOADLIBES) -o digest-doc 

sorted-doc: ${srcdir}/sorted-doc.c ${ALLOCA}
	$(CC) ${ALL_CFLAGS} ${srcdir}/sorted-doc.c ${ALLOCA} $(LOADLIBES) -o sorted-doc

b2m: ${srcdir}/b2m.c ../src/config.h
	$(CC) -I${srcdir}/../src ${ALL_CFLAGS} ${srcdir}/b2m.c $(LOADLIBES) -o b2m 

movemail: ${srcdir}/movemail.c ../src/config.h
	$(CC) -I${srcdir}/../src ${ALL_CFLAGS} ${srcdir}/movemail.c $(LOADLIBES) -o movemail

cvtmail: ${srcdir}/cvtmail.c
	$(CC) ${ALL_CFLAGS} ${srcdir}/cvtmail.c $(LOADLIBES) -o cvtmail

fakemail: ${srcdir}/fakemail.c ../src/config.h
	$(CC) -I${srcdir}/../src ${ALL_CFLAGS} ${srcdir}/fakemail.c $(LOADLIBES) -o fakemail

yow: ${srcdir}/yow.c ../src/paths.h
	$(CC) ${ALL_CFLAGS} ${srcdir}/yow.c $(LOADLIBES) -o yow

env: ${srcdir}/env.c ../src/config.h
	$(CC) -DEMACS -I${srcdir}/../src ${ALL_CFLAGS} ${srcdir}/env.c $(LOADLIBES) -o env

emacsserver: ${srcdir}/emacsserver.c ../src/config.h
	$(CC) -I${srcdir}/../src ${ALL_CFLAGS} ${srcdir}/emacsserver.c $(LOADLIBES) -o emacsserver

emacsclient: ${srcdir}/emacsclient.c ../src/config.h
	$(CC) -I${srcdir}/../src ${ALL_CFLAGS} ${srcdir}/emacsclient.c $(LOADLIBES) -o emacsclient

hexl: ${srcdir}/hexl.c
	$(CC) ${ALL_CFLAGS} ${srcdir}/hexl.c $(LOADLIBES) -o hexl

TIMEROBJS=getdate.o timer.o $(ALLOCA)
getdate.o: ${srcdir}/getdate.y ../src/config.h
	${YACC} ${YFLAGS} ${srcdir}/getdate.y
	$(CC) -I${srcdir}/../src $(ALL_CFLAGS) -c y.tab.c
	mv y.tab.o getdate.o
timer.o: ${srcdir}/timer.c ../src/config.h
	$(CC) -c -I${srcdir}/../src $(ALL_CFLAGS) ${srcdir}/timer.c
timer: ${TIMEROBJS}
	$(CC) -I${srcdir}/../src $(ALL_CFLAGS) ${TIMEROBJS} $(LOADLIBES) -o timer

make-path: ${srcdir}/make-path.c
	$(CC) $(ALL_CFLAGS) ${srcdir}/make-path.c -o make-path

# These are NOT included in INSTALLABLES or UTILITIES.
# See ../src/ymakefile.
emacstool: ${srcdir}/emacstool.c
	$(CC) ${srcdir}/emacstool.c -o emacstool ${ALL_CFLAGS} \
	  -lsuntool -lsunwindow -lpixrect $(LOADLIBES)

# For SUN Japanese Language Environment
nemacstool: ${srcdir}/emacstool.c
	$(CC) -o nemacstool -DJLE ${ALL_CFLAGS} ${srcdir}/emacstool.c \
	  -lsuntool -lmle -lsunwindow -lpixrect $(LOADLIBES)

xvetool: ${srcdir}/emacstool.c
	$(CC) -o xvetool -DXVIEW ${ALL_CFLAGS} ${srcdir}/emacstool.c \
	  -lxview -lX -I$(OPENWINHOME)/include -L$(OPENWINHOME)/lib \
	  $(LOADLIBES)

xveterm: ${srcdir}/emacstool.c
	$(CC) -o xveterm -DXVIEW -DTTERM ${ALL_CFLAGS} ${srcdir}/emacstool.c \
	  -lxview -lolgx -lX  -I$(OPENWINHOME)/include -L$(OPENWINHOME)/lib \
	  $(LOADLIBES)

aixcc: ${srcdir}/aixcc.c
	$(CC) $(ALL_CFLAGS) -o aixcc ${srcdir}/aixcc.c

aixcc.c: ${srcdir}/aixcc.lex
	lex ${srcdir}/aixcc.lex
	mv lex.yy.c aixcc.c
